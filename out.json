{
  "docs": [
    {
      "comment": "/**\n * This class repesents a guild's audit log\n */",
      "meta": {
        "range": [
          218,
          1069
        ],
        "filename": "AuditLog.js",
        "lineno": 10,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000026",
          "name": "AuditLog",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "client"
          ]
        }
      },
      "classdesc": "This class repesents a guild's audit log",
      "name": "AuditLog",
      "longname": "AuditLog",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000006",
      "___s": true
    },
    {
      "comment": "/**\n     * The webhooks of the audit log\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          353,
          385
        ],
        "filename": "AuditLog.js",
        "lineno": 18,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000036",
          "name": "this.webhooks",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The webhooks of the audit log",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "webhooks",
      "longname": "AuditLog#webhooks",
      "kind": "member",
      "memberof": "AuditLog",
      "scope": "instance",
      "___id": "T000002R000008",
      "___s": true
    },
    {
      "comment": "/**\n     * The users of the audit log\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          611,
          640
        ],
        "filename": "AuditLog.js",
        "lineno": 29,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000080",
          "name": "this.users",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The users of the audit log",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "users",
      "longname": "AuditLog#users",
      "kind": "member",
      "memberof": "AuditLog",
      "scope": "instance",
      "___id": "T000002R000010",
      "___s": true
    },
    {
      "comment": "/**\n     * The entries of the audit log\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          854,
          885
        ],
        "filename": "AuditLog.js",
        "lineno": 41,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000124",
          "name": "this.entries",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The entries of the audit log",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "entries",
      "longname": "AuditLog#entries",
      "kind": "member",
      "memberof": "AuditLog",
      "scope": "instance",
      "___id": "T000002R000012",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents an audit log entry\n */",
      "meta": {
        "range": [
          53,
          1055
        ],
        "filename": "AuditLogEntry.js",
        "lineno": 5,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000175",
          "name": "AuditLogEntry",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "client"
          ]
        }
      },
      "classdesc": "This class represents an audit log entry",
      "name": "AuditLogEntry",
      "longname": "AuditLogEntry",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000015",
      "___s": true
    },
    {
      "comment": "/**\n     * The target id\n     * @type {String}\n     */",
      "meta": {
        "range": [
          169,
          198
        ],
        "filename": "AuditLogEntry.js",
        "lineno": 13,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000185",
          "name": "this.targetID",
          "type": "MemberExpression",
          "value": "raw.target_id",
          "paramnames": []
        }
      },
      "description": "The target id",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "targetID",
      "longname": "AuditLogEntry#targetID",
      "kind": "member",
      "memberof": "AuditLogEntry",
      "scope": "instance",
      "___id": "T000002R000017",
      "___s": true
    },
    {
      "comment": "/**\n     * The changes made\n     * @type {Array}\n     */",
      "meta": {
        "range": [
          267,
          293
        ],
        "filename": "AuditLogEntry.js",
        "lineno": 20,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000193",
          "name": "this.changes",
          "type": "MemberExpression",
          "value": "raw.changes",
          "paramnames": []
        }
      },
      "description": "The changes made",
      "type": {
        "names": [
          "Array"
        ]
      },
      "name": "changes",
      "longname": "AuditLogEntry#changes",
      "kind": "member",
      "memberof": "AuditLogEntry",
      "scope": "instance",
      "___id": "T000002R000018",
      "___s": true
    },
    {
      "comment": "/**\n     * The user who made triggered the entry\n     * @type {User}\n     */",
      "meta": {
        "range": [
          382,
          423
        ],
        "filename": "AuditLogEntry.js",
        "lineno": 27,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000201",
          "name": "this.user",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The user who made triggered the entry",
      "type": {
        "names": [
          "User"
        ]
      },
      "name": "user",
      "longname": "AuditLogEntry#user",
      "kind": "member",
      "memberof": "AuditLogEntry",
      "scope": "instance",
      "___id": "T000002R000019",
      "___s": true
    },
    {
      "comment": "/**\n     * The entry's id\n     * @type {String}\n     */",
      "meta": {
        "range": [
          491,
          507
        ],
        "filename": "AuditLogEntry.js",
        "lineno": 34,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000215",
          "name": "this.id",
          "type": "MemberExpression",
          "value": "raw.id",
          "paramnames": []
        }
      },
      "description": "The entry's id",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "id",
      "longname": "AuditLogEntry#id",
      "kind": "member",
      "memberof": "AuditLogEntry",
      "scope": "instance",
      "___id": "T000002R000020",
      "___s": true
    },
    {
      "comment": "/**\n     * The type of action {@see https://discordapp.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-events}\n     * @type {String}\n     */",
      "meta": {
        "range": [
          685,
          739
        ],
        "filename": "AuditLogEntry.js",
        "lineno": 41,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000223",
          "name": "this.actionType",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The type of action {@see https://discordapp.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-events}",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "actionType",
      "longname": "AuditLogEntry#actionType",
      "kind": "member",
      "memberof": "AuditLogEntry",
      "scope": "instance",
      "___id": "T000002R000021",
      "___s": true
    },
    {
      "comment": "/**\n     * Additional information\n     * @type {Object}\n     */",
      "meta": {
        "range": [
          815,
          841
        ],
        "filename": "AuditLogEntry.js",
        "lineno": 48,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000235",
          "name": "this.options",
          "type": "MemberExpression",
          "value": "raw.options",
          "paramnames": []
        }
      },
      "description": "Additional information",
      "type": {
        "names": [
          "Object"
        ]
      },
      "name": "options",
      "longname": "AuditLogEntry#options",
      "kind": "member",
      "memberof": "AuditLogEntry",
      "scope": "instance",
      "___id": "T000002R000022",
      "___s": true
    },
    {
      "comment": "/**\n     * The reason if there is one\n     * @type {String}\n     */",
      "meta": {
        "range": [
          921,
          945
        ],
        "filename": "AuditLogEntry.js",
        "lineno": 55,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000243",
          "name": "this.reason",
          "type": "MemberExpression",
          "value": "raw.reason",
          "paramnames": []
        }
      },
      "description": "The reason if there is one",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "reason",
      "longname": "AuditLogEntry#reason",
      "kind": "member",
      "memberof": "AuditLogEntry",
      "scope": "instance",
      "___id": "T000002R000023",
      "___s": true
    },
    {
      "comment": "/**\n     * The client that is logged in \n     * @type {Client}\n     */",
      "meta": {
        "range": [
          1028,
          1048
        ],
        "filename": "AuditLogEntry.js",
        "lineno": 62,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000251",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client that is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "AuditLogEntry#client",
      "kind": "member",
      "memberof": "AuditLogEntry",
      "scope": "instance",
      "___id": "T000002R000024",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a banned user\n */",
      "meta": {
        "range": [
          81,
          465
        ],
        "filename": "BannedUser.js",
        "lineno": 7,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000357",
          "name": "BannedUser",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a banned user",
      "name": "BannedUser",
      "longname": "BannedUser",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000056",
      "___s": true
    },
    {
      "comment": "/**\n     * The client that is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          209,
          229
        ],
        "filename": "BannedUser.js",
        "lineno": 15,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000367",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client that is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "BannedUser#client",
      "kind": "member",
      "memberof": "BannedUser",
      "scope": "instance",
      "___id": "T000002R000058",
      "___s": true
    },
    {
      "comment": "/**\n     * The reason the member was banned\n     * @type {String}\n     */",
      "meta": {
        "range": [
          315,
          339
        ],
        "filename": "BannedUser.js",
        "lineno": 22,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000373",
          "name": "this.reason",
          "type": "MemberExpression",
          "value": "raw.reason",
          "paramnames": []
        }
      },
      "description": "The reason the member was banned",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "reason",
      "longname": "BannedUser#reason",
      "kind": "member",
      "memberof": "BannedUser",
      "scope": "instance",
      "___id": "T000002R000059",
      "___s": true
    },
    {
      "comment": "/**\n     * The user that was banned\n     * @type {User}\n     */",
      "meta": {
        "range": [
          415,
          458
        ],
        "filename": "BannedUser.js",
        "lineno": 29,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000381",
          "name": "this.user",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The user that was banned",
      "type": {
        "names": [
          "User"
        ]
      },
      "name": "user",
      "longname": "BannedUser#user",
      "kind": "member",
      "memberof": "BannedUser",
      "scope": "instance",
      "___id": "T000002R000060",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a category channel in a guild\n */",
      "meta": {
        "range": [
          113,
          327
        ],
        "filename": "CategoryChannel.js",
        "lineno": 7,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000407",
          "name": "CategoryChannel",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "guild",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a category channel in a guild",
      "name": "CategoryChannel",
      "longname": "CategoryChannel",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000063",
      "___s": true
    },
    {
      "comment": "/**\n * This Class is the base client for this API\n */",
      "meta": {
        "range": [
          799,
          13766
        ],
        "filename": "Client.js",
        "lineno": 22,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000534",
          "name": "Client",
          "type": "ClassDeclaration",
          "paramnames": [
            "token"
          ]
        }
      },
      "classdesc": "This Class is the base client for this API",
      "name": "Client",
      "longname": "Client",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000082",
      "___s": true
    },
    {
      "comment": "/**\n     * @type {String}\n     */",
      "meta": {
        "range": [
          915,
          933
        ],
        "filename": "Client.js",
        "lineno": 30,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000547",
          "name": "this.token",
          "type": "Identifier",
          "value": "token",
          "paramnames": []
        }
      },
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "token",
      "longname": "Client#token",
      "kind": "member",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000084",
      "___s": true
    },
    {
      "comment": "/**\n            * Used for RESUMEing.\n            * @type {String}\n            */",
      "meta": {
        "range": [
          3389,
          3426
        ],
        "filename": "Client.js",
        "lineno": 125,
        "columnno": 10,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000880",
          "name": "this.sessionID",
          "type": "MemberExpression",
          "value": "message.d.session_id",
          "paramnames": []
        }
      },
      "description": "Used for RESUMEing.",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "sessionID",
      "longname": "Client#sessionID",
      "kind": "member",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000124",
      "___s": true
    },
    {
      "comment": "/**\n           * A collection of all the users the client shares guilds with\n           * @type {Collection}\n           */",
      "meta": {
        "range": [
          3573,
          3602
        ],
        "filename": "Client.js",
        "lineno": 132,
        "columnno": 10,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000890",
          "name": "this.users",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A collection of all the users the client shares guilds with",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "users",
      "longname": "Client#users",
      "kind": "member",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000125",
      "___s": true
    },
    {
      "comment": "/**\n           * A collection of all the guilds the client is in\n           * @type {Collection}\n           */",
      "meta": {
        "range": [
          3737,
          3767
        ],
        "filename": "Client.js",
        "lineno": 139,
        "columnno": 10,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000897",
          "name": "this.guilds",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A collection of all the guilds the client is in",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "guilds",
      "longname": "Client#guilds",
      "kind": "member",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000126",
      "___s": true
    },
    {
      "comment": "/**\n           * A collection of all the channels the client shares guilds with\n           * @type {Collection}\n           */",
      "meta": {
        "range": [
          3917,
          3949
        ],
        "filename": "Client.js",
        "lineno": 146,
        "columnno": 10,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000904",
          "name": "this.channels",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A collection of all the channels the client shares guilds with",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "channels",
      "longname": "Client#channels",
      "kind": "member",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000127",
      "___s": true
    },
    {
      "comment": "/**\n           * A collection of all of the messages sent when the client was ready\n           * @type {Collection}\n           */",
      "meta": {
        "range": [
          4103,
          4135
        ],
        "filename": "Client.js",
        "lineno": 153,
        "columnno": 10,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000911",
          "name": "this.messages",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A collection of all of the messages sent when the client was ready",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "messages",
      "longname": "Client#messages",
      "kind": "member",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000128",
      "___s": true
    },
    {
      "comment": "/**\n           * A collection of all of the presences of the user's the client shares guilds with\n           * @type {Collection}\n           */",
      "meta": {
        "range": [
          4303,
          4336
        ],
        "filename": "Client.js",
        "lineno": 160,
        "columnno": 10,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000918",
          "name": "this.presences",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A collection of all of the presences of the user's the client shares guilds with",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "presences",
      "longname": "Client#presences",
      "kind": "member",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000129",
      "___s": true
    },
    {
      "comment": "/**\n           * The date when the client logged in\n           * @type {Date}\n           */",
      "meta": {
        "range": [
          4452,
          4479
        ],
        "filename": "Client.js",
        "lineno": 167,
        "columnno": 10,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000925",
          "name": "this.readyTime",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The date when the client logged in",
      "type": {
        "names": [
          "Date"
        ]
      },
      "name": "readyTime",
      "longname": "Client#readyTime",
      "kind": "member",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000130",
      "___s": true
    },
    {
      "comment": "/**\n           * The pings of the client\n           * @type {Array}\n           */",
      "meta": {
        "range": [
          4585,
          4600
        ],
        "filename": "Client.js",
        "lineno": 174,
        "columnno": 10,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000932",
          "name": "this.pings",
          "type": "ArrayExpression",
          "value": "[]",
          "paramnames": []
        }
      },
      "description": "The pings of the client",
      "type": {
        "names": [
          "Array"
        ]
      },
      "name": "pings",
      "longname": "Client#pings",
      "kind": "member",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000131",
      "___s": true
    },
    {
      "comment": "/**\n           * The latency of the client, an average of pings\n           * @type {Number}\n           */",
      "meta": {
        "range": [
          4730,
          4746
        ],
        "filename": "Client.js",
        "lineno": 181,
        "columnno": 10,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000938",
          "name": "this.latency",
          "type": "Literal",
          "value": 0,
          "paramnames": []
        }
      },
      "description": "The latency of the client, an average of pings",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "latency",
      "longname": "Client#latency",
      "kind": "member",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000132",
      "___s": true
    },
    {
      "comment": "/**\n           * The client's user object\n           * @type {User}\n           */",
      "meta": {
        "range": [
          4852,
          4894
        ],
        "filename": "Client.js",
        "lineno": 188,
        "columnno": 10,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000944",
          "name": "this.user",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The client's user object",
      "type": {
        "names": [
          "User"
        ]
      },
      "name": "user",
      "longname": "Client#user",
      "kind": "member",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000133",
      "___s": true
    },
    {
      "comment": "/**\n           * A collection of the client's emojis\n           * @type {Collection}\n           */",
      "meta": {
        "range": [
          5017,
          5047
        ],
        "filename": "Client.js",
        "lineno": 195,
        "columnno": 10,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100000957",
          "name": "this.emojis",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A collection of the client's emojis",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "emojis",
      "longname": "Client#emojis",
      "kind": "member",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000134",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Destroys the client process\n   */",
      "meta": {
        "range": [
          10440,
          10475
        ],
        "filename": "Client.js",
        "lineno": 336,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100001981",
          "name": "Client#destroy",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Destroys the client process",
      "name": "destroy",
      "longname": "Client#destroy",
      "kind": "function",
      "memberof": "Client",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000168",
      "___s": true
    },
    {
      "comment": "/**\n   * @description If a user isn't cached, this will fetch the user object\n   * @param {UserResolvable} user The user to fetch\n   * @returns {Promise<User>} The user that was fetched\n   */",
      "meta": {
        "range": [
          10674,
          11070
        ],
        "filename": "Client.js",
        "lineno": 346,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100001990",
          "name": "Client#fetchUser",
          "type": "MethodDefinition",
          "paramnames": [
            "user"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "If a user isn't cached, this will fetch the user object",
      "params": [
        {
          "type": {
            "names": [
              "UserResolvable"
            ]
          },
          "description": "The user to fetch",
          "name": "user"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<User>"
            ]
          },
          "description": "The user that was fetched"
        }
      ],
      "name": "fetchUser",
      "longname": "Client#fetchUser",
      "kind": "function",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000169",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will create a guild and the client will own it\n   * @param {String} name The name of the guild\n   * @param {Object} [obj = {}] The options for the guild {@link GuildOptions}\n   * @returns {Promise<Guild>} The guild created\n   */",
      "meta": {
        "range": [
          11340,
          11612
        ],
        "filename": "Client.js",
        "lineno": 365,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002067",
          "name": "Client#createGuild",
          "type": "MethodDefinition",
          "paramnames": [
            "name",
            "obj"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will create a guild and the client will own it",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of the guild",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options for the guild {@link GuildOptions}",
          "name": "obj"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The guild created"
        }
      ],
      "name": "createGuild",
      "longname": "Client#createGuild",
      "kind": "function",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000171",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will set the username of the client\n   * @param {String} newusername The new username\n   * @returns {Promise<User>} The updated user for the client\n   */",
      "meta": {
        "range": [
          11807,
          12146
        ],
        "filename": "Client.js",
        "lineno": 381,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002125",
          "name": "Client#setUsername",
          "type": "MethodDefinition",
          "paramnames": [
            "newusername"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will set the username of the client",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The new username",
          "name": "newusername"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<User>"
            ]
          },
          "description": "The updated user for the client"
        }
      ],
      "name": "setUsername",
      "longname": "Client#setUsername",
      "kind": "function",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000173",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will set the avatar of the client\n   * @param {String} url The new avatar url\n   * @returns {Promise<User>} The updated user for the client\n   */",
      "meta": {
        "range": [
          12333,
          12840
        ],
        "filename": "Client.js",
        "lineno": 400,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002188",
          "name": "Client#setAvatar",
          "type": "MethodDefinition",
          "paramnames": [
            "url"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will set the avatar of the client",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The new avatar url",
          "name": "url"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<User>"
            ]
          },
          "description": "The updated user for the client"
        }
      ],
      "name": "setAvatar",
      "longname": "Client#setAvatar",
      "kind": "function",
      "memberof": "Client",
      "scope": "instance",
      "___id": "T000002R000177",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Fetches all the client's dms\n   * @returns {Promise<Collection>} A collection of all of the dms mapped by their ids\n   */",
      "meta": {
        "range": [
          12991,
          13432
        ],
        "filename": "Client.js",
        "lineno": 422,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002286",
          "name": "Client#fetchDMs",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Fetches all the client's dms",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "A collection of all of the dms mapped by their ids"
        }
      ],
      "name": "fetchDMs",
      "longname": "Client#fetchDMs",
      "kind": "function",
      "memberof": "Client",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000183",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Fetches the client user's connections\n   * @returns {Array} An array of all of the connections\n   */",
      "meta": {
        "range": [
          13562,
          13764
        ],
        "filename": "Client.js",
        "lineno": 441,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002381",
          "name": "Client#fetchUserConnections",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Fetches the client user's connections",
      "returns": [
        {
          "type": {
            "names": [
              "Array"
            ]
          },
          "description": "An array of all of the connections"
        }
      ],
      "name": "fetchUserConnections",
      "longname": "Client#fetchUserConnections",
      "kind": "function",
      "memberof": "Client",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000187",
      "___s": true
    },
    {
      "comment": "/**\n * A Map with additional utility methods. This is used throughout dungeon.js rather than Arrays for anything that has\n * an ID, for significantly improved performance and ease-of-use.\n * @extends {Map}\n */",
      "meta": {
        "range": [
          210,
          16662
        ],
        "filename": "Collection.js",
        "lineno": 6,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002425",
          "name": "Collection",
          "type": "ClassDeclaration",
          "paramnames": [
            "iterable"
          ]
        }
      },
      "classdesc": "A Map with additional utility methods. This is used throughout dungeon.js rather than Arrays for anything that has\nan ID, for significantly improved performance and ease-of-use.",
      "augments": [
        "Map"
      ],
      "name": "Collection",
      "longname": "Collection",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000189",
      "___s": true
    },
    {
      "comment": "/**\n       * Cached array for the `array()` method - will be reset to `null` whenever `set()` or `delete()` are called\n       * @name Collection#_array\n       * @type {?Array}\n       * @private\n       */",
      "meta": {
        "filename": "Collection.js",
        "lineno": 10,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "description": "Cached array for the `array()` method - will be reset to `null` whenever `set()` or `delete()` are called",
      "name": "_array",
      "type": {
        "names": [
          "Array"
        ]
      },
      "nullable": true,
      "access": "private",
      "memberof": "Collection",
      "longname": "Collection#_array",
      "scope": "instance",
      "kind": "member",
      "___id": "T000002R000191",
      "___s": true
    },
    {
      "comment": "/**\n       * Cached array for the `keyArray()` method - will be reset to `null` whenever `set()` or `delete()` are called\n       * @name Collection#_keyArray\n       * @type {?Array}\n       * @private\n       */",
      "meta": {
        "filename": "Collection.js",
        "lineno": 18,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "description": "Cached array for the `keyArray()` method - will be reset to `null` whenever `set()` or `delete()` are called",
      "name": "_keyArray",
      "type": {
        "names": [
          "Array"
        ]
      },
      "nullable": true,
      "access": "private",
      "memberof": "Collection",
      "longname": "Collection#_keyArray",
      "scope": "instance",
      "kind": "member",
      "___id": "T000002R000195",
      "___s": true
    },
    {
      "comment": "/**\n     * Creates an ordered array of the values of this collection, and caches it internally. The array will only be\n     * reconstructed if an item is added to or removed from the collection, or if you change the length of the array\n     * itself. If you don't want this caching behaviour, use `[...collection.values()]` or\n     * `Array.from(collection.values())` instead.\n     * @returns {Array}\n     */",
      "meta": {
        "range": [
          1543,
          1672
        ],
        "filename": "Collection.js",
        "lineno": 46,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002514",
          "name": "Collection#array",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Creates an ordered array of the values of this collection, and caches it internally. The array will only be\nreconstructed if an item is added to or removed from the collection, or if you change the length of the array\nitself. If you don't want this caching behaviour, use `[...collection.values()]` or\n`Array.from(collection.values())` instead.",
      "returns": [
        {
          "type": {
            "names": [
              "Array"
            ]
          }
        }
      ],
      "name": "array",
      "longname": "Collection#array",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000205",
      "___s": true
    },
    {
      "comment": "/**\n     * Creates an ordered array of the keys of this collection, and caches it internally. The array will only be\n     * reconstructed if an item is added to or removed from the collection, or if you change the length of the array\n     * itself. If you don't want this caching behaviour, use `[...collection.keys()]` or\n     * `Array.from(collection.keys())` instead.\n     * @returns {Array}\n     */",
      "meta": {
        "range": [
          2083,
          2225
        ],
        "filename": "Collection.js",
        "lineno": 58,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002548",
          "name": "Collection#keyArray",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Creates an ordered array of the keys of this collection, and caches it internally. The array will only be\nreconstructed if an item is added to or removed from the collection, or if you change the length of the array\nitself. If you don't want this caching behaviour, use `[...collection.keys()]` or\n`Array.from(collection.keys())` instead.",
      "returns": [
        {
          "type": {
            "names": [
              "Array"
            ]
          }
        }
      ],
      "name": "keyArray",
      "longname": "Collection#keyArray",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000207",
      "___s": true
    },
    {
      "comment": "/**\n     * Obtains the first value(s) in this collection.\n     * @param {Number} [amount] Amount of values to obtain from the beginning\n     * @returns {*|Array<*>} A single value if no amount is provided or an array of values, starting from the end if\n     * amount is negative\n     */",
      "meta": {
        "range": [
          2520,
          2854
        ],
        "filename": "Collection.js",
        "lineno": 69,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002582",
          "name": "Collection#first",
          "type": "MethodDefinition",
          "paramnames": [
            "amount"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Obtains the first value(s) in this collection.",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "description": "Amount of values to obtain from the beginning",
          "name": "amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "*",
              "Array.<*>"
            ]
          },
          "description": "A single value if no amount is provided or an array of values, starting from the end if\namount is negative"
        }
      ],
      "name": "first",
      "longname": "Collection#first",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000209",
      "___s": true
    },
    {
      "comment": "/**\n     * Obtains the first key(s) in this collection.\n     * @param {Number} [amount] Amount of keys to obtain from the beginning\n     * @returns {*|Array<*>} A single key if no amount is provided or an array of keys, starting from the end if\n     * amount is negative\n     */",
      "meta": {
        "range": [
          3141,
          3477
        ],
        "filename": "Collection.js",
        "lineno": 85,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002662",
          "name": "Collection#firstKey",
          "type": "MethodDefinition",
          "paramnames": [
            "amount"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Obtains the first key(s) in this collection.",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "description": "Amount of keys to obtain from the beginning",
          "name": "amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "*",
              "Array.<*>"
            ]
          },
          "description": "A single key if no amount is provided or an array of keys, starting from the end if\namount is negative"
        }
      ],
      "name": "firstKey",
      "longname": "Collection#firstKey",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000215",
      "___s": true
    },
    {
      "comment": "/**\n     * Obtains the last value(s) in this collection. This relies on {@link Collection#array}, and thus the caching\n     * mechanism applies here as well.\n     * @param {Number} [amount] Amount of values to obtain from the end\n     * @returns {*|Array<*>} A single value if no amount is provided or an array of values, starting from the end if\n     * amount is negative\n     */",
      "meta": {
        "range": [
          3866,
          4092
        ],
        "filename": "Collection.js",
        "lineno": 102,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002742",
          "name": "Collection#last",
          "type": "MethodDefinition",
          "paramnames": [
            "amount"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Obtains the last value(s) in this collection. This relies on {@link Collection#array}, and thus the caching\nmechanism applies here as well.",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "description": "Amount of values to obtain from the end",
          "name": "amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "*",
              "Array.<*>"
            ]
          },
          "description": "A single value if no amount is provided or an array of values, starting from the end if\namount is negative"
        }
      ],
      "name": "last",
      "longname": "Collection#last",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000221",
      "___s": true
    },
    {
      "comment": "/**\n     * Obtains the last key(s) in this collection. This relies on {@link Collection#keyArray}, and thus the caching\n     * mechanism applies here as well.\n     * @param {Number} [amount] Amount of keys to obtain from the end\n     * @returns {*|Array<*>} A single key if no amount is provided or an array of keys, starting from the end if\n     * amount is negative\n     */",
      "meta": {
        "range": [
          4476,
          4711
        ],
        "filename": "Collection.js",
        "lineno": 117,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002792",
          "name": "Collection#lastKey",
          "type": "MethodDefinition",
          "paramnames": [
            "amount"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Obtains the last key(s) in this collection. This relies on {@link Collection#keyArray}, and thus the caching\nmechanism applies here as well.",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "description": "Amount of keys to obtain from the end",
          "name": "amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "*",
              "Array.<*>"
            ]
          },
          "description": "A single key if no amount is provided or an array of keys, starting from the end if\namount is negative"
        }
      ],
      "name": "lastKey",
      "longname": "Collection#lastKey",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000223",
      "___s": true
    },
    {
      "comment": "/**\n     * Obtains random value(s) from this collection. This relies on {@link Collection#array}, and thus the caching\n     * mechanism applies here as well.\n     * @param {Number} [amount] Amount of values to obtain randomly\n     * @returns {*|Array<*>} A single value if no amount is provided or an array of values\n     */",
      "meta": {
        "range": [
          5044,
          5412
        ],
        "filename": "Collection.js",
        "lineno": 131,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002842",
          "name": "Collection#random",
          "type": "MethodDefinition",
          "paramnames": [
            "amount"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Obtains random value(s) from this collection. This relies on {@link Collection#array}, and thus the caching\nmechanism applies here as well.",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "description": "Amount of values to obtain randomly",
          "name": "amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "*",
              "Array.<*>"
            ]
          },
          "description": "A single value if no amount is provided or an array of values"
        }
      ],
      "name": "random",
      "longname": "Collection#random",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000225",
      "___s": true
    },
    {
      "comment": "/**\n     * Obtains random key(s) from this collection. This relies on {@link Collection#keyArray}, and thus the caching\n     * mechanism applies here as well.\n     * @param {Number} [amount] Amount of keys to obtain randomly\n     * @returns {*|Array<*>} A single key if no amount is provided or an array\n     */",
      "meta": {
        "range": [
          5732,
          6106
        ],
        "filename": "Collection.js",
        "lineno": 147,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100002934",
          "name": "Collection#randomKey",
          "type": "MethodDefinition",
          "paramnames": [
            "amount"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Obtains random key(s) from this collection. This relies on {@link Collection#keyArray}, and thus the caching\nmechanism applies here as well.",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "description": "Amount of keys to obtain randomly",
          "name": "amount"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "*",
              "Array.<*>"
            ]
          },
          "description": "A single key if no amount is provided or an array"
        }
      ],
      "name": "randomKey",
      "longname": "Collection#randomKey",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000231",
      "___s": true
    },
    {
      "comment": "/**\n     * Searches for all items where their specified property's value is identical to the given value\n     * (`item[prop] === value`).\n     * @param {String} prop The property to test against\n     * @param {*} value The expected value\n     * @returns {Array}\n     * @example\n     * collection.findAll('username', 'Bob');\n     */",
      "meta": {
        "range": [
          6446,
          6777
        ],
        "filename": "Collection.js",
        "lineno": 166,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003026",
          "name": "Collection#findAll",
          "type": "MethodDefinition",
          "paramnames": [
            "prop",
            "value"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Searches for all items where their specified property's value is identical to the given value\n(`item[prop] === value`).",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The property to test against",
          "name": "prop"
        },
        {
          "type": {
            "names": [
              "*"
            ]
          },
          "description": "The expected value",
          "name": "value"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Array"
            ]
          }
        }
      ],
      "examples": [
        "collection.findAll('username', 'Bob');"
      ],
      "name": "findAll",
      "longname": "Collection#findAll",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000237",
      "___s": true
    },
    {
      "comment": "/**\n     * Searches for a single item where its specified property's value is identical to the given value\n     * (`item[prop] === value`), or the given function returns a truthy value. In the latter case, this is identical to\n     * [Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\n     * <warn>All collections used in dungeon.js are mapped using their `id` property, and if you want to find by id you\n     * should use the `get` method. See\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>\n     * @param {string|Function} propOrFn The property to test against, or the function to test with\n     * @param {*} [value] The expected value - only applicable and required if using a property for the first argument\n     * @returns {*}\n     * @example\n     * collection.find('username', 'Bob');\n     * @example\n     * collection.find(val => val.username === 'Bob');\n     */",
      "meta": {
        "range": [
          7788,
          8336
        ],
        "filename": "Collection.js",
        "lineno": 191,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003077",
          "name": "Collection#find",
          "type": "MethodDefinition",
          "paramnames": [
            "propOrFn",
            "value"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Searches for a single item where its specified property's value is identical to the given value\n(`item[prop] === value`), or the given function returns a truthy value. In the latter case, this is identical to\n[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\n<warn>All collections used in dungeon.js are mapped using their `id` property, and if you want to find by id you\nshould use the `get` method. See\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>",
      "params": [
        {
          "type": {
            "names": [
              "string",
              "function"
            ]
          },
          "description": "The property to test against, or the function to test with",
          "name": "propOrFn"
        },
        {
          "type": {
            "names": [
              "*"
            ]
          },
          "optional": true,
          "description": "The expected value - only applicable and required if using a property for the first argument",
          "name": "value"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "*"
            ]
          }
        }
      ],
      "examples": [
        "collection.find('username', 'Bob');",
        "collection.find(val => val.username === 'Bob');"
      ],
      "name": "find",
      "longname": "Collection#find",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000240",
      "___s": true
    },
    {
      "comment": "/**\n     * Searches for the existence of a single item where its specified property's value is identical to the given value\n     * (`item[prop] === value`), or the given function returns a truthy value.\n     * <warn>Do not use this to check for an item by its ID. Instead, use `collection.has(id)`. See\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has) for details.</warn>\n     * @param {string|Function} propOrFn The property to test against, or the function to test with\n     * @param {*} [value] The expected value - only applicable and required if using a property for the first argument\n     * @returns {boolean}\n     * @example\n     * if (collection.exists('username', 'Bob')) {\n     *  console.log('user here!');\n     * }\n     * @example\n     * if (collection.exists(user => user.username === 'Bob')) {\n     *  ('user here!');\n     * }\n     */",
      "meta": {
        "range": [
          10610,
          10687
        ],
        "filename": "Collection.js",
        "lineno": 256,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003208",
          "name": "Collection#exists",
          "type": "MethodDefinition",
          "paramnames": [
            "propOrFn",
            "value"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Searches for the existence of a single item where its specified property's value is identical to the given value\n(`item[prop] === value`), or the given function returns a truthy value.\n<warn>Do not use this to check for an item by its ID. Instead, use `collection.has(id)`. See\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has) for details.</warn>",
      "params": [
        {
          "type": {
            "names": [
              "string",
              "function"
            ]
          },
          "description": "The property to test against, or the function to test with",
          "name": "propOrFn"
        },
        {
          "type": {
            "names": [
              "*"
            ]
          },
          "optional": true,
          "description": "The expected value - only applicable and required if using a property for the first argument",
          "name": "value"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "boolean"
            ]
          }
        }
      ],
      "examples": [
        "if (collection.exists('username', 'Bob')) {\n console.log('user here!');\n}",
        "if (collection.exists(user => user.username === 'Bob')) {\n ('user here!');\n}"
      ],
      "name": "exists",
      "longname": "Collection#exists",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000243",
      "___s": true
    },
    {
      "comment": "/**\n     * Identical to\n     * [Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n     * but returns a Collection instead of an Array.\n     * @param {Function} fn Function used to test (should return a boolean)\n     * @param {Object} [thisArg] Value to use as `this` when executing function\n     * @returns {Collection}\n     */",
      "meta": {
        "range": [
          11085,
          11304
        ],
        "filename": "Collection.js",
        "lineno": 268,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003223",
          "name": "Collection#filter",
          "type": "MethodDefinition",
          "paramnames": [
            "fn",
            "thisArg"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Identical to\n[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\nbut returns a Collection instead of an Array.",
      "params": [
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Function used to test (should return a boolean)",
          "name": "fn"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Value to use as `this` when executing function",
          "name": "thisArg"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Collection"
            ]
          }
        }
      ],
      "name": "filter",
      "longname": "Collection#filter",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000244",
      "___s": true
    },
    {
      "comment": "/**\n     * Identical to\n     * [Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter).\n     * @param {Function} fn Function used to test (should return a boolean)\n     * @param {Object} [thisArg] Value to use as `this` when executing function\n     * @returns {Array}\n     */",
      "meta": {
        "range": [
          11644,
          11850
        ],
        "filename": "Collection.js",
        "lineno": 284,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003265",
          "name": "Collection#filterArray",
          "type": "MethodDefinition",
          "paramnames": [
            "fn",
            "thisArg"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Identical to\n[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter).",
      "params": [
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Function used to test (should return a boolean)",
          "name": "fn"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Value to use as `this` when executing function",
          "name": "thisArg"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Array"
            ]
          }
        }
      ],
      "name": "filterArray",
      "longname": "Collection#filterArray",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000247",
      "___s": true
    },
    {
      "comment": "/**\n     * Identical to\n     * [Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).\n     * @param {Function} fn Function that produces an element of the new array, taking three arguments\n     * @param {*} [thisArg] Value to use as `this` when executing function\n     * @returns {Array}\n     */",
      "meta": {
        "range": [
          12206,
          12403
        ],
        "filename": "Collection.js",
        "lineno": 300,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003305",
          "name": "Collection#map",
          "type": "MethodDefinition",
          "paramnames": [
            "fn",
            "thisArg"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Identical to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).",
      "params": [
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Function that produces an element of the new array, taking three arguments",
          "name": "fn"
        },
        {
          "type": {
            "names": [
              "*"
            ]
          },
          "optional": true,
          "description": "Value to use as `this` when executing function",
          "name": "thisArg"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Array"
            ]
          }
        }
      ],
      "name": "map",
      "longname": "Collection#map",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000250",
      "___s": true
    },
    {
      "comment": "/**\n     * Identical to\n     * [Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).\n     * @param {Function} fn Function used to test (should return a boolean)\n     * @param {Object} [thisArg] Value to use as `this` when executing function\n     * @returns {boolean}\n     */",
      "meta": {
        "range": [
          12741,
          12908
        ],
        "filename": "Collection.js",
        "lineno": 315,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003351",
          "name": "Collection#some",
          "type": "MethodDefinition",
          "paramnames": [
            "fn",
            "thisArg"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Identical to\n[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).",
      "params": [
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Function used to test (should return a boolean)",
          "name": "fn"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Value to use as `this` when executing function",
          "name": "thisArg"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "boolean"
            ]
          }
        }
      ],
      "name": "some",
      "longname": "Collection#some",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000255",
      "___s": true
    },
    {
      "comment": "/**\n     * Identical to\n     * [Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).\n     * @param {Function} fn Function used to test (should return a boolean)\n     * @param {Object} [thisArg] Value to use as `this` when executing function\n     * @returns {boolean}\n     */",
      "meta": {
        "range": [
          13248,
          13417
        ],
        "filename": "Collection.js",
        "lineno": 330,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003383",
          "name": "Collection#every",
          "type": "MethodDefinition",
          "paramnames": [
            "fn",
            "thisArg"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Identical to\n[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).",
      "params": [
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Function used to test (should return a boolean)",
          "name": "fn"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Value to use as `this` when executing function",
          "name": "thisArg"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "boolean"
            ]
          }
        }
      ],
      "name": "every",
      "longname": "Collection#every",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000257",
      "___s": true
    },
    {
      "comment": "/**\n     * Identical to\n     * [Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).\n     * @param {Function} fn Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\n     * and `collection`\n     * @param {*} [initialValue] Starting value for the accumulator\n     * @returns {*}\n     */",
      "meta": {
        "range": [
          13810,
          14300
        ],
        "filename": "Collection.js",
        "lineno": 346,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003416",
          "name": "Collection#reduce",
          "type": "MethodDefinition",
          "paramnames": [
            "fn",
            "initialValue"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Identical to\n[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).",
      "params": [
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\nand `collection`",
          "name": "fn"
        },
        {
          "type": {
            "names": [
              "*"
            ]
          },
          "optional": true,
          "description": "Starting value for the accumulator",
          "name": "initialValue"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "*"
            ]
          }
        }
      ],
      "name": "reduce",
      "longname": "Collection#reduce",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000259",
      "___s": true
    },
    {
      "comment": "/**\n     * Creates an identical shallow copy of this collection.\n     * @returns {Collection}\n     * @example const newColl = someColl.clone();\n     */",
      "meta": {
        "range": [
          14460,
          14512
        ],
        "filename": "Collection.js",
        "lineno": 370,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003483",
          "name": "Collection#clone",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Creates an identical shallow copy of this collection.",
      "returns": [
        {
          "type": {
            "names": [
              "Collection"
            ]
          }
        }
      ],
      "examples": [
        "const newColl = someColl.clone();"
      ],
      "name": "clone",
      "longname": "Collection#clone",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000267",
      "___s": true
    },
    {
      "comment": "/**\n     * Combines this collection with others into a new collection. None of the source collections are modified.\n     * @param {...Collection} collections Collections to merge\n     * @returns {Collection}\n     * @example const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n     */",
      "meta": {
        "range": [
          14825,
          15011
        ],
        "filename": "Collection.js",
        "lineno": 380,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003493",
          "name": "Collection#concat",
          "type": "MethodDefinition",
          "paramnames": [
            "collections"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Combines this collection with others into a new collection. None of the source collections are modified.",
      "params": [
        {
          "type": {
            "names": [
              "Collection"
            ]
          },
          "variable": true,
          "description": "Collections to merge",
          "name": "collections"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Collection"
            ]
          }
        }
      ],
      "examples": [
        "const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);"
      ],
      "name": "concat",
      "longname": "Collection#concat",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000268",
      "___s": true
    },
    {
      "comment": "/**\n     * Calls the `delete()` method on all items that have it.\n     * @returns {Promise[]}\n     */",
      "meta": {
        "range": [
          15121,
          15280
        ],
        "filename": "Collection.js",
        "lineno": 392,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003526",
          "name": "Collection#deleteAll",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Calls the `delete()` method on all items that have it.",
      "returns": [
        {
          "type": {
            "names": [
              "Array.<Promise>"
            ]
          }
        }
      ],
      "name": "deleteAll",
      "longname": "Collection#deleteAll",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000271",
      "___s": true
    },
    {
      "comment": "/**\n     * Checks if this collection shares identical key-value pairings with another.\n     * This is different to checking for equality using equal-signs, because\n     * the collections may be different objects, but contain the same data.\n     * @param {Collection} collection Collection to compare with\n     * @returns {boolean} Whether the collections have identical contents\n     */",
      "meta": {
        "range": [
          15675,
          16003
        ],
        "filename": "Collection.js",
        "lineno": 407,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003558",
          "name": "Collection#equals",
          "type": "MethodDefinition",
          "paramnames": [
            "collection"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Checks if this collection shares identical key-value pairings with another.\nThis is different to checking for equality using equal-signs, because\nthe collections may be different objects, but contain the same data.",
      "params": [
        {
          "type": {
            "names": [
              "Collection"
            ]
          },
          "description": "Collection to compare with",
          "name": "collection"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the collections have identical contents"
        }
      ],
      "name": "equals",
      "longname": "Collection#equals",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000274",
      "___s": true
    },
    {
      "comment": "/**\n     * The sort() method sorts the elements of a collection and returns it.\n     * The sort is not necessarily stable. The default sort order is according to string Unicode code points.\n     * @param {Function} [compareFunction] Specifies a function that defines the sort order.\n     * If omitted, the collection is sorted according to each character's Unicode code point value,\n     * according to the string conversion of each element.\n     * @returns {Collection}\n     */",
      "meta": {
        "range": [
          16490,
          16660
        ],
        "filename": "Collection.js",
        "lineno": 425,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003617",
          "name": "Collection#sort",
          "type": "MethodDefinition",
          "paramnames": [
            "compareFunction"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "The sort() method sorts the elements of a collection and returns it.\nThe sort is not necessarily stable. The default sort order is according to string Unicode code points.",
      "params": [
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "optional": true,
          "description": "Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value,\naccording to the string conversion of each element.",
          "name": "compareFunction"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Collection"
            ]
          }
        }
      ],
      "name": "sort",
      "longname": "Collection#sort",
      "kind": "function",
      "memberof": "Collection",
      "scope": "instance",
      "___id": "T000002R000276",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a DM Channel object\n */",
      "meta": {
        "range": [
          141,
          4770
        ],
        "filename": "DMChannel.js",
        "lineno": 8,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003686",
          "name": "DMChannel",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a DM Channel object",
      "name": "DMChannel",
      "longname": "DMChannel",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000280",
      "___s": true
    },
    {
      "comment": "/**\n     * The type of channel\n     * @type {String}\n     */",
      "meta": {
        "range": [
          259,
          275
        ],
        "filename": "DMChannel.js",
        "lineno": 16,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003696",
          "name": "this.type",
          "type": "Literal",
          "value": "dm",
          "paramnames": []
        }
      },
      "description": "The type of channel",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "type",
      "longname": "DMChannel#type",
      "kind": "member",
      "memberof": "DMChannel",
      "scope": "instance",
      "___id": "T000002R000282",
      "___s": true
    },
    {
      "comment": "/**\n     * The client object which is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          365,
          385
        ],
        "filename": "DMChannel.js",
        "lineno": 23,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003702",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client object which is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "DMChannel#client",
      "kind": "member",
      "memberof": "DMChannel",
      "scope": "instance",
      "___id": "T000002R000283",
      "___s": true
    },
    {
      "comment": "/**\n     * The ID of the DM channel\n     * @type {String}\n     */",
      "meta": {
        "range": [
          463,
          479
        ],
        "filename": "DMChannel.js",
        "lineno": 30,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003708",
          "name": "this.id",
          "type": "MemberExpression",
          "value": "raw.id",
          "paramnames": []
        }
      },
      "description": "The ID of the DM channel",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "id",
      "longname": "DMChannel#id",
      "kind": "member",
      "memberof": "DMChannel",
      "scope": "instance",
      "___id": "T000002R000284",
      "___s": true
    },
    {
      "comment": "/**\n     * A collection of the members in the DM mapped by their ID\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          821,
          849
        ],
        "filename": "DMChannel.js",
        "lineno": 44,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003764",
          "name": "this.recipients",
          "type": "Identifier",
          "value": "recipients",
          "paramnames": []
        }
      },
      "description": "A collection of the members in the DM mapped by their ID",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "recipients",
      "longname": "DMChannel#recipients",
      "kind": "member",
      "memberof": "DMChannel",
      "scope": "instance",
      "___id": "T000002R000288",
      "___s": true
    },
    {
      "comment": "/**\n     * The ID of the last message sent in the DM Channel\n     */",
      "meta": {
        "range": [
          930,
          970
        ],
        "filename": "DMChannel.js",
        "lineno": 50,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003770",
          "name": "this.lastMessageID",
          "type": "MemberExpression",
          "value": "raw.last_message_id",
          "paramnames": []
        }
      },
      "description": "The ID of the last message sent in the DM Channel",
      "name": "lastMessageID",
      "longname": "DMChannel#lastMessageID",
      "kind": "member",
      "memberof": "DMChannel",
      "scope": "instance",
      "___id": "T000002R000289",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will send a message to the channel specified\n   * @param {String|Object} content The string if it's a normal message or object if it's a richembed\n   * @param {Object} [opt = {}] The options, nonce and tts {@link MessageOptions}\n   * @returns {Promise<Message>} Returns a promise and discord message\n   * @example\n   * // Sending an embed\n   * DMChannel.send({ title: \"Ping!\", description: \"This User Was Pinged!\", color: 0x00AE86 });\n   * @example\n   * // Sending a tts message\n   * DMChannel.send(\"Hi!\", { tts: true });\n   */",
      "meta": {
        "range": [
          1569,
          3286
        ],
        "filename": "DMChannel.js",
        "lineno": 69,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100003783",
          "name": "DMChannel#send",
          "type": "MethodDefinition",
          "paramnames": [
            "content",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will send a message to the channel specified",
      "params": [
        {
          "type": {
            "names": [
              "String",
              "Object"
            ]
          },
          "description": "The string if it's a normal message or object if it's a richembed",
          "name": "content"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options, nonce and tts {@link MessageOptions}",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Message>"
            ]
          },
          "description": "Returns a promise and discord message"
        }
      ],
      "examples": [
        "// Sending an embed\nDMChannel.send({ title: \"Ping!\", description: \"This User Was Pinged!\", color: 0x00AE86 });",
        "// Sending a tts message\nDMChannel.send(\"Hi!\", { tts: true });"
      ],
      "name": "send",
      "longname": "DMChannel#send",
      "kind": "function",
      "memberof": "DMChannel",
      "scope": "instance",
      "___id": "T000002R000291",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method adds a user to a group DM\n   * @param {UserResolvable} user The user to add to a DM\n   * @param {String} accessToken Access token of a user that has granted your app the gdm.join scope\n   * @param {String} nick The nickname of the user being added\n   * @returns {Promise<DMChannel>} Returns a promise and a DM Channel \n   */",
      "meta": {
        "range": [
          3652,
          4108
        ],
        "filename": "DMChannel.js",
        "lineno": 119,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004037",
          "name": "DMChannel#addRecipient",
          "type": "MethodDefinition",
          "paramnames": [
            "user",
            "accessToken",
            "nick"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method adds a user to a group DM",
      "params": [
        {
          "type": {
            "names": [
              "UserResolvable"
            ]
          },
          "description": "The user to add to a DM",
          "name": "user"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Access token of a user that has granted your app the gdm.join scope",
          "name": "accessToken"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The nickname of the user being added",
          "name": "nick"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<DMChannel>"
            ]
          },
          "description": "Returns a promise and a DM Channel"
        }
      ],
      "name": "addRecipient",
      "longname": "DMChannel#addRecipient",
      "kind": "function",
      "memberof": "DMChannel",
      "scope": "instance",
      "___id": "T000002R000308",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method removes a user to a group DM\n   * @param {UserResolvable} user The user to remove from the DM, can be a user object or id\n   * @returns {Promise<DMChannel>} Returns a promise and a DM Channel \n   */",
      "meta": {
        "range": [
          4348,
          4720
        ],
        "filename": "DMChannel.js",
        "lineno": 136,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004117",
          "name": "DMChannel#removeRecipient",
          "type": "MethodDefinition",
          "paramnames": [
            "user"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method removes a user to a group DM",
      "params": [
        {
          "type": {
            "names": [
              "UserResolvable"
            ]
          },
          "description": "The user to remove from the DM, can be a user object or id",
          "name": "user"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<DMChannel>"
            ]
          },
          "description": "Returns a promise and a DM Channel"
        }
      ],
      "name": "removeRecipient",
      "longname": "DMChannel#removeRecipient",
      "kind": "function",
      "memberof": "DMChannel",
      "scope": "instance",
      "___id": "T000002R000311",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents an embed object\n */",
      "meta": {
        "range": [
          50,
          3583
        ],
        "filename": "Embed.js",
        "lineno": 5,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004206",
          "name": "Embed",
          "type": "ClassDeclaration",
          "paramnames": [
            "data"
          ]
        }
      },
      "classdesc": "This class represents an embed object",
      "name": "Embed",
      "longname": "Embed",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000314",
      "___s": true
    },
    {
      "comment": "/**\n     * The title of the embed \n     * @type {String}\n     */",
      "meta": {
        "range": [
          166,
          189
        ],
        "filename": "Embed.js",
        "lineno": 13,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004217",
          "name": "this.title",
          "type": "MemberExpression",
          "value": "data.title",
          "paramnames": []
        }
      },
      "description": "The title of the embed",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "title",
      "longname": "Embed#title",
      "kind": "member",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000316",
      "___s": true
    },
    {
      "comment": "/**\n     * The description of the embed\n     * @type {String}\n     */",
      "meta": {
        "range": [
          273,
          308
        ],
        "filename": "Embed.js",
        "lineno": 20,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004225",
          "name": "this.description",
          "type": "MemberExpression",
          "value": "data.description",
          "paramnames": []
        }
      },
      "description": "The description of the embed",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "description",
      "longname": "Embed#description",
      "kind": "member",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000317",
      "___s": true
    },
    {
      "comment": "/**\n     * The URL for the embed\n     * @type {String}\n     */",
      "meta": {
        "range": [
          385,
          404
        ],
        "filename": "Embed.js",
        "lineno": 27,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004233",
          "name": "this.url",
          "type": "MemberExpression",
          "value": "data.url",
          "paramnames": []
        }
      },
      "description": "The URL for the embed",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "url",
      "longname": "Embed#url",
      "kind": "member",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000318",
      "___s": true
    },
    {
      "comment": "/**\n     * The color of the embed\n     * @type {Color}\n     */",
      "meta": {
        "range": [
          481,
          504
        ],
        "filename": "Embed.js",
        "lineno": 34,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004241",
          "name": "this.color",
          "type": "MemberExpression",
          "value": "data.color",
          "paramnames": []
        }
      },
      "description": "The color of the embed",
      "type": {
        "names": [
          "Color"
        ]
      },
      "name": "color",
      "longname": "Embed#color",
      "kind": "member",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000319",
      "___s": true
    },
    {
      "comment": "/**\n     * The author of the embed\n     * @type {Object}\n     */",
      "meta": {
        "range": [
          585,
          610
        ],
        "filename": "Embed.js",
        "lineno": 41,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004249",
          "name": "this.author",
          "type": "MemberExpression",
          "value": "data.author",
          "paramnames": []
        }
      },
      "description": "The author of the embed",
      "type": {
        "names": [
          "Object"
        ]
      },
      "name": "author",
      "longname": "Embed#author",
      "kind": "member",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000320",
      "___s": true
    },
    {
      "comment": "/**\n     * The timestamp of the embed\n     * @type {Date}\n     */",
      "meta": {
        "range": [
          690,
          721
        ],
        "filename": "Embed.js",
        "lineno": 48,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004257",
          "name": "this.timestamp",
          "type": "MemberExpression",
          "value": "data.timestamp",
          "paramnames": []
        }
      },
      "description": "The timestamp of the embed",
      "type": {
        "names": [
          "Date"
        ]
      },
      "name": "timestamp",
      "longname": "Embed#timestamp",
      "kind": "member",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000321",
      "___s": true
    },
    {
      "comment": "/**\n     * The fields of the embed\n     * @type {Array}\n     */",
      "meta": {
        "range": [
          799,
          830
        ],
        "filename": "Embed.js",
        "lineno": 55,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004265",
          "name": "this.fields",
          "type": "LogicalExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The fields of the embed",
      "type": {
        "names": [
          "Array"
        ]
      },
      "name": "fields",
      "longname": "Embed#fields",
      "kind": "member",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000322",
      "___s": true
    },
    {
      "comment": "/**\n     * The thumbnail of the embed\n     * @type {String}\n     */",
      "meta": {
        "range": [
          912,
          943
        ],
        "filename": "Embed.js",
        "lineno": 62,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004275",
          "name": "this.thumbnail",
          "type": "MemberExpression",
          "value": "data.thumbnail",
          "paramnames": []
        }
      },
      "description": "The thumbnail of the embed",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "thumbnail",
      "longname": "Embed#thumbnail",
      "kind": "member",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000323",
      "___s": true
    },
    {
      "comment": "/**\n     * The image of the embed\n     * @type {String}\n     */",
      "meta": {
        "range": [
          1021,
          1044
        ],
        "filename": "Embed.js",
        "lineno": 69,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004283",
          "name": "this.image",
          "type": "MemberExpression",
          "value": "data.image",
          "paramnames": []
        }
      },
      "description": "The image of the embed",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "image",
      "longname": "Embed#image",
      "kind": "member",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000324",
      "___s": true
    },
    {
      "comment": "/**\n     * The footer of the embed \n     * @type {Object}\n     */",
      "meta": {
        "range": [
          1122,
          1147
        ],
        "filename": "Embed.js",
        "lineno": 76,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004291",
          "name": "this.footer",
          "type": "MemberExpression",
          "value": "data.footer",
          "paramnames": []
        }
      },
      "description": "The footer of the embed",
      "type": {
        "names": [
          "Object"
        ]
      },
      "name": "footer",
      "longname": "Embed#footer",
      "kind": "member",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000325",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method sets the title of the embed\n   * @param {String} title The title of the embed\n   */",
      "meta": {
        "range": [
          1282,
          1344
        ],
        "filename": "Embed.js",
        "lineno": 85,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004298",
          "name": "Embed#setTitle",
          "type": "MethodDefinition",
          "paramnames": [
            "title"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method sets the title of the embed",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The title of the embed",
          "name": "title"
        }
      ],
      "name": "setTitle",
      "longname": "Embed#setTitle",
      "kind": "function",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000326",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method sets the description of the embed\n   * @param {String} description The description of the embed\n   */",
      "meta": {
        "range": [
          1487,
          1573
        ],
        "filename": "Embed.js",
        "lineno": 95,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004311",
          "name": "Embed#setDescription",
          "type": "MethodDefinition",
          "paramnames": [
            "description"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method sets the description of the embed",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The description of the embed",
          "name": "description"
        }
      ],
      "name": "setDescription",
      "longname": "Embed#setDescription",
      "kind": "function",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000328",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method sets the footer of the embed\n   * @param {String} footerText The footer text of the embed\n   * @param {String} [footerImage=''] The image placed in the footer\n   */",
      "meta": {
        "range": [
          1779,
          1904
        ],
        "filename": "Embed.js",
        "lineno": 106,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004324",
          "name": "Embed#setFooter",
          "type": "MethodDefinition",
          "paramnames": [
            "footerText",
            "footerImage"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method sets the footer of the embed",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The footer text of the embed",
          "name": "footerText"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": "''",
          "description": "The image placed in the footer",
          "name": "footerImage"
        }
      ],
      "name": "setFooter",
      "longname": "Embed#setFooter",
      "kind": "function",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000330",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method sets the image of the embed\n   * @param {String} image The image URL of the embed\n   */",
      "meta": {
        "range": [
          2033,
          2095
        ],
        "filename": "Embed.js",
        "lineno": 116,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004344",
          "name": "Embed#setImage",
          "type": "MethodDefinition",
          "paramnames": [
            "image"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method sets the image of the embed",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The image URL of the embed",
          "name": "image"
        }
      ],
      "name": "setImage",
      "longname": "Embed#setImage",
      "kind": "function",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000334",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method sets the thumbnail of the embed\n   * @param {String} thumbnail The thumbnail image URL of the embed\n   */",
      "meta": {
        "range": [
          2242,
          2320
        ],
        "filename": "Embed.js",
        "lineno": 126,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004357",
          "name": "Embed#setThumbnail",
          "type": "MethodDefinition",
          "paramnames": [
            "thumbnail"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method sets the thumbnail of the embed",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The thumbnail image URL of the embed",
          "name": "thumbnail"
        }
      ],
      "name": "setThumbnail",
      "longname": "Embed#setThumbnail",
      "kind": "function",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000336",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method sets the color of the embed\n   * @param {Color} color The color of the embed\n   */",
      "meta": {
        "range": [
          2444,
          2506
        ],
        "filename": "Embed.js",
        "lineno": 136,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004370",
          "name": "Embed#setColor",
          "type": "MethodDefinition",
          "paramnames": [
            "color"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method sets the color of the embed",
      "params": [
        {
          "type": {
            "names": [
              "Color"
            ]
          },
          "description": "The color of the embed",
          "name": "color"
        }
      ],
      "name": "setColor",
      "longname": "Embed#setColor",
      "kind": "function",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000338",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method sets the date of the embed\n   * @param {String} [timestamp = new Date()] The date of the embed\n   */",
      "meta": {
        "range": [
          2648,
          2739
        ],
        "filename": "Embed.js",
        "lineno": 146,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004383",
          "name": "Embed#setTimestamp",
          "type": "MethodDefinition",
          "paramnames": [
            "timestamp"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method sets the date of the embed",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": "new Date()",
          "description": "The date of the embed",
          "name": "timestamp"
        }
      ],
      "name": "setTimestamp",
      "longname": "Embed#setTimestamp",
      "kind": "function",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000340",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method sets the author of the embed\n   * @param {String} authorText The author text of the embed\n   * @param {String} [authorImage=''] The image placed in the author area\n   */",
      "meta": {
        "range": [
          2950,
          3075
        ],
        "filename": "Embed.js",
        "lineno": 157,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004399",
          "name": "Embed#setAuthor",
          "type": "MethodDefinition",
          "paramnames": [
            "authorText",
            "authorImage"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method sets the author of the embed",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The author text of the embed",
          "name": "authorText"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": "''",
          "description": "The image placed in the author area",
          "name": "authorImage"
        }
      ],
      "name": "setAuthor",
      "longname": "Embed#setAuthor",
      "kind": "function",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000342",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method adds a field to the embed\n   * @param {String} name The name of the field\n   * @param {String} value The value of the field\n   * @param {Boolean} [inline=false] Set the field to display inline\n   */",
      "meta": {
        "range": [
          3315,
          3422
        ],
        "filename": "Embed.js",
        "lineno": 169,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004419",
          "name": "Embed#addField",
          "type": "MethodDefinition",
          "paramnames": [
            "name",
            "value",
            "inline"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method adds a field to the embed",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of the field",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The value of the field",
          "name": "value"
        },
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "optional": true,
          "defaultvalue": false,
          "description": "Set the field to display inline",
          "name": "inline"
        }
      ],
      "name": "addField",
      "longname": "Embed#addField",
      "kind": "function",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000346",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method sets the URL of the embed\n   * @param {String} url the URL\n  */",
      "meta": {
        "range": [
          3527,
          3581
        ],
        "filename": "Embed.js",
        "lineno": 179,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004444",
          "name": "Embed#setURL",
          "type": "MethodDefinition",
          "paramnames": [
            "url"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method sets the URL of the embed",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "the URL",
          "name": "url"
        }
      ],
      "name": "setURL",
      "longname": "Embed#setURL",
      "kind": "function",
      "memberof": "Embed",
      "scope": "instance",
      "___id": "T000002R000350",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} EmojiResolvable\n * @property {String} Snowflake This could be the ID of the emoji\n * @property {Emoji} Emoji This could be an actual emoji class\n */",
      "meta": {
        "filename": "Emoji.js",
        "lineno": 106,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "kind": "typedef",
      "name": "EmojiResolvable",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "This could be the ID of the emoji",
          "name": "Snowflake"
        },
        {
          "type": {
            "names": [
              "Emoji"
            ]
          },
          "description": "This could be an actual emoji class",
          "name": "Emoji"
        }
      ],
      "longname": "EmojiResolvable",
      "scope": "global",
      "___id": "T000002R000353",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents an emoji\n */",
      "meta": {
        "range": [
          196,
          2161
        ],
        "filename": "Emoji.js",
        "lineno": 10,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004489",
          "name": "Emoji",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "guild",
            "client"
          ]
        }
      },
      "classdesc": "This class represents an emoji",
      "name": "Emoji",
      "longname": "Emoji",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000358",
      "___s": true
    },
    {
      "comment": "/**\n   * A collection of roles that are whitelisted to use this emoji\n   * @type {Collection}\n   */",
      "meta": {
        "range": [
          354,
          383
        ],
        "filename": "Emoji.js",
        "lineno": 18,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004500",
          "name": "this.roles",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A collection of roles that are whitelisted to use this emoji",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "roles",
      "longname": "Emoji#roles",
      "kind": "member",
      "memberof": "Emoji",
      "scope": "instance",
      "___id": "T000002R000360",
      "___s": true
    },
    {
      "comment": "/**\n     * The name of the emoji\n     * @type {String}\n     */",
      "meta": {
        "range": [
          625,
          645
        ],
        "filename": "Emoji.js",
        "lineno": 31,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004550",
          "name": "this.name",
          "type": "MemberExpression",
          "value": "raw.name",
          "paramnames": []
        }
      },
      "description": "The name of the emoji",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "name",
      "longname": "Emoji#name",
      "kind": "member",
      "memberof": "Emoji",
      "scope": "instance",
      "___id": "T000002R000362",
      "___s": true
    },
    {
      "comment": "/**\n     * The client in which is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          731,
          751
        ],
        "filename": "Emoji.js",
        "lineno": 38,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004558",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client in which is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "Emoji#client",
      "kind": "member",
      "memberof": "Emoji",
      "scope": "instance",
      "___id": "T000002R000363",
      "___s": true
    },
    {
      "comment": "/**\n     * The guild in which the emoji is in \n     * @type {Guild}\n     */",
      "meta": {
        "range": [
          839,
          857
        ],
        "filename": "Emoji.js",
        "lineno": 45,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004564",
          "name": "this.guild",
          "type": "Identifier",
          "value": "guild",
          "paramnames": []
        }
      },
      "description": "The guild in which the emoji is in",
      "type": {
        "names": [
          "Guild"
        ]
      },
      "name": "guild",
      "longname": "Emoji#guild",
      "kind": "member",
      "memberof": "Emoji",
      "scope": "instance",
      "___id": "T000002R000364",
      "___s": true
    },
    {
      "comment": "/**\n     * Whether the emoji is managed or not\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          947,
          973
        ],
        "filename": "Emoji.js",
        "lineno": 52,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004570",
          "name": "this.managed",
          "type": "MemberExpression",
          "value": "raw.managed",
          "paramnames": []
        }
      },
      "description": "Whether the emoji is managed or not",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "managed",
      "longname": "Emoji#managed",
      "kind": "member",
      "memberof": "Emoji",
      "scope": "instance",
      "___id": "T000002R000365",
      "___s": true
    },
    {
      "comment": "/**\n     * Whether the emoji is animated or not\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          1064,
          1092
        ],
        "filename": "Emoji.js",
        "lineno": 59,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004578",
          "name": "this.animated",
          "type": "MemberExpression",
          "value": "raw.animated",
          "paramnames": []
        }
      },
      "description": "Whether the emoji is animated or not",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "animated",
      "longname": "Emoji#animated",
      "kind": "member",
      "memberof": "Emoji",
      "scope": "instance",
      "___id": "T000002R000366",
      "___s": true
    },
    {
      "comment": "/**\n     * The id of the emoji\n     * @type {String}\n     */",
      "meta": {
        "range": [
          1165,
          1181
        ],
        "filename": "Emoji.js",
        "lineno": 66,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004586",
          "name": "this.id",
          "type": "MemberExpression",
          "value": "raw.id",
          "paramnames": []
        }
      },
      "description": "The id of the emoji",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "id",
      "longname": "Emoji#id",
      "kind": "member",
      "memberof": "Emoji",
      "scope": "instance",
      "___id": "T000002R000367",
      "___s": true
    },
    {
      "comment": "/**\n     * Whether the emoji requires colons or not\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          1276,
          1315
        ],
        "filename": "Emoji.js",
        "lineno": 73,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004594",
          "name": "this.requireColons",
          "type": "MemberExpression",
          "value": "raw.require_colons",
          "paramnames": []
        }
      },
      "description": "Whether the emoji requires colons or not",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "requireColons",
      "longname": "Emoji#requireColons",
      "kind": "member",
      "memberof": "Emoji",
      "scope": "instance",
      "___id": "T000002R000368",
      "___s": true
    },
    {
      "comment": "/**\n     * The URL of the emoji\n     * @type {String}\n     */",
      "meta": {
        "range": [
          1389,
          1480
        ],
        "filename": "Emoji.js",
        "lineno": 80,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004602",
          "name": "this.url",
          "type": "TemplateLiteral",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The URL of the emoji",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "url",
      "longname": "Emoji#url",
      "kind": "member",
      "memberof": "Emoji",
      "scope": "instance",
      "___id": "T000002R000369",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method deletes the emoji from the guild\n   * @returns {Promise<Emoji>} The emoji that was deleted\n   */",
      "meta": {
        "range": [
          1623,
          2050
        ],
        "filename": "Emoji.js",
        "lineno": 88,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004619",
          "name": "Emoji#delete",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method deletes the emoji from the guild",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Emoji>"
            ]
          },
          "description": "The emoji that was deleted"
        }
      ],
      "name": "delete",
      "longname": "Emoji#delete",
      "kind": "function",
      "memberof": "Emoji",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000370",
      "___s": true
    },
    {
      "comment": "/**\n * The options for fetching audit logs\n * @typedef {Object} AuditOptions\n * @property {String} [target = null] The target's id (the user that the action was performed on)\n * @property {Number} [actionType = null] The action type {@see https://discordapp.com/developers/docs/resources/audit-log#DOCS_AUDIT_LOG/audit-log-entry-object-audit-log-events}\n * @property {String} [before = null] Filter the log before a certain entry ID\n * @property {Number} [limit = null] How many entries are returned (default 50, minimum 1, maximum 100)\n */",
      "meta": {
        "filename": "Guild.js",
        "lineno": 969,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "description": "The options for fetching audit logs",
      "kind": "typedef",
      "name": "AuditOptions",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The target's id (the user that the action was performed on)",
          "name": "target"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The action type {@see https://discordapp.com/developers/docs/resources/audit-log#DOCS_AUDIT_LOG/audit-log-entry-object-audit-log-events}",
          "name": "actionType"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Filter the log before a certain entry ID",
          "name": "before"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "How many entries are returned (default 50, minimum 1, maximum 100)",
          "name": "limit"
        }
      ],
      "longname": "AuditOptions",
      "scope": "global",
      "___id": "T000002R000373",
      "___s": true
    },
    {
      "comment": "/**\n * The options for editting a guild\n * @typedef {Object} GuildOptions\n * @property {String} [name = null] The guild's name\n * @property {String} [region = null] The guild's region\n * @property {Number} [verificationLevel = null] The guild's verification level\n * @property {Number} [defaultMessageNotifications = null] The guild's default message notifications\n * @property {Number} [explicitContentFilter = null] The guild's explicit content filter\n * @property {String} [afkChannelID = null] The guild's afk channel id\n * @property {Number} [aftTimeout = null] The guild's afk timeout\n * @property {String} [icon = null] The guild's icon\n * @property {String} [splash = null] The guild's splash \n * @property {String} [systemChannelID = null] The guild's system channel id\n */",
      "meta": {
        "filename": "Guild.js",
        "lineno": 978,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "description": "The options for editting a guild",
      "kind": "typedef",
      "name": "GuildOptions",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The guild's name",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The guild's region",
          "name": "region"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The guild's verification level",
          "name": "verificationLevel"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The guild's default message notifications",
          "name": "defaultMessageNotifications"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The guild's explicit content filter",
          "name": "explicitContentFilter"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The guild's afk channel id",
          "name": "afkChannelID"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The guild's afk timeout",
          "name": "aftTimeout"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The guild's icon",
          "name": "icon"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The guild's splash",
          "name": "splash"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The guild's system channel id",
          "name": "systemChannelID"
        }
      ],
      "longname": "GuildOptions",
      "scope": "global",
      "___id": "T000002R000374",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a guild object\n */",
      "meta": {
        "range": [
          752,
          29846
        ],
        "filename": "Guild.js",
        "lineno": 23,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004857",
          "name": "Guild",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a guild object",
      "name": "Guild",
      "longname": "Guild",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000392",
      "___s": true
    },
    {
      "comment": "/**\n     * The client object which is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          883,
          903
        ],
        "filename": "Guild.js",
        "lineno": 31,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004867",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client object which is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "Guild#client",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000394",
      "___s": true
    },
    {
      "comment": "/**\n     * The ID of the guild\n     * @type {String}\n     */",
      "meta": {
        "range": [
          976,
          992
        ],
        "filename": "Guild.js",
        "lineno": 38,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004873",
          "name": "this.id",
          "type": "MemberExpression",
          "value": "raw.id",
          "paramnames": []
        }
      },
      "description": "The ID of the guild",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "id",
      "longname": "Guild#id",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000395",
      "___s": true
    },
    {
      "comment": "/**\n     * A collection of all the channels in the guild\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          1095,
          1127
        ],
        "filename": "Guild.js",
        "lineno": 45,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004881",
          "name": "this.channels",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A collection of all the channels in the guild",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "channels",
      "longname": "Guild#channels",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000396",
      "___s": true
    },
    {
      "comment": "/**\n     * The guild's name\n     * @type {String}\n     */",
      "meta": {
        "range": [
          1318,
          1338
        ],
        "filename": "Guild.js",
        "lineno": 56,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004922",
          "name": "this.name",
          "type": "MemberExpression",
          "value": "raw.name",
          "paramnames": []
        }
      },
      "description": "The guild's name",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "name",
      "longname": "Guild#name",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000398",
      "___s": true
    },
    {
      "comment": "/**\n     * A collection of all the roles in the guild\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          1438,
          1467
        ],
        "filename": "Guild.js",
        "lineno": 63,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004930",
          "name": "this.roles",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A collection of all the roles in the guild",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "roles",
      "longname": "Guild#roles",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000399",
      "___s": true
    },
    {
      "comment": "/**\n     * A collection of all the emojis in the guild\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          1706,
          1736
        ],
        "filename": "Guild.js",
        "lineno": 74,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100004977",
          "name": "this.emojis",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A collection of all the emojis in the guild",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "emojis",
      "longname": "Guild#emojis",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000401",
      "___s": true
    },
    {
      "comment": "/**\n     * A collection of all the members in the guild\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          2075,
          2106
        ],
        "filename": "Guild.js",
        "lineno": 87,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005051",
          "name": "this.members",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A collection of all the members in the guild",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "members",
      "longname": "Guild#members",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000403",
      "___s": true
    },
    {
      "comment": "/**\n     * A collection of all the user's presences in the guild\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          2370,
          2403
        ],
        "filename": "Guild.js",
        "lineno": 98,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005100",
          "name": "this.presences",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A collection of all the user's presences in the guild",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "presences",
      "longname": "Guild#presences",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000405",
      "___s": true
    },
    {
      "comment": "/**\n     * A URL to the guild's icon\n     * @type {String}\n     */",
      "meta": {
        "range": [
          2742,
          2818
        ],
        "filename": "Guild.js",
        "lineno": 109,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005176",
          "name": "this.iconURL",
          "type": "TemplateLiteral",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A URL to the guild's icon",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "iconURL",
      "longname": "Guild#iconURL",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000407",
      "___s": true
    },
    {
      "comment": "/**\n     * The guild owner's ID\n     * @type {String}\n     */",
      "meta": {
        "range": [
          2892,
          2919
        ],
        "filename": "Guild.js",
        "lineno": 116,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005191",
          "name": "this.ownerID",
          "type": "MemberExpression",
          "value": "raw.owner_id",
          "paramnames": []
        }
      },
      "description": "The guild owner's ID",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "ownerID",
      "longname": "Guild#ownerID",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000408",
      "___s": true
    },
    {
      "comment": "/**\n     * The AFK Channel the guild has set\n     * @type {TextChannel}\n     */",
      "meta": {
        "range": [
          3011,
          3076
        ],
        "filename": "Guild.js",
        "lineno": 123,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005199",
          "name": "this.afkChannel",
          "type": "LogicalExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The AFK Channel the guild has set",
      "type": {
        "names": [
          "TextChannel"
        ]
      },
      "name": "afkChannel",
      "longname": "Guild#afkChannel",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000409",
      "___s": true
    },
    {
      "comment": "/**\n     * The AFK Time in seconds\n     */",
      "meta": {
        "range": [
          3131,
          3172
        ],
        "filename": "Guild.js",
        "lineno": 129,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005215",
          "name": "this.afkTimeout",
          "type": "LogicalExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The AFK Time in seconds",
      "name": "afkTimeout",
      "longname": "Guild#afkTimeout",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000410",
      "___s": true
    },
    {
      "comment": "/**\n     * The Verification Level of the guild from 0-4\n     * @type {String}\n     */",
      "meta": {
        "range": [
          3270,
          3317
        ],
        "filename": "Guild.js",
        "lineno": 136,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005225",
          "name": "this.verificationLevel",
          "type": "MemberExpression",
          "value": "raw.verification_level",
          "paramnames": []
        }
      },
      "description": "The Verification Level of the guild from 0-4",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "verificationLevel",
      "longname": "Guild#verificationLevel",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000411",
      "___s": true
    },
    {
      "comment": "/**\n     * The guild's system channel\n     * @type {TextChannel}\n     */",
      "meta": {
        "range": [
          3402,
          3465
        ],
        "filename": "Guild.js",
        "lineno": 143,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005233",
          "name": "this.systemChannel",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The guild's system channel",
      "type": {
        "names": [
          "TextChannel"
        ]
      },
      "name": "systemChannel",
      "longname": "Guild#systemChannel",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000412",
      "___s": true
    },
    {
      "comment": "/**\n     * Whether the guild is considered large by the Discord API\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          3576,
          3598
        ],
        "filename": "Guild.js",
        "lineno": 150,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005247",
          "name": "this.large",
          "type": "MemberExpression",
          "value": "raw.large",
          "paramnames": []
        }
      },
      "description": "Whether the guild is considered large by the Discord API",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "large",
      "longname": "Guild#large",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000413",
      "___s": true
    },
    {
      "comment": "/**\n     * Whether the guild is available or not\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          3690,
          3723
        ],
        "filename": "Guild.js",
        "lineno": 157,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005255",
          "name": "this.available",
          "type": "UnaryExpression",
          "value": "!raw.unavailable",
          "paramnames": []
        }
      },
      "description": "Whether the guild is available or not",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "available",
      "longname": "Guild#available",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000414",
      "___s": true
    },
    {
      "comment": "/**\n     * The amount of members in the guild\n     * @type {Number}\n     */",
      "meta": {
        "range": [
          3811,
          3845
        ],
        "filename": "Guild.js",
        "lineno": 164,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005264",
          "name": "this.memberSize",
          "type": "MemberExpression",
          "value": "raw.member_count",
          "paramnames": []
        }
      },
      "description": "The amount of members in the guild",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "memberSize",
      "longname": "Guild#memberSize",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000415",
      "___s": true
    },
    {
      "comment": "/**\n     * The timestamp the guild was created at\n     * @type {Date}\n     */",
      "meta": {
        "range": [
          3935,
          3999
        ],
        "filename": "Guild.js",
        "lineno": 171,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005272",
          "name": "this.createdTimestamp",
          "type": "MemberExpression",
          "value": ".timestamp",
          "paramnames": []
        }
      },
      "description": "The timestamp the guild was created at",
      "type": {
        "names": [
          "Date"
        ]
      },
      "name": "createdTimestamp",
      "longname": "Guild#createdTimestamp",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000416",
      "___s": true
    },
    {
      "comment": "/**\n     * The date the guild was created at\n     * @type {Date}\n     */",
      "meta": {
        "range": [
          4084,
          4132
        ],
        "filename": "Guild.js",
        "lineno": 178,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005286",
          "name": "this.createdAt",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The date the guild was created at",
      "type": {
        "names": [
          "Date"
        ]
      },
      "name": "createdAt",
      "longname": "Guild#createdAt",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000417",
      "___s": true
    },
    {
      "comment": "/**\n     * The region the guild is located in\n     * @type {String}\n     */",
      "meta": {
        "range": [
          4220,
          4244
        ],
        "filename": "Guild.js",
        "lineno": 185,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005296",
          "name": "this.region",
          "type": "MemberExpression",
          "value": "raw.region",
          "paramnames": []
        }
      },
      "description": "The region the guild is located in",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "region",
      "longname": "Guild#region",
      "kind": "member",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000418",
      "___s": true
    },
    {
      "comment": "/**\n    * @description This method will create a channel in the guild\n    * @param {String} name The name of the channel to create\n    * @param {String} type The type of the channel, available ones: text, dm, voice, group_dm, category\n    * @param {Object} [opt={}] The options for the channel: bitrate, userLimit, permissions, parent, nsfw\n    * @returns {Promise<Channel>} Returns the newly created Discord Channel\n    * @example \n    * // Creating a text-channel\n    * guild.createChannel('general', 'text').then(c => {\n    *     c.send('Hi');\n    * })\n    */",
      "meta": {
        "range": [
          4820,
          6534
        ],
        "filename": "Guild.js",
        "lineno": 202,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005303",
          "name": "Guild#createChannel",
          "type": "MethodDefinition",
          "paramnames": [
            "name",
            "type",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will create a channel in the guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of the channel to create",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The type of the channel, available ones: text, dm, voice, group_dm, category",
          "name": "type"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options for the channel: bitrate, userLimit, permissions, parent, nsfw",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Channel>"
            ]
          },
          "description": "Returns the newly created Discord Channel"
        }
      ],
      "examples": [
        "// Creating a text-channel\nguild.createChannel('general', 'text').then(c => {\n    c.send('Hi');\n})"
      ],
      "name": "createChannel",
      "longname": "Guild#createChannel",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000419",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will create a role in the guild\n   * @param {String} name The name of the role\n   * @param {Object} [opt={}] The options for the role: color, permissions, hoist, mentionable\n   * @returns {Promise<Role>} Returns the newly created Discord Role\n   * @example \n   * // Creating a role \n   * guild.createRole('role').then(c => {\n   *    member.addRole(c);\n   * });\n   */",
      "meta": {
        "range": [
          6942,
          7464
        ],
        "filename": "Guild.js",
        "lineno": 251,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005610",
          "name": "Guild#createRole",
          "type": "MethodDefinition",
          "paramnames": [
            "name",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will create a role in the guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of the role",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options for the role: color, permissions, hoist, mentionable",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Role>"
            ]
          },
          "description": "Returns the newly created Discord Role"
        }
      ],
      "examples": [
        "// Creating a role \nguild.createRole('role').then(c => {\n   member.addRole(c);\n});"
      ],
      "name": "createRole",
      "longname": "Guild#createRole",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000432",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Removes members from the guild who have been offline for a certain amount of time\n   * @param {Number} days The amount of the days the users are required to be offline to be kicked\n   * @returns {Promise<Guild>} The guild in which the prune method was performed on\n   */",
      "meta": {
        "range": [
          7764,
          8016
        ],
        "filename": "Guild.js",
        "lineno": 273,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005708",
          "name": "Guild#pruneMembers",
          "type": "MethodDefinition",
          "paramnames": [
            "days"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Removes members from the guild who have been offline for a certain amount of time",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "The amount of the days the users are required to be offline to be kicked",
          "name": "days"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The guild in which the prune method was performed on"
        }
      ],
      "name": "pruneMembers",
      "longname": "Guild#pruneMembers",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000439",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method bans a member by id\n   * @param {UserResolvable} user The user to ban\n   * @param {Object} [opt = {}] The options: days and reason\n   * @returns {Promise<User>} The user object of the member that was banned\n   */",
      "meta": {
        "range": [
          8270,
          8781
        ],
        "filename": "Guild.js",
        "lineno": 290,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005758",
          "name": "Guild#ban",
          "type": "MethodDefinition",
          "paramnames": [
            "user",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method bans a member by id",
      "params": [
        {
          "type": {
            "names": [
              "UserResolvable"
            ]
          },
          "description": "The user to ban",
          "name": "user"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options: days and reason",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<User>"
            ]
          },
          "description": "The user object of the member that was banned"
        }
      ],
      "name": "ban",
      "longname": "Guild#ban",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000441",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method unbans a member by id\n   * @param {UserResolvable} user The user to ban\n   * @returns {Promise<User>} The user object of the member that was unbanned\n   */",
      "meta": {
        "range": [
          8978,
          9327
        ],
        "filename": "Guild.js",
        "lineno": 310,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005870",
          "name": "Guild#unban",
          "type": "MethodDefinition",
          "paramnames": [
            "user"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method unbans a member by id",
      "params": [
        {
          "type": {
            "names": [
              "UserResolvable"
            ]
          },
          "description": "The user to ban",
          "name": "user"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<User>"
            ]
          },
          "description": "The user object of the member that was unbanned"
        }
      ],
      "name": "unban",
      "longname": "Guild#unban",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000444",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will kick a member from a guild\n   * @param {UserResolvable} user The user to kick\n   * @param {String} [reason = ''] The options to pass: reason, a string\n   * @returns {Promise<Member>} Returns a promise and a GuildMember object\n   */",
      "meta": {
        "range": [
          9605,
          10070
        ],
        "filename": "Guild.js",
        "lineno": 327,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100005951",
          "name": "Guild#kick",
          "type": "MethodDefinition",
          "paramnames": [
            "user",
            "reason"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will kick a member from a guild",
      "params": [
        {
          "type": {
            "names": [
              "UserResolvable"
            ]
          },
          "description": "The user to kick",
          "name": "user"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": "''",
          "description": "The options to pass: reason, a string",
          "name": "reason"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Member>"
            ]
          },
          "description": "Returns a promise and a GuildMember object"
        }
      ],
      "name": "kick",
      "longname": "Guild#kick",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000445",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Returns all of the invites from the guild\n   * @returns {Promise<Collection>} An array of all of the invites\n    */",
      "meta": {
        "range": [
          10215,
          10699
        ],
        "filename": "Guild.js",
        "lineno": 346,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100006048",
          "name": "Guild#fetchInvites",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Returns all of the invites from the guild",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "An array of all of the invites"
        }
      ],
      "name": "fetchInvites",
      "longname": "Guild#fetchInvites",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000447",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Returns all members of the guild if not cached\n   * @param {Object} [opt = {}] The options: limit and after\n   * @returns {Promise<Collection>} A collection of all of the  members\n   */",
      "meta": {
        "range": [
          10914,
          11503
        ],
        "filename": "Guild.js",
        "lineno": 365,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100006141",
          "name": "Guild#fetchMembers",
          "type": "MethodDefinition",
          "paramnames": [
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Returns all members of the guild if not cached",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options: limit and after",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "A collection of all of the  members"
        }
      ],
      "name": "fetchMembers",
      "longname": "Guild#fetchMembers",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000451",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Fetches the member by id and caches them\n   * @param {UserResolvable} user The user to fetch the member of\n   * @returns {Promise<Member>} A collection of all of the  members\n   */",
      "meta": {
        "range": [
          11713,
          12077
        ],
        "filename": "Guild.js",
        "lineno": 384,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100006267",
          "name": "Guild#fetchMember",
          "type": "MethodDefinition",
          "paramnames": [
            "user"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Fetches the member by id and caches them",
      "params": [
        {
          "type": {
            "names": [
              "UserResolvable"
            ]
          },
          "description": "The user to fetch the member of",
          "name": "user"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Member>"
            ]
          },
          "description": "A collection of all of the  members"
        }
      ],
      "name": "fetchMember",
      "longname": "Guild#fetchMember",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000454",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Returns all users who are banned in the guild\n   * @returns {Promise<Collection>} A collection of all banned members\n   */",
      "meta": {
        "range": [
          12229,
          12695
        ],
        "filename": "Guild.js",
        "lineno": 398,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100006346",
          "name": "Guild#fetchBans",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Returns all users who are banned in the guild",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "A collection of all banned members"
        }
      ],
      "name": "fetchBans",
      "longname": "Guild#fetchBans",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000455",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Returns all users who are banned in the guild\n   * @returns {Promise<Member>} An array of all ban items\n   */",
      "meta": {
        "range": [
          12834,
          13335
        ],
        "filename": "Guild.js",
        "lineno": 416,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100006439",
          "name": "Guild#fetchRoles",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Returns all users who are banned in the guild",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Member>"
            ]
          },
          "description": "An array of all ban items"
        }
      ],
      "name": "fetchRoles",
      "longname": "Guild#fetchRoles",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000459",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Fetches all of the guild's webhooks\n   * @returns {Promise<Collection>} A collection of webhooks mapped by their id\n   */",
      "meta": {
        "range": [
          13486,
          13966
        ],
        "filename": "Guild.js",
        "lineno": 435,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100006539",
          "name": "Guild#fetchWebhooks",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Fetches all of the guild's webhooks",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "A collection of webhooks mapped by their id"
        }
      ],
      "name": "fetchWebhooks",
      "longname": "Guild#fetchWebhooks",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000464",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Returns the count of members who will be kicked upon prune\n   * @returns {Promise<Number>} A number of the amount of members who will be kicked\n   */",
      "meta": {
        "range": [
          14145,
          14395
        ],
        "filename": "Guild.js",
        "lineno": 453,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100006628",
          "name": "Guild#testPrune",
          "type": "MethodDefinition",
          "paramnames": [
            "days"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Returns the count of members who will be kicked upon prune",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Number>"
            ]
          },
          "description": "A number of the amount of members who will be kicked"
        }
      ],
      "name": "testPrune",
      "longname": "Guild#testPrune",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000468",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Fetchs the guilds audit log\n   * @param {Object} opt The options for getting the audit logs {@link AuditOptions}\n   * @returns {Promise<AuditLog>} The audit log entries\n   */",
      "meta": {
        "range": [
          14599,
          15013
        ],
        "filename": "Guild.js",
        "lineno": 469,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100006680",
          "name": "Guild#fetchAuditLogs",
          "type": "MethodDefinition",
          "paramnames": [
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Fetchs the guilds audit log",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The options for getting the audit logs {@link AuditOptions}",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<AuditLog>"
            ]
          },
          "description": "The audit log entries"
        }
      ],
      "name": "fetchAuditLogs",
      "longname": "Guild#fetchAuditLogs",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000470",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Fetchs the guilds emojis and caches them\n   * @returns {Promise<Collection>} A collection of the emojis\n   */",
      "meta": {
        "range": [
          15152,
          15523
        ],
        "filename": "Guild.js",
        "lineno": 487,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100006759",
          "name": "Guild#fetchEmojis",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Fetchs the guilds emojis and caches them",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "A collection of the emojis"
        }
      ],
      "name": "fetchEmojis",
      "longname": "Guild#fetchEmojis",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000475",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Fetches a single emoji by id and caches it\n   * @returns {Promise<Emoji>} The emoji\n   */",
      "meta": {
        "range": [
          15642,
          15946
        ],
        "filename": "Guild.js",
        "lineno": 505,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100006839",
          "name": "Guild#fetchEmoji",
          "type": "MethodDefinition",
          "paramnames": [
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Fetches a single emoji by id and caches it",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Emoji>"
            ]
          },
          "description": "The emoji"
        }
      ],
      "name": "fetchEmoji",
      "longname": "Guild#fetchEmoji",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000479",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will create an emoji\n   * @param {String} name The name of the emoji\n   * @param {String} image The url of the image of the emoji to create\n   * @returns {Emoji} The emoji that was created\n   */",
      "meta": {
        "range": [
          16183,
          16696
        ],
        "filename": "Guild.js",
        "lineno": 521,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100006908",
          "name": "Guild#createEmoji",
          "type": "MethodDefinition",
          "paramnames": [
            "name",
            "image"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will create an emoji",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of the emoji",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The url of the image of the emoji to create",
          "name": "image"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Emoji"
            ]
          },
          "description": "The emoji that was created"
        }
      ],
      "name": "createEmoji",
      "longname": "Guild#createEmoji",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000480",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will delete an emoji id\n   * @param {String} id The id of the emoji\n   * @returns {Promise<Emoji>} The deleted emoji\n   */",
      "meta": {
        "range": [
          16860,
          17195
        ],
        "filename": "Guild.js",
        "lineno": 542,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100007012",
          "name": "Guild#deleteEmoji",
          "type": "MethodDefinition",
          "paramnames": [
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will delete an emoji id",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The id of the emoji",
          "name": "id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Emoji>"
            ]
          },
          "description": "The deleted emoji"
        }
      ],
      "name": "deleteEmoji",
      "longname": "Guild#deleteEmoji",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000484",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will rename a guild\n   * @param {String} newname The name of the guild\n   * @returns {Promise<Guild>} The edited guild\n   */",
      "meta": {
        "range": [
          17361,
          17806
        ],
        "filename": "Guild.js",
        "lineno": 559,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100007086",
          "name": "Guild#setName",
          "type": "MethodDefinition",
          "paramnames": [
            "newname"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will rename a guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of the guild",
          "name": "newname"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The edited guild"
        }
      ],
      "name": "setName",
      "longname": "Guild#setName",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000485",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will set the region of a guild\n   * @param {String} newregion The new region of the guild\n   * @returns {Promise<Guild>} The edited guild\n   */",
      "meta": {
        "range": [
          17991,
          18344
        ],
        "filename": "Guild.js",
        "lineno": 580,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100007179",
          "name": "Guild#setRegion",
          "type": "MethodDefinition",
          "paramnames": [
            "newregion"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will set the region of a guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The new region of the guild",
          "name": "newregion"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The edited guild"
        }
      ],
      "name": "setRegion",
      "longname": "Guild#setRegion",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000489",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will set the verification level of a guild\n   * @param {String} newlevel The verification level of the guild\n   * @returns {Promise<Guild>} The edited guild\n   */",
      "meta": {
        "range": [
          18548,
          18937
        ],
        "filename": "Guild.js",
        "lineno": 599,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100007248",
          "name": "Guild#setVerificationLevel",
          "type": "MethodDefinition",
          "paramnames": [
            "newlevel"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will set the verification level of a guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The verification level of the guild",
          "name": "newlevel"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The edited guild"
        }
      ],
      "name": "setVerificationLevel",
      "longname": "Guild#setVerificationLevel",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000493",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will set the afk channel of a guild\n   * @param {String} id The id of the channel\n   * @returns {Promise<Guild>} The edited guild\n   */",
      "meta": {
        "range": [
          19114,
          19481
        ],
        "filename": "Guild.js",
        "lineno": 618,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100007317",
          "name": "Guild#setAFKChannel",
          "type": "MethodDefinition",
          "paramnames": [
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will set the afk channel of a guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The id of the channel",
          "name": "id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The edited guild"
        }
      ],
      "name": "setAFKChannel",
      "longname": "Guild#setAFKChannel",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000497",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will set the afk timeout of a guild\n   * @param {Number} time The time of the new afk timeout\n   * @returns {Promise<Guild>} The edited guild\n   */",
      "meta": {
        "range": [
          19670,
          20021
        ],
        "filename": "Guild.js",
        "lineno": 637,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100007392",
          "name": "Guild#setAFKTimeout",
          "type": "MethodDefinition",
          "paramnames": [
            "time"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will set the afk timeout of a guild",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "The time of the new afk timeout",
          "name": "time"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The edited guild"
        }
      ],
      "name": "setAFKTimeout",
      "longname": "Guild#setAFKTimeout",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000501",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will set the icon of a guild\n   * @param {String} url The url of the icon for the guild\n   * @returns {Promise<Guild>} The edited guild\n   */",
      "meta": {
        "range": [
          20204,
          20860
        ],
        "filename": "Guild.js",
        "lineno": 656,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100007461",
          "name": "Guild#setIcon",
          "type": "MethodDefinition",
          "paramnames": [
            "url"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will set the icon of a guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The url of the icon for the guild",
          "name": "url"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The edited guild"
        }
      ],
      "name": "setIcon",
      "longname": "Guild#setIcon",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000505",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will set the owner of the guild\n   * @param {String} newname The new owner's id of the guild\n   * @returns {Promise<Guild>} The edited guild\n   */",
      "meta": {
        "range": [
          21048,
          21382
        ],
        "filename": "Guild.js",
        "lineno": 680,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100007595",
          "name": "Guild#setOwner",
          "type": "MethodDefinition",
          "paramnames": [
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will set the owner of the guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The new owner's id of the guild",
          "name": "newname"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The edited guild"
        }
      ],
      "name": "setOwner",
      "longname": "Guild#setOwner",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000510",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will set the splash of a guild\n   * @param {String} url The url for the splash of the guild\n   * @returns {Promise<Guild>} The edited guild\n   */",
      "meta": {
        "range": [
          21569,
          21952
        ],
        "filename": "Guild.js",
        "lineno": 699,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100007664",
          "name": "Guild#setSplash",
          "type": "MethodDefinition",
          "paramnames": [
            "url"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will set the splash of a guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The url for the splash of the guild",
          "name": "url"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The edited guild"
        }
      ],
      "name": "setSplash",
      "longname": "Guild#setSplash",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000514",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will set the system channel of a guild\n   * @param {String} id The id of the channel\n   * @returns {Promise<Guild>} The edited guild\n   */",
      "meta": {
        "range": [
          22132,
          22508
        ],
        "filename": "Guild.js",
        "lineno": 718,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100007742",
          "name": "Guild#setSystemChannel",
          "type": "MethodDefinition",
          "paramnames": [
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will set the system channel of a guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The id of the channel",
          "name": "id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The edited guild"
        }
      ],
      "name": "setSystemChannel",
      "longname": "Guild#setSystemChannel",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000517",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will edit the guild\n   * @param {String} [obj={}] The options {@link GuildOptions}\n   * @returns {Promise<Guild>} The edited guild\n   */",
      "meta": {
        "range": [
          22686,
          23721
        ],
        "filename": "Guild.js",
        "lineno": 737,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100007817",
          "name": "Guild#edit",
          "type": "MethodDefinition",
          "paramnames": [
            "obj"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will edit the guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options {@link GuildOptions}",
          "name": "obj"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The edited guild"
        }
      ],
      "name": "edit",
      "longname": "Guild#edit",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000521",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will delete a guild\n   * @returns {Promise<Guild>} The guild that was deleted\n   */",
      "meta": {
        "range": [
          23846,
          24087
        ],
        "filename": "Guild.js",
        "lineno": 768,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100007991",
          "name": "Guild#delete",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will delete a guild",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The guild that was deleted"
        }
      ],
      "name": "delete",
      "longname": "Guild#delete",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000535",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will make the client leave a guild\n   * @returns {Promise<Guild>} The guild that was left\n   */",
      "meta": {
        "range": [
          24224,
          24473
        ],
        "filename": "Guild.js",
        "lineno": 782,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008046",
          "name": "Guild#leave",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will make the client leave a guild",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Guild>"
            ]
          },
          "description": "The guild that was left"
        }
      ],
      "name": "leave",
      "longname": "Guild#leave",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000536",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will add a guild-member to a guild\n   * @param {String} id The id of the member to add\n   * @param {String} accessToken The access token obtained via Oauth2\n   * @param {Object} [opt={}] The options: roles, nick, mute and deaf\n   * @returns {Promise<Member>} The member that was added\n   */",
      "meta": {
        "range": [
          24805,
          25510
        ],
        "filename": "Guild.js",
        "lineno": 799,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008101",
          "name": "Guild#addGuildMember",
          "type": "MethodDefinition",
          "paramnames": [
            "id",
            "accessToken",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will add a guild-member to a guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The id of the member to add",
          "name": "id"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The access token obtained via Oauth2",
          "name": "accessToken"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options: roles, nick, mute and deaf",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Member>"
            ]
          },
          "description": "The member that was added"
        }
      ],
      "name": "addGuildMember",
      "longname": "Guild#addGuildMember",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000537",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Fetches the guild's voice regions\n   * @param {Boolean} [list=false] If it should return an array of the region names or not\n   * @returns {Promise<Collection>} A collection of the region objects mapped by their region name\n   */",
      "meta": {
        "range": [
          25769,
          26279
        ],
        "filename": "Guild.js",
        "lineno": 826,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008242",
          "name": "Guild#fetchVoiceRegions",
          "type": "MethodDefinition",
          "paramnames": [
            "list"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Fetches the guild's voice regions",
      "params": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "optional": true,
          "defaultvalue": false,
          "description": "If it should return an array of the region names or not",
          "name": "list"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "A collection of the region objects mapped by their region name"
        }
      ],
      "name": "fetchVoiceRegions",
      "longname": "Guild#fetchVoiceRegions",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000546",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Fetches the guild's integrations\n   * @returns {Promise<Collection>} A collection of the integrations mapped by their id\n   */",
      "meta": {
        "range": [
          26435,
          26794
        ],
        "filename": "Guild.js",
        "lineno": 848,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008343",
          "name": "Guild#fetchIntegrations",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Fetches the guild's integrations",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "A collection of the integrations mapped by their id"
        }
      ],
      "name": "fetchIntegrations",
      "longname": "Guild#fetchIntegrations",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000550",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method creates a guild integration\n   * @param {String} type The type of integration to create\n   * @param {String} id The id of the integration to create\n   */",
      "meta": {
        "range": [
          26989,
          27271
        ],
        "filename": "Guild.js",
        "lineno": 866,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008417",
          "name": "Guild#createIntegration",
          "type": "MethodDefinition",
          "paramnames": [
            "type",
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method creates a guild integration",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The type of integration to create",
          "name": "type"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The id of the integration to create",
          "name": "id"
        }
      ],
      "name": "createIntegration",
      "longname": "Guild#createIntegration",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000553",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method edits a guild integration\n   * @param {String} id The id of the integration to edit\n   * @param {Object} opt The options: expireBehaviour, expireGracePeriod and enableEmoticons\n   */",
      "meta": {
        "range": [
          27495,
          27925
        ],
        "filename": "Guild.js",
        "lineno": 883,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008470",
          "name": "Guild#editIntegration",
          "type": "MethodDefinition",
          "paramnames": [
            "id",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method edits a guild integration",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The id of the integration to edit",
          "name": "id"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The options: expireBehaviour, expireGracePeriod and enableEmoticons",
          "name": "opt"
        }
      ],
      "name": "editIntegration",
      "longname": "Guild#editIntegration",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000556",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Deletes a guild's integration\n   * @param {String} id The id of the integration\n   * @returns {Promise<Collection>} The integration object deleted\n   */",
      "meta": {
        "range": [
          28107,
          28332
        ],
        "filename": "Guild.js",
        "lineno": 901,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008541",
          "name": "Guild#deleteIntegration",
          "type": "MethodDefinition",
          "paramnames": [
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Deletes a guild's integration",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The id of the integration",
          "name": "id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "The integration object deleted"
        }
      ],
      "name": "deleteIntegration",
      "longname": "Guild#deleteIntegration",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000560",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Syncs the guild's integrations\n   * @returns {Promise<Collection>} The synced integrations\n   */",
      "meta": {
        "range": [
          28458,
          28685
        ],
        "filename": "Guild.js",
        "lineno": 914,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008587",
          "name": "Guild#syncIntegration",
          "type": "MethodDefinition",
          "paramnames": [
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Syncs the guild's integrations",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "The synced integrations"
        }
      ],
      "name": "syncIntegration",
      "longname": "Guild#syncIntegration",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000561",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Fetches the guild's embed\n   * @returns {Promise<Object>} An object for the guild's embed\n   */",
      "meta": {
        "range": [
          28810,
          29012
        ],
        "filename": "Guild.js",
        "lineno": 927,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008633",
          "name": "Guild#fetchEmbed",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Fetches the guild's embed",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Object>"
            ]
          },
          "description": "An object for the guild's embed"
        }
      ],
      "name": "fetchEmbed",
      "longname": "Guild#fetchEmbed",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000562",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Edit's the guild's embed\n   * @param {Object} [opt = {}] The options: enabled and channelID\n   * @returns {Promise<Object>} The embed that was editted\n   */",
      "meta": {
        "range": [
          29198,
          29513
        ],
        "filename": "Guild.js",
        "lineno": 941,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008676",
          "name": "Guild#editEmbed",
          "type": "MethodDefinition",
          "paramnames": [
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Edit's the guild's embed",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options: enabled and channelID",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Object>"
            ]
          },
          "description": "The embed that was editted"
        }
      ],
      "name": "editEmbed",
      "longname": "Guild#editEmbed",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "___id": "T000002R000563",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This fetches the guild's vanity URL\n   * @returns {Promise<Object>} The vanity URL \n   */",
      "meta": {
        "range": [
          29632,
          29843
        ],
        "filename": "Guild.js",
        "lineno": 957,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008738",
          "name": "Guild#fetchVanityURL",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This fetches the guild's vanity URL",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Object>"
            ]
          },
          "description": "The vanity URL"
        }
      ],
      "name": "fetchVanityURL",
      "longname": "Guild#fetchVanityURL",
      "kind": "function",
      "memberof": "Guild",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000566",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} GuildChannelResolvable\n * @property {String} Snowflake This could be the ID of the channel\n * @property {GuildChannel} User This could be an actual guildchannel class\n */",
      "meta": {
        "filename": "GuildChannel.js",
        "lineno": 358,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "kind": "typedef",
      "name": "GuildChannelResolvable",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "This could be the ID of the channel",
          "name": "Snowflake"
        },
        {
          "type": {
            "names": [
              "GuildChannel"
            ]
          },
          "description": "This could be an actual guildchannel class",
          "name": "User"
        }
      ],
      "longname": "GuildChannelResolvable",
      "scope": "global",
      "___id": "T000002R000568",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents any Guild Channel\n */",
      "meta": {
        "range": [
          361,
          13070
        ],
        "filename": "GuildChannel.js",
        "lineno": 13,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008831",
          "name": "GuildChannel",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "guild",
            "client"
          ]
        }
      },
      "classdesc": "This class represents any Guild Channel",
      "name": "GuildChannel",
      "longname": "GuildChannel",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000576",
      "___s": true
    },
    {
      "comment": "/**\n     * The ID of the channel\n     * @type {String}\n     */",
      "meta": {
        "range": [
          491,
          507
        ],
        "filename": "GuildChannel.js",
        "lineno": 21,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008842",
          "name": "this.id",
          "type": "MemberExpression",
          "value": "raw.id",
          "paramnames": []
        }
      },
      "description": "The ID of the channel",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "id",
      "longname": "GuildChannel#id",
      "kind": "member",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000578",
      "___s": true
    },
    {
      "comment": "/**\n     * The client object which is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          597,
          617
        ],
        "filename": "GuildChannel.js",
        "lineno": 28,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008850",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client object which is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "GuildChannel#client",
      "kind": "member",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000579",
      "___s": true
    },
    {
      "comment": "/**\n     * The name of the channel\n     * @type {String}\n     */",
      "meta": {
        "range": [
          694,
          714
        ],
        "filename": "GuildChannel.js",
        "lineno": 35,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008856",
          "name": "this.name",
          "type": "MemberExpression",
          "value": "raw.name",
          "paramnames": []
        }
      },
      "description": "The name of the channel",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "name",
      "longname": "GuildChannel#name",
      "kind": "member",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000580",
      "___s": true
    },
    {
      "comment": "/**\n     * The position of the channel on the left-hand side\n     * @type {Number}\n     */",
      "meta": {
        "range": [
          817,
          845
        ],
        "filename": "GuildChannel.js",
        "lineno": 42,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008864",
          "name": "this.position",
          "type": "MemberExpression",
          "value": "raw.position",
          "paramnames": []
        }
      },
      "description": "The position of the channel on the left-hand side",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "position",
      "longname": "GuildChannel#position",
      "kind": "member",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000581",
      "___s": true
    },
    {
      "comment": "/**\n     * The guild the channel is in\n     * @type {Guild}\n     */",
      "meta": {
        "range": [
          924,
          942
        ],
        "filename": "GuildChannel.js",
        "lineno": 48,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008872",
          "name": "this.guild",
          "type": "Identifier",
          "value": "guild",
          "paramnames": []
        }
      },
      "description": "The guild the channel is in",
      "type": {
        "names": [
          "Guild"
        ]
      },
      "name": "guild",
      "longname": "GuildChannel#guild",
      "kind": "member",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000582",
      "___s": true
    },
    {
      "comment": "/**\n     * The permission overwrites of the channel\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          1040,
          1084
        ],
        "filename": "GuildChannel.js",
        "lineno": 55,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008878",
          "name": "this.permissionOverwrites",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The permission overwrites of the channel",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "permissionOverwrites",
      "longname": "GuildChannel#permissionOverwrites",
      "kind": "member",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000583",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the name of the channel\n   * @param {String} newname The name of the channel\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   * @example\n   * //Naming a channel 'general'\n   * channel.setName('general')\n   * // This example is for most methods on this constructor\n   */",
      "meta": {
        "range": [
          1642,
          3105
        ],
        "filename": "GuildChannel.js",
        "lineno": 73,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008924",
          "name": "GuildChannel#setName",
          "type": "MethodDefinition",
          "paramnames": [
            "newname"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the name of the channel",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of the channel",
          "name": "newname"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "examples": [
        "//Naming a channel 'general'\nchannel.setName('general')\n// This example is for most methods on this constructor"
      ],
      "name": "setName",
      "longname": "GuildChannel#setName",
      "kind": "function",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000585",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the position of the channel\n   * @param {Number} position The position of the channel\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          3307,
          4780
        ],
        "filename": "GuildChannel.js",
        "lineno": 112,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100009187",
          "name": "GuildChannel#setPosition",
          "type": "MethodDefinition",
          "paramnames": [
            "position"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the position of the channel",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "The position of the channel",
          "name": "position"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "setPosition",
      "longname": "GuildChannel#setPosition",
      "kind": "function",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000594",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the parent of the channel\n   * @param {GuildChannelResolvable} newparent The parent channel\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          4988,
          6467
        ],
        "filename": "GuildChannel.js",
        "lineno": 151,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100009450",
          "name": "GuildChannel#setParent",
          "type": "MethodDefinition",
          "paramnames": [
            "newparent"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the parent of the channel",
      "params": [
        {
          "type": {
            "names": [
              "GuildChannelResolvable"
            ]
          },
          "description": "The parent channel",
          "name": "newparent"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "setParent",
      "longname": "GuildChannel#setParent",
      "kind": "function",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000603",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Deletes the channel\n   * @returns {Promise<GuildChannel>} Returns a promise and the Guild Channel deleted\n   */",
      "meta": {
        "range": [
          6608,
          7674
        ],
        "filename": "GuildChannel.js",
        "lineno": 189,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100009714",
          "name": "GuildChannel#delete",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Deletes the channel",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and the Guild Channel deleted"
        }
      ],
      "name": "delete",
      "longname": "GuildChannel#delete",
      "kind": "function",
      "memberof": "GuildChannel",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000612",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Edits the channel\n   * @param {Object} options Available options: name, position, topic, nsfw, bitrate, userlimit and parent, similar to above methods\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          7936,
          9988
        ],
        "filename": "GuildChannel.js",
        "lineno": 220,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100009894",
          "name": "GuildChannel#edit",
          "type": "MethodDefinition",
          "paramnames": [
            "options"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Edits the channel",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Available options: name, position, topic, nsfw, bitrate, userlimit and parent, similar to above methods",
          "name": "options"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "edit",
      "longname": "GuildChannel#edit",
      "kind": "function",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000620",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Edit permissions of the channels\n   * @param {role} RoleOrMember The role or the member to overwrite the permissions\n   * @param {Object} opt Available options: Allow (Bitfield of Permissions) and Deny (Bitfield of Permissions)\n   * @example \n   * // Here we will stop a member from sending a message in a certain channel\n   * guildchannel.editPermissions(message.member, {allow: [], deny: ['SEND_MESSAGES']}).then(c => {\n   *    console.log(`Updated permissions for ${message.author.username}, and stopped them from sending messages`);\n   * });\n   */",
      "meta": {
        "range": [
          10569,
          11324
        ],
        "filename": "GuildChannel.js",
        "lineno": 272,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010247",
          "name": "GuildChannel#editPermissions",
          "type": "MethodDefinition",
          "paramnames": [
            "RoleOrMember",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Edit permissions of the channels",
      "params": [
        {
          "type": {
            "names": [
              "role"
            ]
          },
          "description": "The role or the member to overwrite the permissions",
          "name": "RoleOrMember"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Available options: Allow (Bitfield of Permissions) and Deny (Bitfield of Permissions)",
          "name": "opt"
        }
      ],
      "examples": [
        "// Here we will stop a member from sending a message in a certain channel\nguildchannel.editPermissions(message.member, {allow: [], deny: ['SEND_MESSAGES']}).then(c => {\n   console.log(`Updated permissions for ${message.author.username}, and stopped them from sending messages`);\n});"
      ],
      "name": "editPermissions",
      "longname": "GuildChannel#editPermissions",
      "kind": "function",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000635",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method creates a webhook\n   * @param {String} name The name of webhook\n   * @param {String} icon The url of the icon for the webhook\n   * @returns {Promise<Webhook>} The created webhook\n   */",
      "meta": {
        "range": [
          11550,
          12045
        ],
        "filename": "GuildChannel.js",
        "lineno": 295,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010382",
          "name": "GuildChannel#createWebhook",
          "type": "MethodDefinition",
          "paramnames": [
            "name",
            "icon"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method creates a webhook",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of webhook",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The url of the icon for the webhook",
          "name": "icon"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Webhook>"
            ]
          },
          "description": "The created webhook"
        }
      ],
      "name": "createWebhook",
      "longname": "GuildChannel#createWebhook",
      "kind": "function",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000639",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will fetch a guilds webhooks\n   * @returns {Promise<Collection>} A collection of fetched webhooks\n   */",
      "meta": {
        "range": [
          12191,
          12673
        ],
        "filename": "GuildChannel.js",
        "lineno": 315,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010475",
          "name": "GuildChannel#fetchWebhooks",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will fetch a guilds webhooks",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "A collection of fetched webhooks"
        }
      ],
      "name": "fetchWebhooks",
      "longname": "GuildChannel#fetchWebhooks",
      "kind": "function",
      "memberof": "GuildChannel",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000644",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method fetches a webhook\n   * @param {String} id The id of the webhook to fetch\n   * @returns {Promise<Webhook>} The fetched webhook\n   */",
      "meta": {
        "range": [
          12846,
          13068
        ],
        "filename": "GuildChannel.js",
        "lineno": 334,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010564",
          "name": "GuildChannel#fetchWebhook",
          "type": "MethodDefinition",
          "paramnames": [
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method fetches a webhook",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The id of the webhook to fetch",
          "name": "id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Webhook>"
            ]
          },
          "description": "The fetched webhook"
        }
      ],
      "name": "fetchWebhook",
      "longname": "GuildChannel#fetchWebhook",
      "kind": "function",
      "memberof": "GuildChannel",
      "scope": "instance",
      "___id": "T000002R000648",
      "___s": true
    },
    {
      "comment": "/**\n * The options for making/editing a channel\n * @typedef {Object} ChannelOptions\n * @property {String} [name = null] The name of the channel\n * @property {Number} [position = null] Position of the channel\n * @property {String} [topic = null] The topic of the channel (textchannel only)\n * @property {Boolean} [nsfw = null] If the channel is NSFW or not (textchannel only)\n * @property {Number} [bitrate = null] The bitrate of the channel (voicechannel only)\n * @property {Number} [userlimit = null] The user limit of the channel (voicechannel only)\n * @property {String} [parent = null] The parent channel's ID of the channel\n */",
      "meta": {
        "filename": "GuildChannel.js",
        "lineno": 343,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "description": "The options for making/editing a channel",
      "kind": "typedef",
      "name": "ChannelOptions",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The name of the channel",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Position of the channel",
          "name": "position"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The topic of the channel (textchannel only)",
          "name": "topic"
        },
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "If the channel is NSFW or not (textchannel only)",
          "name": "nsfw"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The bitrate of the channel (voicechannel only)",
          "name": "bitrate"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The user limit of the channel (voicechannel only)",
          "name": "userlimit"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The parent channel's ID of the channel",
          "name": "parent"
        }
      ],
      "longname": "ChannelOptions",
      "scope": "global",
      "___id": "T000002R000649",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents an invite object\n */",
      "meta": {
        "range": [
          160,
          1855
        ],
        "filename": "Invite.js",
        "lineno": 9,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010637",
          "name": "Invite",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "client"
          ]
        }
      },
      "classdesc": "This class represents an invite object",
      "name": "Invite",
      "longname": "Invite",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000654",
      "___s": true
    },
    {
      "comment": "/**\n     * The client object which is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          292,
          312
        ],
        "filename": "Invite.js",
        "lineno": 17,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010647",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client object which is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "Invite#client",
      "kind": "member",
      "memberof": "Invite",
      "scope": "instance",
      "___id": "T000002R000656",
      "___s": true
    },
    {
      "comment": "/**\n     * The invites code\n     * @type {String}\n     */",
      "meta": {
        "range": [
          382,
          402
        ],
        "filename": "Invite.js",
        "lineno": 24,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010653",
          "name": "this.code",
          "type": "MemberExpression",
          "value": "raw.code",
          "paramnames": []
        }
      },
      "description": "The invites code",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "code",
      "longname": "Invite#code",
      "kind": "member",
      "memberof": "Invite",
      "scope": "instance",
      "___id": "T000002R000657",
      "___s": true
    },
    {
      "comment": "/**\n     * The guild the invite is in\n     * @type {Guild}\n     */",
      "meta": {
        "range": [
          481,
          540
        ],
        "filename": "Invite.js",
        "lineno": 31,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010661",
          "name": "this.guild",
          "type": "MemberExpression",
          "value": ".guild",
          "paramnames": []
        }
      },
      "description": "The guild the invite is in",
      "type": {
        "names": [
          "Guild"
        ]
      },
      "name": "guild",
      "longname": "Invite#guild",
      "kind": "member",
      "memberof": "Invite",
      "scope": "instance",
      "___id": "T000002R000658",
      "___s": true
    },
    {
      "comment": "/**\n     * The channel the invite was created on\n     * @type {GuildChannel}\n     */",
      "meta": {
        "range": [
          637,
          692
        ],
        "filename": "Invite.js",
        "lineno": 38,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010681",
          "name": "this.channel",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The channel the invite was created on",
      "type": {
        "names": [
          "GuildChannel"
        ]
      },
      "name": "channel",
      "longname": "Invite#channel",
      "kind": "member",
      "memberof": "Invite",
      "scope": "instance",
      "___id": "T000002R000659",
      "___s": true
    },
    {
      "comment": "/**\n     * How many times the invite has been used\n     * @type {Number}\n     */",
      "meta": {
        "range": [
          785,
          805
        ],
        "filename": "Invite.js",
        "lineno": 45,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010699",
          "name": "this.uses",
          "type": "MemberExpression",
          "value": "raw.uses",
          "paramnames": []
        }
      },
      "description": "How many times the invite has been used",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "uses",
      "longname": "Invite#uses",
      "kind": "member",
      "memberof": "Invite",
      "scope": "instance",
      "___id": "T000002R000660",
      "___s": true
    },
    {
      "comment": "/**\n     * The user that created the invite\n     * @type {User}\n     */",
      "meta": {
        "range": [
          889,
          938
        ],
        "filename": "Invite.js",
        "lineno": 52,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010707",
          "name": "this.inviter",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The user that created the invite",
      "type": {
        "names": [
          "User"
        ]
      },
      "name": "inviter",
      "longname": "Invite#inviter",
      "kind": "member",
      "memberof": "Invite",
      "scope": "instance",
      "___id": "T000002R000661",
      "___s": true
    },
    {
      "comment": "/**\n     * The date in which the invite was created at\n     * @type {Date}\n     */",
      "meta": {
        "range": [
          1033,
          1074
        ],
        "filename": "Invite.js",
        "lineno": 59,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010720",
          "name": "this.createdAt",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The date in which the invite was created at",
      "type": {
        "names": [
          "Date"
        ]
      },
      "name": "createdAt",
      "longname": "Invite#createdAt",
      "kind": "member",
      "memberof": "Invite",
      "scope": "instance",
      "___id": "T000002R000662",
      "___s": true
    },
    {
      "comment": "/**\n     * The timestamp in which the invite was created at\n     * @type {Date}\n     */",
      "meta": {
        "range": [
          1174,
          1232
        ],
        "filename": "Invite.js",
        "lineno": 66,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010730",
          "name": "this.createdTimestamp",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The timestamp in which the invite was created at",
      "type": {
        "names": [
          "Date"
        ]
      },
      "name": "createdTimestamp",
      "longname": "Invite#createdTimestamp",
      "kind": "member",
      "memberof": "Invite",
      "scope": "instance",
      "___id": "T000002R000663",
      "___s": true
    },
    {
      "comment": "/**\n     * The max uses of the invite\n     * @type {Number}\n     */",
      "meta": {
        "range": [
          1312,
          1339
        ],
        "filename": "Invite.js",
        "lineno": 73,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010743",
          "name": "this.maxUses",
          "type": "MemberExpression",
          "value": "raw.max_uses",
          "paramnames": []
        }
      },
      "description": "The max uses of the invite",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "maxUses",
      "longname": "Invite#maxUses",
      "kind": "member",
      "memberof": "Invite",
      "scope": "instance",
      "___id": "T000002R000664",
      "___s": true
    },
    {
      "comment": "/**\n     * Whether the invite is temporary or not\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          1432,
          1462
        ],
        "filename": "Invite.js",
        "lineno": 80,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010751",
          "name": "this.temporary",
          "type": "MemberExpression",
          "value": "raw.temporary",
          "paramnames": []
        }
      },
      "description": "Whether the invite is temporary or not",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "temporary",
      "longname": "Invite#temporary",
      "kind": "member",
      "memberof": "Invite",
      "scope": "instance",
      "___id": "T000002R000665",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will delete an invite\n   * @returns {Invite} The deleted invite, but will include a lot of missing properties\n   */",
      "meta": {
        "range": [
          1626,
          1853
        ],
        "filename": "Invite.js",
        "lineno": 88,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010758",
          "name": "Invite#delete",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will delete an invite",
      "returns": [
        {
          "type": {
            "names": [
              "Invite"
            ]
          },
          "description": "The deleted invite, but will include a lot of missing properties"
        }
      ],
      "name": "delete",
      "longname": "Invite#delete",
      "kind": "function",
      "memberof": "Invite",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000666",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a member object\n */",
      "meta": {
        "range": [
          282,
          12748
        ],
        "filename": "Member.js",
        "lineno": 12,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010851",
          "name": "Member",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "guild",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a member object",
      "name": "Member",
      "longname": "Member",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000674",
      "___s": true
    },
    {
      "comment": "/**\n       * The ID of the member\n       * @type {Number}\n       */",
      "meta": {
        "range": [
          668,
          689
        ],
        "filename": "Member.js",
        "lineno": 29,
        "columnno": 6,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010921",
          "name": "this.id",
          "type": "MemberExpression",
          "value": "raw.user.id",
          "paramnames": []
        }
      },
      "description": "The ID of the member",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "id",
      "longname": "Member#id",
      "kind": "member",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000678",
      "___s": true
    },
    {
      "comment": "/**\n       * The user object of the member\n       * @type {User}\n       */",
      "meta": {
        "range": [
          780,
          818
        ],
        "filename": "Member.js",
        "lineno": 36,
        "columnno": 6,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010931",
          "name": "this.user",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The user object of the member",
      "type": {
        "names": [
          "User"
        ]
      },
      "name": "user",
      "longname": "Member#user",
      "kind": "member",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000679",
      "___s": true
    },
    {
      "comment": "/**\n       * The roles that the member has \n       * @type {Collection}\n       */",
      "meta": {
        "range": [
          916,
          937
        ],
        "filename": "Member.js",
        "lineno": 43,
        "columnno": 6,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010942",
          "name": "this.roles",
          "type": "Identifier",
          "value": "allRoles",
          "paramnames": []
        }
      },
      "description": "The roles that the member has",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "roles",
      "longname": "Member#roles",
      "kind": "member",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000680",
      "___s": true
    },
    {
      "comment": "/**\n       * The client object which is logged in\n       * @type {Client}\n       */",
      "meta": {
        "range": [
          1037,
          1057
        ],
        "filename": "Member.js",
        "lineno": 50,
        "columnno": 6,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010948",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client object which is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "Member#client",
      "kind": "member",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000681",
      "___s": true
    },
    {
      "comment": "/**\n       * The guild object of the member\n       * @type {Guild}\n       */",
      "meta": {
        "range": [
          1150,
          1168
        ],
        "filename": "Member.js",
        "lineno": 57,
        "columnno": 6,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010954",
          "name": "this.guild",
          "type": "Identifier",
          "value": "guild",
          "paramnames": []
        }
      },
      "description": "The guild object of the member",
      "type": {
        "names": [
          "Guild"
        ]
      },
      "name": "guild",
      "longname": "Member#guild",
      "kind": "member",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000682",
      "___s": true
    },
    {
      "comment": "/**\n       * The nickname of the member if there is one\n       * @type {String}\n       */",
      "meta": {
        "range": [
          1274,
          1298
        ],
        "filename": "Member.js",
        "lineno": 64,
        "columnno": 6,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010960",
          "name": "this.nickname",
          "type": "MemberExpression",
          "value": "raw.nick",
          "paramnames": []
        }
      },
      "description": "The nickname of the member if there is one",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "nickname",
      "longname": "Member#nickname",
      "kind": "member",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000683",
      "___s": true
    },
    {
      "comment": "/**\n       * If the member is muted\n       * @type {Boolean}\n       */",
      "meta": {
        "range": [
          1385,
          1405
        ],
        "filename": "Member.js",
        "lineno": 71,
        "columnno": 6,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010968",
          "name": "this.mute",
          "type": "MemberExpression",
          "value": "raw.mute",
          "paramnames": []
        }
      },
      "description": "If the member is muted",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "mute",
      "longname": "Member#mute",
      "kind": "member",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000684",
      "___s": true
    },
    {
      "comment": "/**\n       * If the member is deafened\n       * @type {Boolean}\n       */",
      "meta": {
        "range": [
          1495,
          1515
        ],
        "filename": "Member.js",
        "lineno": 78,
        "columnno": 6,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010976",
          "name": "this.deaf",
          "type": "MemberExpression",
          "value": "raw.deaf",
          "paramnames": []
        }
      },
      "description": "If the member is deafened",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "deaf",
      "longname": "Member#deaf",
      "kind": "member",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000685",
      "___s": true
    },
    {
      "comment": "/**\n       * The date of when the member joined the guild\n       * @type {Date}\n       */",
      "meta": {
        "range": [
          1621,
          1660
        ],
        "filename": "Member.js",
        "lineno": 85,
        "columnno": 6,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010984",
          "name": "this.joinedAt",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The date of when the member joined the guild",
      "type": {
        "names": [
          "Date"
        ]
      },
      "name": "joinedAt",
      "longname": "Member#joinedAt",
      "kind": "member",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000686",
      "___s": true
    },
    {
      "comment": "/**\n       * The timestamp of when the member joined the guild\n       * @type {Date}\n       */",
      "meta": {
        "range": [
          1771,
          1827
        ],
        "filename": "Member.js",
        "lineno": 92,
        "columnno": 6,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010994",
          "name": "this.joinedTimestamp",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The timestamp of when the member joined the guild",
      "type": {
        "names": [
          "Date"
        ]
      },
      "name": "joinedTimestamp",
      "longname": "Member#joinedTimestamp",
      "kind": "member",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000687",
      "___s": true
    },
    {
      "comment": "/**\n       * The permissions of the member\n       * @type {Array}\n       */",
      "meta": {
        "range": [
          2093,
          2157
        ],
        "filename": "Member.js",
        "lineno": 106,
        "columnno": 6,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100011046",
          "name": "this.permissions",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The permissions of the member",
      "type": {
        "names": [
          "Array"
        ]
      },
      "name": "permissions",
      "longname": "Member#permissions",
      "kind": "member",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000690",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method adds a role to the member\n   * @param {RoleResolvable} role The role to add to the member \n   * @returns {Promise<Member>} Returns a promise and a GuildMember object\n   */",
      "meta": {
        "range": [
          2389,
          2960
        ],
        "filename": "Member.js",
        "lineno": 118,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100011065",
          "name": "Member#addRole",
          "type": "MethodDefinition",
          "paramnames": [
            "role"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method adds a role to the member",
      "params": [
        {
          "type": {
            "names": [
              "RoleResolvable"
            ]
          },
          "description": "The role to add to the member",
          "name": "role"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Member>"
            ]
          },
          "description": "Returns a promise and a GuildMember object"
        }
      ],
      "name": "addRole",
      "longname": "Member#addRole",
      "kind": "function",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000691",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method removes a role to the member\n   * @param {RoleResolvable} role The role to remove from the member \n   * @returns {Promise<Member>} Returns a promise and a GuildMember object\n   */",
      "meta": {
        "range": [
          3182,
          3759
        ],
        "filename": "Member.js",
        "lineno": 138,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100011195",
          "name": "Member#removeRole",
          "type": "MethodDefinition",
          "paramnames": [
            "role"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method removes a role to the member",
      "params": [
        {
          "type": {
            "names": [
              "RoleResolvable"
            ]
          },
          "description": "The role to remove from the member",
          "name": "role"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Member>"
            ]
          },
          "description": "Returns a promise and a GuildMember object"
        }
      ],
      "name": "removeRole",
      "longname": "Member#removeRole",
      "kind": "function",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000693",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will ban a member\n   * @param {Object} [opt = {}] The options to pass: days, number from 0-7 and reason, string      \n   * @returns {Promise<Member>} Returns a promise and a GuildMember object\n   */",
      "meta": {
        "range": [
          4000,
          4510
        ],
        "filename": "Member.js",
        "lineno": 158,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100011325",
          "name": "Member#ban",
          "type": "MethodDefinition",
          "paramnames": [
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will ban a member",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options to pass: days, number from 0-7 and reason, string",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Member>"
            ]
          },
          "description": "Returns a promise and a GuildMember object"
        }
      ],
      "name": "ban",
      "longname": "Member#ban",
      "kind": "function",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000695",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will kick a member from a guild\n   * @param {String} [reason = \"\"] The options to pass: reason, a string\n   * @returns {Promise<Member>} Returns a promise and a GuildMember object\n   */",
      "meta": {
        "range": [
          4737,
          5097
        ],
        "filename": "Member.js",
        "lineno": 179,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100011433",
          "name": "Member#kick",
          "type": "MethodDefinition",
          "paramnames": [
            "reason"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will kick a member from a guild",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": "\"\"",
          "description": "The options to pass: reason, a string",
          "name": "reason"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Member>"
            ]
          },
          "description": "Returns a promise and a GuildMember object"
        }
      ],
      "name": "kick",
      "longname": "Member#kick",
      "kind": "function",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000698",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will send a message to the member\n   * @param {String|Object} [content] The string if it's a normal message or object if it's a richembed\n   * @param {Object} [opt = {}] The options, nonce and tts\n   * @returns {Promise<Message>} Returns a promise and discord message\n   * @example\n   * // Sending an embed\n   * Member.send({title: \"Ping!\", description: \"This User Was Pinged!\", color: 0x00AE86});\n   * @example\n   * // Sending a tts message\n   * Member.send(\"Hi!\", {tts: true});\n   */",
      "meta": {
        "range": [
          5624,
          7653
        ],
        "filename": "Member.js",
        "lineno": 204,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100011508",
          "name": "Member#send",
          "type": "MethodDefinition",
          "paramnames": [
            "content",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will send a message to the member",
      "params": [
        {
          "type": {
            "names": [
              "String",
              "Object"
            ]
          },
          "optional": true,
          "description": "The string if it's a normal message or object if it's a richembed",
          "name": "content"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options, nonce and tts",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Message>"
            ]
          },
          "description": "Returns a promise and discord message"
        }
      ],
      "examples": [
        "// Sending an embed\nMember.send({title: \"Ping!\", description: \"This User Was Pinged!\", color: 0x00AE86});",
        "// Sending a tts message\nMember.send(\"Hi!\", {tts: true});"
      ],
      "name": "send",
      "longname": "Member#send",
      "kind": "function",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000700",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method checks whether a member has a single permission\n   * @param {String} perm The permission\n   * @returns {Boolean} True if the member has the permission, else it's false\n   * @example \n   * // If the member is an admin\n   * member.hasPermission('ADMINISTRATOR');\n   * // If the member does, it'll return true else, it'll return false\n   */",
      "meta": {
        "range": [
          8032,
          8206
        ],
        "filename": "Member.js",
        "lineno": 264,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100011808",
          "name": "Member#hasPermission",
          "type": "MethodDefinition",
          "paramnames": [
            "perm"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method checks whether a member has a single permission",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The permission",
          "name": "perm"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "True if the member has the permission, else it's false"
        }
      ],
      "examples": [
        "// If the member is an admin\nmember.hasPermission('ADMINISTRATOR');\n// If the member does, it'll return true else, it'll return false"
      ],
      "name": "hasPermission",
      "longname": "Member#hasPermission",
      "kind": "function",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000719",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method checks whether a member has multiple permissions\n   * @param {Array} perms The array of permissions\n   * @returns {Boolean} True if the member has the permissions, else it's false\n   * @example \n   * // If the member can send messages and manage messages\n   * member.hasPermissions(['SEND_MESSAGES', 'MANAGE_MESSAGES']);\n   * // If the member does, it'll return true else, it'll return false\n   */",
      "meta": {
        "range": [
          8645,
          8985
        ],
        "filename": "Member.js",
        "lineno": 280,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100011845",
          "name": "Member#hasPermissions",
          "type": "MethodDefinition",
          "paramnames": [
            "perms"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method checks whether a member has multiple permissions",
      "params": [
        {
          "type": {
            "names": [
              "Array"
            ]
          },
          "description": "The array of permissions",
          "name": "perms"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "True if the member has the permissions, else it's false"
        }
      ],
      "examples": [
        "// If the member can send messages and manage messages\nmember.hasPermissions(['SEND_MESSAGES', 'MANAGE_MESSAGES']);\n// If the member does, it'll return true else, it'll return false"
      ],
      "name": "hasPermissions",
      "longname": "Member#hasPermissions",
      "kind": "function",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000720",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method sets the nickname of the member\n   * @param {String} newnick The new nickname of the member\n   * @returns {Promise<Member>} The new member\n   */",
      "meta": {
        "range": [
          9171,
          10329
        ],
        "filename": "Member.js",
        "lineno": 296,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100011923",
          "name": "Member#setNickname",
          "type": "MethodDefinition",
          "paramnames": [
            "newnick"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method sets the nickname of the member",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The new nickname of the member",
          "name": "newnick"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Member>"
            ]
          },
          "description": "The new member"
        }
      ],
      "name": "setNickname",
      "longname": "Member#setNickname",
      "kind": "function",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000723",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method mutes a member in a voice channel\n   * @param {Boolean} boolean True if the member should be muted, and false if they should be unmuted\n   * @returns {Promise<Member>} The new member\n   */",
      "meta": {
        "range": [
          10559,
          11127
        ],
        "filename": "Member.js",
        "lineno": 328,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012177",
          "name": "Member#setMute",
          "type": "MethodDefinition",
          "paramnames": [
            "boolean"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method mutes a member in a voice channel",
      "params": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "True if the member should be muted, and false if they should be unmuted",
          "name": "boolean"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Member>"
            ]
          },
          "description": "The new member"
        }
      ],
      "name": "setMute",
      "longname": "Member#setMute",
      "kind": "function",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000728",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method deafens a member in a voice channel\n   * @param {Boolean} boolean True if the member should be deafened, and false if they should be undeafened\n   * @returns {Promise<Member>} The new member\n   */",
      "meta": {
        "range": [
          11365,
          11933
        ],
        "filename": "Member.js",
        "lineno": 347,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012306",
          "name": "Member#setDeaf",
          "type": "MethodDefinition",
          "paramnames": [
            "boolean"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method deafens a member in a voice channel",
      "params": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "True if the member should be deafened, and false if they should be undeafened",
          "name": "boolean"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Member>"
            ]
          },
          "description": "The new member"
        }
      ],
      "name": "setDeaf",
      "longname": "Member#setDeaf",
      "kind": "function",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000731",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method sets the voice channel of the member\n   * @param {String} id The voice channel's id to move the member to \n   * @returns {Promise<Member>} The new member\n   */",
      "meta": {
        "range": [
          12134,
          12698
        ],
        "filename": "Member.js",
        "lineno": 366,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012435",
          "name": "Member#moveCall",
          "type": "MethodDefinition",
          "paramnames": [
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method sets the voice channel of the member",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The voice channel's id to move the member to",
          "name": "id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Member>"
            ]
          },
          "description": "The new member"
        }
      ],
      "name": "moveCall",
      "longname": "Member#moveCall",
      "kind": "function",
      "memberof": "Member",
      "scope": "instance",
      "___id": "T000002R000734",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} MessageResolvable\n * @property {String} Snowflake This could be the ID of the message\n * @property {Message} Message This could be an actual message class\n */",
      "meta": {
        "filename": "Message.js",
        "lineno": 435,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "kind": "typedef",
      "name": "MessageResolvable",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "This could be the ID of the message",
          "name": "Snowflake"
        },
        {
          "type": {
            "names": [
              "Message"
            ]
          },
          "description": "This could be an actual message class",
          "name": "Message"
        }
      ],
      "longname": "MessageResolvable",
      "scope": "global",
      "___id": "T000002R000739",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a message object\n */",
      "meta": {
        "range": [
          448,
          12121
        ],
        "filename": "Message.js",
        "lineno": 16,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012643",
          "name": "Message",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a message object",
      "name": "Message",
      "longname": "Message",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000750",
      "___s": true
    },
    {
      "comment": "/**\n     * The channel the message was sent in\n     * @type {TextChannel}\n     */",
      "meta": {
        "range": [
          585,
          635
        ],
        "filename": "Message.js",
        "lineno": 24,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012653",
          "name": "this.channel",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The channel the message was sent in",
      "type": {
        "names": [
          "TextChannel"
        ]
      },
      "name": "channel",
      "longname": "Message#channel",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000752",
      "___s": true
    },
    {
      "comment": "/**\n     * The ID of the message sent\n     * @type {String}\n     */",
      "meta": {
        "range": [
          715,
          731
        ],
        "filename": "Message.js",
        "lineno": 31,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012667",
          "name": "this.id",
          "type": "MemberExpression",
          "value": "raw.id",
          "paramnames": []
        }
      },
      "description": "The ID of the message sent",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "id",
      "longname": "Message#id",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000753",
      "___s": true
    },
    {
      "comment": "/**\n     * The guild the message was sent it\n     * @type {Guild}\n     */",
      "meta": {
        "range": [
          817,
          892
        ],
        "filename": "Message.js",
        "lineno": 38,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012675",
          "name": "this.guild",
          "type": "ConditionalExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The guild the message was sent it",
      "type": {
        "names": [
          "Guild"
        ]
      },
      "name": "guild",
      "longname": "Message#guild",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000754",
      "___s": true
    },
    {
      "comment": "/** \n     * The user object of the person who sent the message\n     * @type {User}\n     */",
      "meta": {
        "range": [
          995,
          1037
        ],
        "filename": "Message.js",
        "lineno": 45,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012696",
          "name": "this.author",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The user object of the person who sent the message",
      "type": {
        "names": [
          "User"
        ]
      },
      "name": "author",
      "longname": "Message#author",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000755",
      "___s": true
    },
    {
      "comment": "/**\n     * The guild member object of the person who sent the message\n     * @type {Member}\n     */",
      "meta": {
        "range": [
          1149,
          1263
        ],
        "filename": "Message.js",
        "lineno": 52,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012707",
          "name": "this.member",
          "type": "ConditionalExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The guild member object of the person who sent the message",
      "type": {
        "names": [
          "Member"
        ]
      },
      "name": "member",
      "longname": "Message#member",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000756",
      "___s": true
    },
    {
      "comment": "/**\n     * The client object which is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          1353,
          1373
        ],
        "filename": "Message.js",
        "lineno": 59,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012744",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client object which is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "Message#client",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000757",
      "___s": true
    },
    {
      "comment": "/**\n     * A formated date in which the message was created at\n     * @type {Date}\n     */",
      "meta": {
        "range": [
          1476,
          1516
        ],
        "filename": "Message.js",
        "lineno": 66,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012750",
          "name": "this.createdAt",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "A formated date in which the message was created at",
      "type": {
        "names": [
          "Date"
        ]
      },
      "name": "createdAt",
      "longname": "Message#createdAt",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000758",
      "___s": true
    },
    {
      "comment": "/**\n     * The timestamp in which the message was created at\n     * @type {Date}\n     */",
      "meta": {
        "range": [
          1617,
          1681
        ],
        "filename": "Message.js",
        "lineno": 73,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012760",
          "name": "this.createdTimestamp",
          "type": "MemberExpression",
          "value": ".timestamp",
          "paramnames": []
        }
      },
      "description": "The timestamp in which the message was created at",
      "type": {
        "names": [
          "Date"
        ]
      },
      "name": "createdTimestamp",
      "longname": "Message#createdTimestamp",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000759",
      "___s": true
    },
    {
      "comment": "/**\n     * A collection of all of the users mentioned in the message\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          2429,
          2448
        ],
        "filename": "Message.js",
        "lineno": 97,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012915",
          "name": "this.mentionedUsers",
          "type": "MemberExpression"
        }
      },
      "description": "A collection of all of the users mentioned in the message",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "mentionedUsers",
      "longname": "Message#mentionedUsers",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000765",
      "___s": true
    },
    {
      "comment": "/**\n     * A collection of all of the members mentioned in the message\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          2565,
          2586
        ],
        "filename": "Message.js",
        "lineno": 104,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012919",
          "name": "this.mentionedMembers",
          "type": "MemberExpression"
        }
      },
      "description": "A collection of all of the members mentioned in the message",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "mentionedMembers",
      "longname": "Message#mentionedMembers",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000766",
      "___s": true
    },
    {
      "comment": "/**\n     * A collection of all of the roles mentioned in the message\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          2701,
          2720
        ],
        "filename": "Message.js",
        "lineno": 111,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012923",
          "name": "this.mentionedRoles",
          "type": "MemberExpression"
        }
      },
      "description": "A collection of all of the roles mentioned in the message",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "mentionedRoles",
      "longname": "Message#mentionedRoles",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000767",
      "___s": true
    },
    {
      "comment": "/**\n     * The content of the message\n     * @type {String}\n     */",
      "meta": {
        "range": [
          2805,
          2831
        ],
        "filename": "Message.js",
        "lineno": 119,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012927",
          "name": "this.content",
          "type": "MemberExpression",
          "value": "raw.content",
          "paramnames": []
        }
      },
      "description": "The content of the message",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "content",
      "longname": "Message#content",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000768",
      "___s": true
    },
    {
      "comment": "/**\n     * The clean content of the message which replaces <@id> to @Youssef#0001 for example\n     * @type {String}\n     */",
      "meta": {
        "range": [
          2967,
          3005
        ],
        "filename": "Message.js",
        "lineno": 126,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012935",
          "name": "this.cleanContent",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The clean content of the message which replaces <@id> to @Youssef#0001 for example",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "cleanContent",
      "longname": "Message#cleanContent",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000769",
      "___s": true
    },
    {
      "comment": "/**\n     * The embeds in the message\n     * @type {Array}\n     */",
      "meta": {
        "range": [
          3083,
          3107
        ],
        "filename": "Message.js",
        "lineno": 133,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012943",
          "name": "this.embeds",
          "type": "MemberExpression",
          "value": "raw.embeds",
          "paramnames": []
        }
      },
      "description": "The embeds in the message",
      "type": {
        "names": [
          "Array"
        ]
      },
      "name": "embeds",
      "longname": "Message#embeds",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000770",
      "___s": true
    },
    {
      "comment": "/**\n     * Whether the message is pinned or not\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          3198,
          3222
        ],
        "filename": "Message.js",
        "lineno": 140,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012951",
          "name": "this.pinned",
          "type": "MemberExpression",
          "value": "raw.pinned",
          "paramnames": []
        }
      },
      "description": "Whether the message is pinned or not",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "pinned",
      "longname": "Message#pinned",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000771",
      "___s": true
    },
    {
      "comment": "/**\n     * Whether the message has a nonce or not\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          3315,
          3337
        ],
        "filename": "Message.js",
        "lineno": 147,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012959",
          "name": "this.nonce",
          "type": "MemberExpression",
          "value": "raw.nonce",
          "paramnames": []
        }
      },
      "description": "Whether the message has a nonce or not",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "nonce",
      "longname": "Message#nonce",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000772",
      "___s": true
    },
    {
      "comment": "/**\n     * If the message was editted, what time was it editted\n     * @type {Number}\n     */",
      "meta": {
        "range": [
          3443,
          3486
        ],
        "filename": "Message.js",
        "lineno": 154,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012967",
          "name": "this.editedTimestamp",
          "type": "MemberExpression",
          "value": "raw.edited_timestamp",
          "paramnames": []
        }
      },
      "description": "If the message was editted, what time was it editted",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "editedTimestamp",
      "longname": "Message#editedTimestamp",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000773",
      "___s": true
    },
    {
      "comment": "/**\n     * The attachments in the message\n     * @type {Array}\n     */",
      "meta": {
        "range": [
          3569,
          3603
        ],
        "filename": "Message.js",
        "lineno": 161,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012975",
          "name": "this.attachments",
          "type": "MemberExpression",
          "value": "raw.attachments",
          "paramnames": []
        }
      },
      "description": "The attachments in the message",
      "type": {
        "names": [
          "Array"
        ]
      },
      "name": "attachments",
      "longname": "Message#attachments",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000774",
      "___s": true
    },
    {
      "comment": "/**\n     * Whether the message mentions everyone\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          3695,
          3739
        ],
        "filename": "Message.js",
        "lineno": 168,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012983",
          "name": "this.mentionsEveryone",
          "type": "MemberExpression",
          "value": "raw.mention_everyone",
          "paramnames": []
        }
      },
      "description": "Whether the message mentions everyone",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "mentionsEveryone",
      "longname": "Message#mentionsEveryone",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000775",
      "___s": true
    },
    {
      "comment": "/**\n     * The type of message\n     * @type {String}\n     */",
      "meta": {
        "range": [
          3812,
          3981
        ],
        "filename": "Message.js",
        "lineno": 175,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100012991",
          "name": "this.type",
          "type": "MemberExpression",
          "value": "[\"DEFAULT\",\"RECIPIENT_ADD\",\"RECIPIENT_REMOVE\",\"CALL\",\"CHANNEL_NAME_CHANGE\",\"CHANNEL_ICON_CHANGE\",\"CHANNEL_PINNED_MESSAGE\",\"GUILD_MEMBER_JOIN\"][undefined]",
          "paramnames": []
        }
      },
      "description": "The type of message",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "type",
      "longname": "Message#type",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000776",
      "___s": true
    },
    {
      "comment": "/**\n     * The reactions on the message\n     * @type {Object}\n     */",
      "meta": {
        "range": [
          4067,
          4100
        ],
        "filename": "Message.js",
        "lineno": 182,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100013009",
          "name": "this.reactions",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The reactions on the message",
      "type": {
        "names": [
          "Object"
        ]
      },
      "name": "reactions",
      "longname": "Message#reactions",
      "kind": "member",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000777",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will reply by mentioning the user first\n   * @param {String} content The string to send the message with\n   * @returns {Promise<Message>} Returns a promise and discord message\n   */",
      "meta": {
        "range": [
          4678,
          5092
        ],
        "filename": "Message.js",
        "lineno": 198,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100013100",
          "name": "Message#reply",
          "type": "MethodDefinition",
          "paramnames": [
            "content"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will reply by mentioning the user first",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The string to send the message with",
          "name": "content"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Message>"
            ]
          },
          "description": "Returns a promise and discord message"
        }
      ],
      "name": "reply",
      "longname": "Message#reply",
      "kind": "function",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000783",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will delete a message\n   * @param {String} [reason = ''] The reason why the message is deleted\n   * @returns {Promise<Message>} Returns a promise and the message deleted\n   */",
      "meta": {
        "range": [
          5309,
          5735
        ],
        "filename": "Message.js",
        "lineno": 216,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100013179",
          "name": "Message#delete",
          "type": "MethodDefinition",
          "paramnames": [
            "reason"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will delete a message",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": "''",
          "description": "The reason why the message is deleted",
          "name": "reason"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Message>"
            ]
          },
          "description": "Returns a promise and the message deleted"
        }
      ],
      "name": "delete",
      "longname": "Message#delete",
      "kind": "function",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000785",
      "___s": true
    },
    {
      "comment": "/**\n    * @description This method will edit a message sent by the client\n    * @param {String} newmessage The string to edit the current message with\n    * @returns {Promise<Message>} Returns a promise and discord message\n    */",
      "meta": {
        "range": [
          5972,
          6401
        ],
        "filename": "Message.js",
        "lineno": 233,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100013267",
          "name": "Message#edit",
          "type": "MethodDefinition",
          "paramnames": [
            "newmessage"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will edit a message sent by the client",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The string to edit the current message with",
          "name": "newmessage"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Message>"
            ]
          },
          "description": "Returns a promise and discord message"
        }
      ],
      "name": "edit",
      "longname": "Message#edit",
      "kind": "function",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000787",
      "___s": true
    },
    {
      "comment": "/**\n    * @description This method will pin a discord message in a channel\n    * @returns {Promise<Message>} Returns a promise and discord message (pin)\n    */",
      "meta": {
        "range": [
          6568,
          6959
        ],
        "filename": "Message.js",
        "lineno": 249,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100013341",
          "name": "Message#pin",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will pin a discord message in a channel",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Message>"
            ]
          },
          "description": "Returns a promise and discord message (pin)"
        }
      ],
      "name": "pin",
      "longname": "Message#pin",
      "kind": "function",
      "memberof": "Message",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000789",
      "___s": true
    },
    {
      "comment": "/**\n    * @description This method will unpin a discord message in a channel\n    * @returns {Promise<Message>} Returns a promise and discord message (unpinned message)\n    */",
      "meta": {
        "range": [
          7141,
          7539
        ],
        "filename": "Message.js",
        "lineno": 265,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100013418",
          "name": "Message#unpin",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will unpin a discord message in a channel",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Message>"
            ]
          },
          "description": "Returns a promise and discord message (unpinned message)"
        }
      ],
      "name": "unpin",
      "longname": "Message#unpin",
      "kind": "function",
      "memberof": "Message",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000791",
      "___s": true
    },
    {
      "comment": "/**\n    * @description This method will make the client react to a message\n    * @param {EmojiResolvable} emoji The unicode emoji or the emoji\n    */",
      "meta": {
        "range": [
          7696,
          8376
        ],
        "filename": "Message.js",
        "lineno": 281,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100013489",
          "name": "Message#react",
          "type": "MethodDefinition",
          "paramnames": [
            "emoji"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will make the client react to a message",
      "params": [
        {
          "type": {
            "names": [
              "EmojiResolvable"
            ]
          },
          "description": "The unicode emoji or the emoji",
          "name": "emoji"
        }
      ],
      "name": "react",
      "longname": "Message#react",
      "kind": "function",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000792",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Remove a certain reaction of a certain user\n   * @param {User} user The user whos reaction you want to remove\n   * @param {EmojiResolvable} emoji The emoji you want to remove\n   */",
      "meta": {
        "range": [
          8586,
          9668
        ],
        "filename": "Message.js",
        "lineno": 305,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100013633",
          "name": "Message#removeReaction",
          "type": "MethodDefinition",
          "paramnames": [
            "user",
            "emoji"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Remove a certain reaction of a certain user",
      "params": [
        {
          "type": {
            "names": [
              "User"
            ]
          },
          "description": "The user whos reaction you want to remove",
          "name": "user"
        },
        {
          "type": {
            "names": [
              "EmojiResolvable"
            ]
          },
          "description": "The emoji you want to remove",
          "name": "emoji"
        }
      ],
      "name": "removeReaction",
      "longname": "Message#removeReaction",
      "kind": "function",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000797",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will clear all reactions on a message\n   */",
      "meta": {
        "range": [
          9753,
          10090
        ],
        "filename": "Message.js",
        "lineno": 335,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100013852",
          "name": "Message#clearReactions",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will clear all reactions on a message",
      "name": "clearReactions",
      "longname": "Message#clearReactions",
      "kind": "function",
      "memberof": "Message",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000802",
      "___s": true
    },
    {
      "comment": "/**\n    * @description This method checks if a user is mentioned\n    * @param {UserResolvable} user The user\n    * @returns {Boolean} If the id given belonged to a mentioned user, it will return true, vice versa\n    */",
      "meta": {
        "range": [
          10317,
          10435
        ],
        "filename": "Message.js",
        "lineno": 352,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100013916",
          "name": "Message#isMentioned",
          "type": "MethodDefinition",
          "paramnames": [
            "user"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method checks if a user is mentioned",
      "params": [
        {
          "type": {
            "names": [
              "UserResolvable"
            ]
          },
          "description": "The user",
          "name": "user"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "If the id given belonged to a mentioned user, it will return true, vice versa"
        }
      ],
      "name": "isMentioned",
      "longname": "Message#isMentioned",
      "kind": "function",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000803",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will wait for a reaction on the message\n   * @param {Function} filter The filter to use \n   * @param {Object} [opt = {}] The options\n   * @returns {ReactionCollector} The reaction collector class, with two events, ReactionCollector.on('collect', message) and ReactionCollector.on('end')\n   */",
      "meta": {
        "range": [
          10769,
          10931
        ],
        "filename": "Message.js",
        "lineno": 364,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100013938",
          "name": "Message#collectReaction",
          "type": "MethodDefinition",
          "paramnames": [
            "filter",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will wait for a reaction on the message",
      "params": [
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "The filter to use",
          "name": "filter"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "ReactionCollector"
            ]
          },
          "description": "The reaction collector class, with two events, ReactionCollector.on('collect', message) and ReactionCollector.on('end')"
        }
      ],
      "name": "collectReaction",
      "longname": "Message#collectReaction",
      "kind": "function",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000804",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will fetch all of the users who reacted with a certain emoji\n   * @param {EmojiResolvable} emoji The emoji to look for\n   * @param {Object} [opt = {}] The otpions: before, after and limit \n   * @returns {Promise<Collection>} A collection of all the users who reacted with the certain emoji\n   */",
      "meta": {
        "range": [
          11268,
          12119
        ],
        "filename": "Message.js",
        "lineno": 376,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100013960",
          "name": "Message#fetchReactions",
          "type": "MethodDefinition",
          "paramnames": [
            "emoji",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will fetch all of the users who reacted with a certain emoji",
      "params": [
        {
          "type": {
            "names": [
              "EmojiResolvable"
            ]
          },
          "description": "The emoji to look for",
          "name": "emoji"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The otpions: before, after and limit",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "A collection of all the users who reacted with the certain emoji"
        }
      ],
      "name": "fetchReactions",
      "longname": "Message#fetchReactions",
      "kind": "function",
      "memberof": "Message",
      "scope": "instance",
      "___id": "T000002R000806",
      "___s": true
    },
    {
      "comment": "/**\n * This class is for the message collector for text channels\n */",
      "meta": {
        "range": [
          111,
          1470
        ],
        "filename": "MessageCollector.js",
        "lineno": 7,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014359",
          "name": "MessageCollector",
          "type": "ClassDeclaration",
          "paramnames": [
            "channel",
            "opt",
            "filter"
          ]
        }
      },
      "classdesc": "This class is for the message collector for text channels",
      "name": "MessageCollector",
      "longname": "MessageCollector",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000824",
      "___s": true
    },
    {
      "comment": "/**\n     * The textchannel the collector was called in\n     * @type {TextChannel}\n     */",
      "meta": {
        "range": [
          313,
          335
        ],
        "filename": "MessageCollector.js",
        "lineno": 16,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014376",
          "name": "this.channel",
          "type": "Identifier",
          "value": "channel",
          "paramnames": []
        }
      },
      "description": "The textchannel the collector was called in",
      "type": {
        "names": [
          "TextChannel"
        ]
      },
      "name": "channel",
      "longname": "MessageCollector#channel",
      "kind": "member",
      "memberof": "MessageCollector",
      "scope": "instance",
      "___id": "T000002R000826",
      "___s": true
    },
    {
      "comment": "/**\n     * The client that is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          417,
          450
        ],
        "filename": "MessageCollector.js",
        "lineno": 23,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014382",
          "name": "this.client",
          "type": "MemberExpression",
          "value": "this.channel.client",
          "paramnames": []
        }
      },
      "description": "The client that is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "MessageCollector#client",
      "kind": "member",
      "memberof": "MessageCollector",
      "scope": "instance",
      "___id": "T000002R000827",
      "___s": true
    },
    {
      "comment": "/**\n     * The options defined in the constructor\n     * @type {Object}\n     */",
      "meta": {
        "range": [
          542,
          556
        ],
        "filename": "MessageCollector.js",
        "lineno": 30,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014392",
          "name": "this.opt",
          "type": "Identifier",
          "value": "opt",
          "paramnames": []
        }
      },
      "description": "The options defined in the constructor",
      "type": {
        "names": [
          "Object"
        ]
      },
      "name": "opt",
      "longname": "MessageCollector#opt",
      "kind": "member",
      "memberof": "MessageCollector",
      "scope": "instance",
      "___id": "T000002R000828",
      "___s": true
    },
    {
      "comment": "/**\n     * The filter to pass onto the collector\n     * @type {Function}\n     */",
      "meta": {
        "range": [
          649,
          669
        ],
        "filename": "MessageCollector.js",
        "lineno": 37,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014398",
          "name": "this.filter",
          "type": "Identifier",
          "value": "filter",
          "paramnames": []
        }
      },
      "description": "The filter to pass onto the collector",
      "type": {
        "names": [
          "function"
        ]
      },
      "name": "filter",
      "longname": "MessageCollector#filter",
      "kind": "member",
      "memberof": "MessageCollector",
      "scope": "instance",
      "___id": "T000002R000829",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a message reaction\n */",
      "meta": {
        "range": [
          88,
          427
        ],
        "filename": "MessageReaction.js",
        "lineno": 7,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014575",
          "name": "MessageReaction",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a message reaction",
      "name": "MessageReaction",
      "longname": "MessageReaction",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000835",
      "___s": true
    },
    {
      "comment": "/**\n     * The message that was reacted on\n     * @type {Message}\n     */",
      "meta": {
        "range": [
          225,
          275
        ],
        "filename": "MessageReaction.js",
        "lineno": 15,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014585",
          "name": "this.message",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The message that was reacted on",
      "type": {
        "names": [
          "Message"
        ]
      },
      "name": "message",
      "longname": "MessageReaction#message",
      "kind": "member",
      "memberof": "MessageReaction",
      "scope": "instance",
      "___id": "T000002R000837",
      "___s": true
    },
    {
      "comment": "/**\n     * The emoji that was reacted\n     * @type {Emoji}\n     */",
      "meta": {
        "range": [
          354,
          420
        ],
        "filename": "MessageReaction.js",
        "lineno": 22,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014599",
          "name": "this.emoji",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The emoji that was reacted",
      "type": {
        "names": [
          "Emoji"
        ]
      },
      "name": "emoji",
      "longname": "MessageReaction#emoji",
      "kind": "member",
      "memberof": "MessageReaction",
      "scope": "instance",
      "___id": "T000002R000838",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a channels permission overwrites\n */",
      "meta": {
        "range": [
          150,
          1146
        ],
        "filename": "PermissionOverwrites.js",
        "lineno": 8,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014636",
          "name": "PermissionOverwrites",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "channel",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a channels permission overwrites",
      "name": "PermissionOverwrites",
      "longname": "PermissionOverwrites",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000842",
      "___s": true
    },
    {
      "comment": "/**\n     * The channel the permissions affect\n     * @type {GuildChannel}\n     */",
      "meta": {
        "range": [
          309,
          331
        ],
        "filename": "PermissionOverwrites.js",
        "lineno": 16,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014647",
          "name": "this.channel",
          "type": "Identifier",
          "value": "channel",
          "paramnames": []
        }
      },
      "description": "The channel the permissions affect",
      "type": {
        "names": [
          "GuildChannel"
        ]
      },
      "name": "channel",
      "longname": "PermissionOverwrites#channel",
      "kind": "member",
      "memberof": "PermissionOverwrites",
      "scope": "instance",
      "___id": "T000002R000844",
      "___s": true
    },
    {
      "comment": "/**\n     * The client that is logged in\n     * @type {client}\n     */",
      "meta": {
        "range": [
          413,
          433
        ],
        "filename": "PermissionOverwrites.js",
        "lineno": 23,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014653",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client that is logged in",
      "type": {
        "names": [
          "client"
        ]
      },
      "name": "client",
      "longname": "PermissionOverwrites#client",
      "kind": "member",
      "memberof": "PermissionOverwrites",
      "scope": "instance",
      "___id": "T000002R000845",
      "___s": true
    },
    {
      "comment": "/**\n     * The permissions denied\n     * @type {Array} \n     */",
      "meta": {
        "range": [
          509,
          558
        ],
        "filename": "PermissionOverwrites.js",
        "lineno": 30,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014659",
          "name": "this.denied",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The permissions denied",
      "type": {
        "names": [
          "Array"
        ]
      },
      "name": "denied",
      "longname": "PermissionOverwrites#denied",
      "kind": "member",
      "memberof": "PermissionOverwrites",
      "scope": "instance",
      "___id": "T000002R000846",
      "___s": true
    },
    {
      "comment": "/**\n     * The permissions allowed\n     * @type {Array} \n     */",
      "meta": {
        "range": [
          635,
          686
        ],
        "filename": "PermissionOverwrites.js",
        "lineno": 37,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014672",
          "name": "this.allowed",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The permissions allowed",
      "type": {
        "names": [
          "Array"
        ]
      },
      "name": "allowed",
      "longname": "PermissionOverwrites#allowed",
      "kind": "member",
      "memberof": "PermissionOverwrites",
      "scope": "instance",
      "___id": "T000002R000847",
      "___s": true
    },
    {
      "comment": "/**\n     * The role that is affected, null if it affects a member\n     * @type {Role} \n     */",
      "meta": {
        "range": [
          793,
          849
        ],
        "filename": "PermissionOverwrites.js",
        "lineno": 44,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014685",
          "name": "this.role",
          "type": "LogicalExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The role that is affected, null if it affects a member",
      "type": {
        "names": [
          "Role"
        ]
      },
      "name": "role",
      "longname": "PermissionOverwrites#role",
      "kind": "member",
      "memberof": "PermissionOverwrites",
      "scope": "instance",
      "___id": "T000002R000848",
      "___s": true
    },
    {
      "comment": "/**\n     * The member that is affected, null if it affects a role\n     * @type {Role} \n     */",
      "meta": {
        "range": [
          956,
          1016
        ],
        "filename": "PermissionOverwrites.js",
        "lineno": 51,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014705",
          "name": "this.member",
          "type": "LogicalExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The member that is affected, null if it affects a role",
      "type": {
        "names": [
          "Role"
        ]
      },
      "name": "member",
      "longname": "PermissionOverwrites#member",
      "kind": "member",
      "memberof": "PermissionOverwrites",
      "scope": "instance",
      "___id": "T000002R000849",
      "___s": true
    },
    {
      "comment": "/**\n     * The type of overwrite, either 'role' or 'member'\n     * @type {String}\n     */",
      "meta": {
        "range": [
          1118,
          1138
        ],
        "filename": "PermissionOverwrites.js",
        "lineno": 58,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014725",
          "name": "this.type",
          "type": "MemberExpression",
          "value": "raw.type",
          "paramnames": []
        }
      },
      "description": "The type of overwrite, either 'role' or 'member'",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "type",
      "longname": "PermissionOverwrites#type",
      "kind": "member",
      "memberof": "PermissionOverwrites",
      "scope": "instance",
      "___id": "T000002R000850",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents permissions\n */",
      "meta": {
        "range": [
          787,
          1787
        ],
        "filename": "Permissions.js",
        "lineno": 38,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014798",
          "name": "Permissions",
          "type": "ClassDeclaration",
          "paramnames": [
            "array"
          ]
        }
      },
      "classdesc": "This class represents permissions",
      "name": "Permissions",
      "longname": "Permissions",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000880",
      "___s": true
    },
    {
      "comment": "/**\n     * The permissions provided in the constructor\n     * @type {Array}\n     */",
      "meta": {
        "range": [
          1141,
          1165
        ],
        "filename": "Permissions.js",
        "lineno": 56,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014849",
          "name": "this.permissions",
          "type": "Identifier",
          "value": "array",
          "paramnames": []
        }
      },
      "description": "The permissions provided in the constructor",
      "type": {
        "names": [
          "Array"
        ]
      },
      "name": "permissions",
      "longname": "Permissions#permissions",
      "kind": "member",
      "memberof": "Permissions",
      "scope": "instance",
      "___id": "T000002R000884",
      "___s": true
    },
    {
      "comment": "/**\n   * This method returns the bitfield of the permissions provided as an array in the constrcutor\n   * @returns {Number} The bitfield of the permissions\n   */",
      "meta": {
        "range": [
          1339,
          1382
        ],
        "filename": "Permissions.js",
        "lineno": 64,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014854",
          "name": "Permissions#toBitField",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method returns the bitfield of the permissions provided as an array in the constrcutor",
      "returns": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "The bitfield of the permissions"
        }
      ],
      "name": "toBitField",
      "longname": "Permissions#toBitField",
      "kind": "function",
      "memberof": "Permissions",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000885",
      "___s": true
    },
    {
      "comment": "/**\n   * This method returns an array of permissions based on the bitfield provided\n   * @param {Number} number The bitfield\n   * @returns {Array} Array of permissions\n   */",
      "meta": {
        "range": [
          1563,
          1784
        ],
        "filename": "Permissions.js",
        "lineno": 74,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014862",
          "name": "Permissions#toArray",
          "type": "MethodDefinition",
          "paramnames": [
            "number"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method returns an array of permissions based on the bitfield provided",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "The bitfield",
          "name": "number"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Array"
            ]
          },
          "description": "Array of permissions"
        }
      ],
      "name": "toArray",
      "longname": "Permissions#toArray",
      "kind": "function",
      "memberof": "Permissions",
      "scope": "instance",
      "___id": "T000002R000886",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} Game\n * @property {String} type The type of game eg: PLAYING, STREAMING AND LISTENING\n * @property {String} name The name of the presence\n * @property {Object} timestamps The timestamps of the presence\n * @property {String} state The state of the presence\n * @property {String} details The details of the presence\n * @property {Object} assets The assets of the presence\n * @property {String} applicationID The application ID of the presence\n */",
      "meta": {
        "filename": "Presence.js",
        "lineno": 51,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "kind": "typedef",
      "name": "Game",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The type of game eg: PLAYING, STREAMING AND LISTENING",
          "name": "type"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of the presence",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The timestamps of the presence",
          "name": "timestamps"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The state of the presence",
          "name": "state"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The details of the presence",
          "name": "details"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The assets of the presence",
          "name": "assets"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The application ID of the presence",
          "name": "applicationID"
        }
      ],
      "longname": "Game",
      "scope": "global",
      "___id": "T000002R000894",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a user's presence\n */",
      "meta": {
        "range": [
          85,
          1038
        ],
        "filename": "Presence.js",
        "lineno": 7,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014986",
          "name": "Presence",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a user's presence",
      "name": "Presence",
      "longname": "Presence",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000896",
      "___s": true
    },
    {
      "comment": "/**\n     * The client object that is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          218,
          238
        ],
        "filename": "Presence.js",
        "lineno": 15,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100014996",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client object that is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "Presence#client",
      "kind": "member",
      "memberof": "Presence",
      "scope": "instance",
      "___id": "T000002R000898",
      "___s": true
    },
    {
      "comment": "/**\n     * The user that the presence of updated\n     * @type {User}\n     */",
      "meta": {
        "range": [
          326,
          372
        ],
        "filename": "Presence.js",
        "lineno": 21,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015002",
          "name": "this.user",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The user that the presence of updated",
      "type": {
        "names": [
          "User"
        ]
      },
      "name": "user",
      "longname": "Presence#user",
      "kind": "member",
      "memberof": "Presence",
      "scope": "instance",
      "___id": "T000002R000899",
      "___s": true
    },
    {
      "comment": "/**\n     * The status of the user\n     * @type {String}\n     */",
      "meta": {
        "range": [
          448,
          485
        ],
        "filename": "Presence.js",
        "lineno": 28,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015020",
          "name": "this.status",
          "type": "LogicalExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The status of the user",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "status",
      "longname": "Presence#status",
      "kind": "member",
      "memberof": "Presence",
      "scope": "instance",
      "___id": "T000002R000900",
      "___s": true
    },
    {
      "comment": "/**\n     * The game for the presence\n     * @type {Object}\n     */",
      "meta": {
        "range": [
          1015,
          1031
        ],
        "filename": "Presence.js",
        "lineno": 45,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015123",
          "name": "this.game",
          "type": "Identifier",
          "value": "game",
          "paramnames": []
        }
      },
      "description": "The game for the presence",
      "type": {
        "names": [
          "Object"
        ]
      },
      "name": "game",
      "longname": "Presence#game",
      "kind": "member",
      "memberof": "Presence",
      "scope": "instance",
      "___id": "T000002R000909",
      "___s": true
    },
    {
      "comment": "/**\n * This event is emitted whenever the requirements for the collector are met\n * @event ReactionCollector#collect\n * @param {MessageReaction} Reaction The emoji that was reacted\n * @param {User} User The user who reacted\n */",
      "meta": {
        "filename": "ReactionCollector.js",
        "lineno": 71,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "description": "This event is emitted whenever the requirements for the collector are met",
      "kind": "event",
      "name": "collect",
      "params": [
        {
          "type": {
            "names": [
              "MessageReaction"
            ]
          },
          "description": "The emoji that was reacted",
          "name": "Reaction"
        },
        {
          "type": {
            "names": [
              "User"
            ]
          },
          "description": "The user who reacted",
          "name": "User"
        }
      ],
      "memberof": "ReactionCollector",
      "longname": "ReactionCollector#event:collect",
      "scope": "instance",
      "___id": "T000002R000911",
      "___s": true
    },
    {
      "comment": "/**\n * This event is emitted whenever the requirements for the collector aren't met\n * @event ReactionCollector#end\n */",
      "meta": {
        "filename": "ReactionCollector.js",
        "lineno": 78,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "description": "This event is emitted whenever the requirements for the collector aren't met",
      "kind": "event",
      "name": "end",
      "memberof": "ReactionCollector",
      "longname": "ReactionCollector#event:end",
      "scope": "instance",
      "___id": "T000002R000912",
      "___s": true
    },
    {
      "comment": "/**\n * This class is for the message collector for text channels\n */",
      "meta": {
        "range": [
          111,
          1557
        ],
        "filename": "ReactionCollector.js",
        "lineno": 7,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015142",
          "name": "ReactionCollector",
          "type": "ClassDeclaration",
          "paramnames": [
            "channel",
            "opt",
            "filter"
          ]
        }
      },
      "classdesc": "This class is for the message collector for text channels",
      "name": "ReactionCollector",
      "longname": "ReactionCollector",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000914",
      "___s": true
    },
    {
      "comment": "/**\n     * The textchannel the collector was called in\n     * @type {TextChannel}\n     */",
      "meta": {
        "range": [
          314,
          336
        ],
        "filename": "ReactionCollector.js",
        "lineno": 16,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015159",
          "name": "this.channel",
          "type": "Identifier",
          "value": "channel",
          "paramnames": []
        }
      },
      "description": "The textchannel the collector was called in",
      "type": {
        "names": [
          "TextChannel"
        ]
      },
      "name": "channel",
      "longname": "ReactionCollector#channel",
      "kind": "member",
      "memberof": "ReactionCollector",
      "scope": "instance",
      "___id": "T000002R000916",
      "___s": true
    },
    {
      "comment": "/**\n     * The client that is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          418,
          451
        ],
        "filename": "ReactionCollector.js",
        "lineno": 23,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015165",
          "name": "this.client",
          "type": "MemberExpression",
          "value": "this.channel.client",
          "paramnames": []
        }
      },
      "description": "The client that is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "ReactionCollector#client",
      "kind": "member",
      "memberof": "ReactionCollector",
      "scope": "instance",
      "___id": "T000002R000917",
      "___s": true
    },
    {
      "comment": "/**\n     * The options defined in the constructor\n     * @type {Object}\n     */",
      "meta": {
        "range": [
          543,
          557
        ],
        "filename": "ReactionCollector.js",
        "lineno": 30,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015175",
          "name": "this.opt",
          "type": "Identifier",
          "value": "opt",
          "paramnames": []
        }
      },
      "description": "The options defined in the constructor",
      "type": {
        "names": [
          "Object"
        ]
      },
      "name": "opt",
      "longname": "ReactionCollector#opt",
      "kind": "member",
      "memberof": "ReactionCollector",
      "scope": "instance",
      "___id": "T000002R000918",
      "___s": true
    },
    {
      "comment": "/**\n     * The filter to pass onto the collector\n     * @type {Function}\n     */",
      "meta": {
        "range": [
          650,
          670
        ],
        "filename": "ReactionCollector.js",
        "lineno": 37,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015181",
          "name": "this.filter",
          "type": "Identifier",
          "value": "filter",
          "paramnames": []
        }
      },
      "description": "The filter to pass onto the collector",
      "type": {
        "names": [
          "function"
        ]
      },
      "name": "filter",
      "longname": "ReactionCollector#filter",
      "kind": "member",
      "memberof": "ReactionCollector",
      "scope": "instance",
      "___id": "T000002R000919",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} RoleResolvable\n * @property {String} Snowflake This could be the ID of the role\n * @property {Role} Role This could be an actual role class\n */",
      "meta": {
        "filename": "Role.js",
        "lineno": 128,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "kind": "typedef",
      "name": "RoleResolvable",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "This could be the ID of the role",
          "name": "Snowflake"
        },
        {
          "type": {
            "names": [
              "Role"
            ]
          },
          "description": "This could be an actual role class",
          "name": "Role"
        }
      ],
      "longname": "RoleResolvable",
      "scope": "global",
      "___id": "T000002R000924",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a role of a member\n */",
      "meta": {
        "range": [
          186,
          2590
        ],
        "filename": "Role.js",
        "lineno": 9,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015380",
          "name": "Role",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "guild",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a role of a member",
      "name": "Role",
      "longname": "Role",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000928",
      "___s": true
    },
    {
      "comment": "/**\n     * The roles ID\n     * @type {String}\n     */",
      "meta": {
        "range": [
          299,
          315
        ],
        "filename": "Role.js",
        "lineno": 17,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015391",
          "name": "this.id",
          "type": "MemberExpression",
          "value": "raw.id",
          "paramnames": []
        }
      },
      "description": "The roles ID",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "id",
      "longname": "Role#id",
      "kind": "member",
      "memberof": "Role",
      "scope": "instance",
      "___id": "T000002R000930",
      "___s": true
    },
    {
      "comment": "/**\n     * The name of the role\n     * @type {String}\n     */",
      "meta": {
        "range": [
          389,
          409
        ],
        "filename": "Role.js",
        "lineno": 24,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015399",
          "name": "this.name",
          "type": "MemberExpression",
          "value": "raw.name",
          "paramnames": []
        }
      },
      "description": "The name of the role",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "name",
      "longname": "Role#name",
      "kind": "member",
      "memberof": "Role",
      "scope": "instance",
      "___id": "T000002R000931",
      "___s": true
    },
    {
      "comment": "/**\n     * The permissions of the role\n     * @type {Array}\n     */",
      "meta": {
        "range": [
          489,
          634
        ],
        "filename": "Role.js",
        "lineno": 31,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015407",
          "name": "this.permissions",
          "type": "ConditionalExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The permissions of the role",
      "type": {
        "names": [
          "Array"
        ]
      },
      "name": "permissions",
      "longname": "Role#permissions",
      "kind": "member",
      "memberof": "Role",
      "scope": "instance",
      "___id": "T000002R000932",
      "___s": true
    },
    {
      "comment": "/**\n     * If the role is managed or not\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          718,
          744
        ],
        "filename": "Role.js",
        "lineno": 38,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015438",
          "name": "this.managed",
          "type": "MemberExpression",
          "value": "raw.managed",
          "paramnames": []
        }
      },
      "description": "If the role is managed or not",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "managed",
      "longname": "Role#managed",
      "kind": "member",
      "memberof": "Role",
      "scope": "instance",
      "___id": "T000002R000933",
      "___s": true
    },
    {
      "comment": "/**\n     * The position of the role\n     * @type {Number}\n     */",
      "meta": {
        "range": [
          822,
          850
        ],
        "filename": "Role.js",
        "lineno": 45,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015446",
          "name": "this.position",
          "type": "MemberExpression",
          "value": "raw.position",
          "paramnames": []
        }
      },
      "description": "The position of the role",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "position",
      "longname": "Role#position",
      "kind": "member",
      "memberof": "Role",
      "scope": "instance",
      "___id": "T000002R000934",
      "___s": true
    },
    {
      "comment": "/**\n     * If the role is mentionable or not\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          938,
          972
        ],
        "filename": "Role.js",
        "lineno": 52,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015454",
          "name": "this.mentionable",
          "type": "MemberExpression",
          "value": "raw.mentionable",
          "paramnames": []
        }
      },
      "description": "If the role is mentionable or not",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "mentionable",
      "longname": "Role#mentionable",
      "kind": "member",
      "memberof": "Role",
      "scope": "instance",
      "___id": "T000002R000935",
      "___s": true
    },
    {
      "comment": "/**\n     * If the role is hoisted or not\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          1056,
          1080
        ],
        "filename": "Role.js",
        "lineno": 59,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015462",
          "name": "this.hoisted",
          "type": "MemberExpression",
          "value": "raw.hoist",
          "paramnames": []
        }
      },
      "description": "If the role is hoisted or not",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "hoisted",
      "longname": "Role#hoisted",
      "kind": "member",
      "memberof": "Role",
      "scope": "instance",
      "___id": "T000002R000936",
      "___s": true
    },
    {
      "comment": "/**\n     * The color of the role\n     * @type {Number}\n     */",
      "meta": {
        "range": [
          1155,
          1177
        ],
        "filename": "Role.js",
        "lineno": 66,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015470",
          "name": "this.color",
          "type": "MemberExpression",
          "value": "raw.color",
          "paramnames": []
        }
      },
      "description": "The color of the role",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "color",
      "longname": "Role#color",
      "kind": "member",
      "memberof": "Role",
      "scope": "instance",
      "___id": "T000002R000937",
      "___s": true
    },
    {
      "comment": "/**\n     * The client that is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          1259,
          1279
        ],
        "filename": "Role.js",
        "lineno": 73,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015478",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client that is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "Role#client",
      "kind": "member",
      "memberof": "Role",
      "scope": "instance",
      "___id": "T000002R000938",
      "___s": true
    },
    {
      "comment": "/**\n     * The guild the role is in\n     * @type {Guild}\n     */",
      "meta": {
        "range": [
          1356,
          1374
        ],
        "filename": "Role.js",
        "lineno": 80,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015484",
          "name": "this.guild",
          "type": "Identifier",
          "value": "guild",
          "paramnames": []
        }
      },
      "description": "The guild the role is in",
      "type": {
        "names": [
          "Guild"
        ]
      },
      "name": "guild",
      "longname": "Role#guild",
      "kind": "member",
      "memberof": "Role",
      "scope": "instance",
      "___id": "T000002R000939",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This delete's the role\n   * @returns {Promise<Role>} The role that was deleted\n   */",
      "meta": {
        "range": [
          1493,
          1755
        ],
        "filename": "Role.js",
        "lineno": 88,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015489",
          "name": "Role#delete",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This delete's the role",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Role>"
            ]
          },
          "description": "The role that was deleted"
        }
      ],
      "name": "delete",
      "longname": "Role#delete",
      "kind": "function",
      "memberof": "Role",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000940",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This sets the position of the role\n   * @param {Number} number The position of the role\n   * @returns {Promise<Collection>} A collection of all of the roles as all of their positions update\n   */",
      "meta": {
        "range": [
          1980,
          2538
        ],
        "filename": "Role.js",
        "lineno": 103,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015550",
          "name": "Role#setPosition",
          "type": "MethodDefinition",
          "paramnames": [
            "number"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This sets the position of the role",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "The position of the role",
          "name": "number"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "A collection of all of the roles as all of their positions update"
        }
      ],
      "name": "setPosition",
      "longname": "Role#setPosition",
      "kind": "function",
      "memberof": "Role",
      "scope": "instance",
      "___id": "T000002R000941",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a Text Channel\n * @extends {GuildChannel}\n */",
      "meta": {
        "range": [
          211,
          12275
        ],
        "filename": "TextChannel.js",
        "lineno": 10,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015698",
          "name": "TextChannel",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "guild",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a Text Channel",
      "augments": [
        "GuildChannel"
      ],
      "name": "TextChannel",
      "longname": "TextChannel",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R000953",
      "___s": true
    },
    {
      "comment": "/**\n     * The type of channel\n     * @type {String}\n     */",
      "meta": {
        "range": [
          390,
          408
        ],
        "filename": "TextChannel.js",
        "lineno": 19,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015716",
          "name": "this.type",
          "type": "Literal",
          "value": "text",
          "paramnames": []
        }
      },
      "description": "The type of channel",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "type",
      "longname": "TextChannel#type",
      "kind": "member",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R000955",
      "___s": true
    },
    {
      "comment": "/**\n     * This is the ID of the last message in the channel\n     * @type {String}\n     */",
      "meta": {
        "range": [
          511,
          551
        ],
        "filename": "TextChannel.js",
        "lineno": 26,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015722",
          "name": "this.lastMessageID",
          "type": "MemberExpression",
          "value": "raw.last_message_id",
          "paramnames": []
        }
      },
      "description": "This is the ID of the last message in the channel",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "lastMessageID",
      "longname": "TextChannel#lastMessageID",
      "kind": "member",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R000956",
      "___s": true
    },
    {
      "comment": "/**\n     * Whether the channel is nsfw or not\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          640,
          660
        ],
        "filename": "TextChannel.js",
        "lineno": 33,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015730",
          "name": "this.nsfw",
          "type": "MemberExpression",
          "value": "raw.nsfw",
          "paramnames": []
        }
      },
      "description": "Whether the channel is nsfw or not",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "nsfw",
      "longname": "TextChannel#nsfw",
      "kind": "member",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R000957",
      "___s": true
    },
    {
      "comment": "/**\n     * The topic of the channel\n     * @type {String}\n     */",
      "meta": {
        "range": [
          738,
          760
        ],
        "filename": "TextChannel.js",
        "lineno": 40,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015738",
          "name": "this.topic",
          "type": "MemberExpression",
          "value": "raw.topic",
          "paramnames": []
        }
      },
      "description": "The topic of the channel",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "topic",
      "longname": "TextChannel#topic",
      "kind": "member",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R000958",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will send a message to the channel specified\n   * @param {String|Object} content The string if it's a normal message or object if it's a richembed\n   * @param {Object} [opt = {}] The options, nonce and tts {@link MessageOptions}\n   * @returns {Promise<Message>} Returns a promise and discord message\n   * @example\n   * // Sending an embed\n   * TextChannel.send({ title: \"Ping!\", description: \"This User Was Pinged!\", color: 0x00AE86 });\n   * @example\n   * // Sending a tts message\n   * TextChannel.send(\"Hi!\", { tts: true });\n   */",
      "meta": {
        "range": [
          1339,
          3038
        ],
        "filename": "TextChannel.js",
        "lineno": 57,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015745",
          "name": "TextChannel#send",
          "type": "MethodDefinition",
          "paramnames": [
            "content",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will send a message to the channel specified",
      "params": [
        {
          "type": {
            "names": [
              "String",
              "Object"
            ]
          },
          "description": "The string if it's a normal message or object if it's a richembed",
          "name": "content"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options, nonce and tts {@link MessageOptions}",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Message>"
            ]
          },
          "description": "Returns a promise and discord message"
        }
      ],
      "examples": [
        "// Sending an embed\nTextChannel.send({ title: \"Ping!\", description: \"This User Was Pinged!\", color: 0x00AE86 });",
        "// Sending a tts message\nTextChannel.send(\"Hi!\", { tts: true });"
      ],
      "name": "send",
      "longname": "TextChannel#send",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R000959",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will get the most recent message sent\n   * @returns {Promise<Message>} Returns a promise and a discord message\n   */",
      "meta": {
        "range": [
          3196,
          3674
        ],
        "filename": "TextChannel.js",
        "lineno": 104,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100015999",
          "name": "TextChannel#lastMessage",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will get the most recent message sent",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Message>"
            ]
          },
          "description": "Returns a promise and a discord message"
        }
      ],
      "name": "lastMessage",
      "longname": "TextChannel#lastMessage",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "params": [],
      "___id": "T000002R000976",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Will fetch a message if not cached\n   * @param {String} id The ID of the message\n   * @returns {Promise<Message>} Returns a promise and a discord message\n   */",
      "meta": {
        "range": [
          3863,
          4457
        ],
        "filename": "TextChannel.js",
        "lineno": 123,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100016076",
          "name": "TextChannel#fetchMessage",
          "type": "MethodDefinition",
          "paramnames": [
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Will fetch a message if not cached",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The ID of the message",
          "name": "id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Message>"
            ]
          },
          "description": "Returns a promise and a discord message"
        }
      ],
      "name": "fetchMessage",
      "longname": "TextChannel#fetchMessage",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R000978",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Will fetch a group of messages if not cached\n   * @param {Object} opt The options: around, before, after and limit\n   * @returns {Promise<Message>} Returns a promise and (a) discord message(s)\n   */",
      "meta": {
        "range": [
          4685,
          5489
        ],
        "filename": "TextChannel.js",
        "lineno": 144,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100016167",
          "name": "TextChannel#fetchMessages",
          "type": "MethodDefinition",
          "paramnames": [
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Will fetch a group of messages if not cached",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The options: around, before, after and limit",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Message>"
            ]
          },
          "description": "Returns a promise and (a) discord message(s)"
        }
      ],
      "name": "fetchMessages",
      "longname": "TextChannel#fetchMessages",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R000981",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the nsfw of the channel\n   * @param {Boolean} boolean Whether the channel should be nsfw or not\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          5702,
          6296
        ],
        "filename": "TextChannel.js",
        "lineno": 168,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100016328",
          "name": "TextChannel#setNSFW",
          "type": "MethodDefinition",
          "paramnames": [
            "boolean"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the nsfw of the channel",
      "params": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "description": "Whether the channel should be nsfw or not",
          "name": "boolean"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "setNSFW",
      "longname": "TextChannel#setNSFW",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R000985",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the topic of the channel\n   * @param {String} newtopic The topic of the channel\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          6493,
          7155
        ],
        "filename": "TextChannel.js",
        "lineno": 191,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100016433",
          "name": "TextChannel#setTopic",
          "type": "MethodDefinition",
          "paramnames": [
            "newtopic"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the topic of the channel",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The topic of the channel",
          "name": "newtopic"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "setTopic",
      "longname": "TextChannel#setTopic",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R000988",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will create an invite on the certain channel\n   * @param {Object} opt The options: maxAge, maxUses, temp and unique\n   * @returns {Promise<Invite>} Returns a promise and an invite\n   */",
      "meta": {
        "range": [
          7382,
          7852
        ],
        "filename": "TextChannel.js",
        "lineno": 214,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100016544",
          "name": "TextChannel#createInvite",
          "type": "MethodDefinition",
          "paramnames": [
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will create an invite on the certain channel",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The options: maxAge, maxUses, temp and unique",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Invite>"
            ]
          },
          "description": "Returns a promise and an invite"
        }
      ],
      "name": "createInvite",
      "longname": "TextChannel#createInvite",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R000992",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will bulk delete messages\n   * @param {Number} number The number of messages to delete\n   */",
      "meta": {
        "range": [
          7986,
          8573
        ],
        "filename": "TextChannel.js",
        "lineno": 233,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100016630",
          "name": "TextChannel#bulkDelete",
          "type": "MethodDefinition",
          "paramnames": [
            "number"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will bulk delete messages",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "The number of messages to delete",
          "name": "number"
        }
      ],
      "name": "bulkDelete",
      "longname": "TextChannel#bulkDelete",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R000998",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This will make the client type in this channel\n   * @param {Nunber} [loops=1] How many loops to make, each loop lasts 10 seconds\n   */",
      "meta": {
        "range": [
          8737,
          9156
        ],
        "filename": "TextChannel.js",
        "lineno": 254,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100016727",
          "name": "TextChannel#startTyping",
          "type": "MethodDefinition",
          "paramnames": [
            "loops"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This will make the client type in this channel",
      "params": [
        {
          "type": {
            "names": [
              "Nunber"
            ]
          },
          "optional": true,
          "defaultvalue": 1,
          "description": "How many loops to make, each loop lasts 10 seconds",
          "name": "loops"
        }
      ],
      "name": "startTyping",
      "longname": "TextChannel#startTyping",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R001002",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This will retreive all pinned messages on the channel.\n   * @returns {Array} Returns an array of messages\n    */",
      "meta": {
        "range": [
          9298,
          9768
        ],
        "filename": "TextChannel.js",
        "lineno": 271,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100016802",
          "name": "TextChannel#fetchPins",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This will retreive all pinned messages on the channel.",
      "returns": [
        {
          "type": {
            "names": [
              "Array"
            ]
          },
          "description": "Returns an array of messages"
        }
      ],
      "name": "fetchPins",
      "longname": "TextChannel#fetchPins",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "params": [],
      "___id": "T000002R001004",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Will add a pinned message to the channel.\n   * @param {MessageResolvable} message The message to pin\n   * @returns {Message} The messages that was pinned\n   */",
      "meta": {
        "range": [
          9957,
          10433
        ],
        "filename": "TextChannel.js",
        "lineno": 289,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100016885",
          "name": "TextChannel#pinMessage",
          "type": "MethodDefinition",
          "paramnames": [
            "message"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Will add a pinned message to the channel.",
      "params": [
        {
          "type": {
            "names": [
              "MessageResolvable"
            ]
          },
          "description": "The message to pin",
          "name": "message"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Message"
            ]
          },
          "description": "The messages that was pinned"
        }
      ],
      "name": "pinMessage",
      "longname": "TextChannel#pinMessage",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R001007",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Removes a pinned Message from the channel.\n   * @param {MessageResolvable} message The message to unpin\n   * @returns {Message} The messages that was pinned\n   */",
      "meta": {
        "range": [
          10625,
          11106
        ],
        "filename": "TextChannel.js",
        "lineno": 307,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100016979",
          "name": "TextChannel#removePinned",
          "type": "MethodDefinition",
          "paramnames": [
            "message"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Removes a pinned Message from the channel.",
      "params": [
        {
          "type": {
            "names": [
              "MessageResolvable"
            ]
          },
          "description": "The message to unpin",
          "name": "message"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Message"
            ]
          },
          "description": "The messages that was pinned"
        }
      ],
      "name": "removePinned",
      "longname": "TextChannel#removePinned",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R001010",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This will wait for a message to be send which matches a certain filter and time\n   * @param {Function} filter The filter to pass through which will make sure the message matches those requirements\n   * @returns {MessageCollector} The message collector class, with two events, MessageCollector.on('collect', message) and MessageCollector.on('end')\n   * @example \n   * // Waiting for a message response sent by the author and with the content of 'Hello there!'\n   * message.channel.send('Type `Hello there!` in 10 seconds');\n   * const collector = message.channel.collectMessage(m => m.content === 'Hello there!' && m.author.id === message.author.id);\n   * collector.on('collect', m => {\n   *    // m is our message object\n   *    console.log(m.content); // Returns 'Hello there!'\n   * });\n   * \n   * client.on('end', () => {\n   *    console.log('Unfortunately, the author didn't responde in time with the correct message!');\n   * });\n   */",
      "meta": {
        "range": [
          12074,
          12225
        ],
        "filename": "TextChannel.js",
        "lineno": 337,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017072",
          "name": "TextChannel#collectMessage",
          "type": "MethodDefinition",
          "paramnames": [
            "filter",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This will wait for a message to be send which matches a certain filter and time",
      "params": [
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "The filter to pass through which will make sure the message matches those requirements",
          "name": "filter"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "MessageCollector"
            ]
          },
          "description": "The message collector class, with two events, MessageCollector.on('collect', message) and MessageCollector.on('end')"
        }
      ],
      "examples": [
        "// Waiting for a message response sent by the author and with the content of 'Hello there!'\nmessage.channel.send('Type `Hello there!` in 10 seconds');\nconst collector = message.channel.collectMessage(m => m.content === 'Hello there!' && m.author.id === message.author.id);\ncollector.on('collect', m => {\n   // m is our message object\n   console.log(m.content); // Returns 'Hello there!'\n});\n\nclient.on('end', () => {\n   console.log('Unfortunately, the author didn't responde in time with the correct message!');\n});"
      ],
      "name": "collectMessage",
      "longname": "TextChannel#collectMessage",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "___id": "T000002R001013",
      "___s": true
    },
    {
      "comment": "/**\n * The options for sending/editting a message\n * @typedef {Object} MessageOptions\n * @property {Boolean} [tts = false] Whether the message should be sent as TTS or not\n * @property {String} [nonce = ''] The nonce for the message\n */",
      "meta": {
        "filename": "TextChannel.js",
        "lineno": 347,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "description": "The options for sending/editting a message",
      "kind": "typedef",
      "name": "MessageOptions",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "Boolean"
            ]
          },
          "optional": true,
          "defaultvalue": false,
          "description": "Whether the message should be sent as TTS or not",
          "name": "tts"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": "''",
          "description": "The nonce for the message",
          "name": "nonce"
        }
      ],
      "longname": "MessageOptions",
      "scope": "global",
      "___id": "T000002R001016",
      "___s": true
    },
    {
      "comment": "/**\n * @typedef {Object} UserResolvable\n * @property {String} Snowflake This could be the ID of the user\n * @property {User} User This could be an actual user class\n */",
      "meta": {
        "filename": "User.js",
        "lineno": 199,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {}
      },
      "kind": "typedef",
      "name": "UserResolvable",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "This could be the ID of the user",
          "name": "Snowflake"
        },
        {
          "type": {
            "names": [
              "User"
            ]
          },
          "description": "This could be an actual user class",
          "name": "User"
        }
      ],
      "longname": "UserResolvable",
      "scope": "global",
      "___id": "T000002R001018",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a User Object\n */",
      "meta": {
        "range": [
          182,
          5319
        ],
        "filename": "User.js",
        "lineno": 10,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017129",
          "name": "User",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a User Object",
      "name": "User",
      "longname": "User",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R001022",
      "___s": true
    },
    {
      "comment": "/**\n     * The client object \n     * @type {Client}\n     */",
      "meta": {
        "range": [
          294,
          314
        ],
        "filename": "User.js",
        "lineno": 18,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017139",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client object",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "User#client",
      "kind": "member",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001024",
      "___s": true
    },
    {
      "comment": "/**\n     * The ID of the user\n     * @type {String}\n     */",
      "meta": {
        "range": [
          386,
          402
        ],
        "filename": "User.js",
        "lineno": 25,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017145",
          "name": "this.id",
          "type": "MemberExpression",
          "value": "raw.id",
          "paramnames": []
        }
      },
      "description": "The ID of the user",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "id",
      "longname": "User#id",
      "kind": "member",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001025",
      "___s": true
    },
    {
      "comment": "/**\n     * The username of the user\n     * @type {String}\n     */",
      "meta": {
        "range": [
          481,
          509
        ],
        "filename": "User.js",
        "lineno": 33,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017153",
          "name": "this.username",
          "type": "MemberExpression",
          "value": "raw.username",
          "paramnames": []
        }
      },
      "description": "The username of the user",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "username",
      "longname": "User#username",
      "kind": "member",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001026",
      "___s": true
    },
    {
      "comment": "/**\n     * The four lettered discriminator of the user\n     * @type {String}\n     */",
      "meta": {
        "range": [
          606,
          644
        ],
        "filename": "User.js",
        "lineno": 40,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017161",
          "name": "this.discriminator",
          "type": "MemberExpression",
          "value": "raw.discriminator",
          "paramnames": []
        }
      },
      "description": "The four lettered discriminator of the user",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "discriminator",
      "longname": "User#discriminator",
      "kind": "member",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001027",
      "___s": true
    },
    {
      "comment": "/**\n     * The username+discriminator eg. Youssef#0001\n     * @type {String}\n     */",
      "meta": {
        "range": [
          741,
          791
        ],
        "filename": "User.js",
        "lineno": 47,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017169",
          "name": "this.tag",
          "type": "TemplateLiteral",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The username+discriminator eg. Youssef#0001",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "tag",
      "longname": "User#tag",
      "kind": "member",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001028",
      "___s": true
    },
    {
      "comment": "/**\n     * The avatar hash of the user\n     * @type {String}\n     */",
      "meta": {
        "range": [
          872,
          896
        ],
        "filename": "User.js",
        "lineno": 54,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017184",
          "name": "this.avatar",
          "type": "MemberExpression",
          "value": "raw.avatar",
          "paramnames": []
        }
      },
      "description": "The avatar hash of the user",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "avatar",
      "longname": "User#avatar",
      "kind": "member",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001029",
      "___s": true
    },
    {
      "comment": "/**\n     * The avatarURL of a a user, defaulted at png\n     * @type {String}\n     */",
      "meta": {
        "range": [
          993,
          1076
        ],
        "filename": "User.js",
        "lineno": 61,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017192",
          "name": "this.avatarURL",
          "type": "TemplateLiteral",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The avatarURL of a a user, defaulted at png",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "avatarURL",
      "longname": "User#avatarURL",
      "kind": "member",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001030",
      "___s": true
    },
    {
      "comment": "/**\n     * The presence of the user\n     * @type {Presence}\n     */",
      "meta": {
        "range": [
          1156,
          1214
        ],
        "filename": "User.js",
        "lineno": 68,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017207",
          "name": "this.presence",
          "type": "LogicalExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The presence of the user",
      "type": {
        "names": [
          "Presence"
        ]
      },
      "name": "presence",
      "longname": "User#presence",
      "kind": "member",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001031",
      "___s": true
    },
    {
      "comment": "/**\n     * Whether the use is a bot or not\n     * @type {Boolean}\n     */",
      "meta": {
        "range": [
          1300,
          1327
        ],
        "filename": "User.js",
        "lineno": 75,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017225",
          "name": "this.bot",
          "type": "LogicalExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "Whether the use is a bot or not",
      "type": {
        "names": [
          "Boolean"
        ]
      },
      "name": "bot",
      "longname": "User#bot",
      "kind": "member",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001032",
      "___s": true
    },
    {
      "comment": "/**\n     * The timestamp the user was created at\n     * @type {Date}\n     */",
      "meta": {
        "range": [
          1422,
          1486
        ],
        "filename": "User.js",
        "lineno": 82,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017235",
          "name": "this.createdTimestamp",
          "type": "MemberExpression",
          "value": ".timestamp",
          "paramnames": []
        }
      },
      "description": "The timestamp the user was created at",
      "type": {
        "names": [
          "Date"
        ]
      },
      "name": "createdTimestamp",
      "longname": "User#createdTimestamp",
      "kind": "member",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001033",
      "___s": true
    },
    {
      "comment": "/**\n     * The date the user was created at\n     * @type {Date}\n     */",
      "meta": {
        "range": [
          1570,
          1618
        ],
        "filename": "User.js",
        "lineno": 89,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017249",
          "name": "this.createdAt",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The date the user was created at",
      "type": {
        "names": [
          "Date"
        ]
      },
      "name": "createdAt",
      "longname": "User#createdAt",
      "kind": "member",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001034",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Returns the avatar's url of a user\n   * @param {Object} [options = {}] The options, format eg. \"png\" and size, eg. 256\n   * @returns {String} The user's avatar as a URL\n   */",
      "meta": {
        "range": [
          1827,
          2116
        ],
        "filename": "User.js",
        "lineno": 98,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017258",
          "name": "User#avatarURL",
          "type": "MethodDefinition",
          "paramnames": [
            "options"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Returns the avatar's url of a user",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options, format eg. \"png\" and size, eg. 256",
          "name": "options"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The user's avatar as a URL"
        }
      ],
      "name": "avatarURL",
      "longname": "User#avatarURL",
      "kind": "function",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001035",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will send a message to the channel specified\n   * @param {String|Object} content The string if it's a normal message or object if it's a richembed\n   * @param {Object} [opt = {}] The options, nonce and tts\n   * @returns {Promise<Message>} Returns a promise and discord message\n   * @example\n   * // Sending an embed\n   * User.send({title: \"Ping!\", description: \"This User Was Pinged!\", color: 0x00AE86});\n   * @example\n   * // Sending a tts message\n   * User.send(\"Hi!\", {tts: true});\n   */",
      "meta": {
        "range": [
          2648,
          4677
        ],
        "filename": "User.js",
        "lineno": 119,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017307",
          "name": "User#send",
          "type": "MethodDefinition",
          "paramnames": [
            "content",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will send a message to the channel specified",
      "params": [
        {
          "type": {
            "names": [
              "String",
              "Object"
            ]
          },
          "description": "The string if it's a normal message or object if it's a richembed",
          "name": "content"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options, nonce and tts",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Message>"
            ]
          },
          "description": "Returns a promise and discord message"
        }
      ],
      "examples": [
        "// Sending an embed\nUser.send({title: \"Ping!\", description: \"This User Was Pinged!\", color: 0x00AE86});",
        "// Sending a tts message\nUser.send(\"Hi!\", {tts: true});"
      ],
      "name": "send",
      "longname": "User#send",
      "kind": "function",
      "memberof": "User",
      "scope": "instance",
      "___id": "T000002R001036",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will mention a user\n   * @returns {String} The mention as a string: <@id>\n   */",
      "meta": {
        "range": [
          4798,
          4842
        ],
        "filename": "User.js",
        "lineno": 174,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017607",
          "name": "User#toString",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will mention a user",
      "returns": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The mention as a string: <@id>"
        }
      ],
      "name": "toString",
      "longname": "User#toString",
      "kind": "function",
      "memberof": "User",
      "scope": "instance",
      "params": [],
      "___id": "T000002R001055",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will create a dm with a user\n   * @returns {Promise<DMChannel>} The channel created\n   */",
      "meta": {
        "range": [
          4973,
          5316
        ],
        "filename": "User.js",
        "lineno": 183,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017618",
          "name": "User#createDM",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will create a dm with a user",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<DMChannel>"
            ]
          },
          "description": "The channel created"
        }
      ],
      "name": "createDM",
      "longname": "User#createDM",
      "kind": "function",
      "memberof": "User",
      "scope": "instance",
      "params": [],
      "___id": "T000002R001056",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a Voice Channel\n * @extends {GuildChannel} \n */",
      "meta": {
        "range": [
          213,
          1858
        ],
        "filename": "VoiceChannel.js",
        "lineno": 10,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017706",
          "name": "VoiceChannel",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "guild",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a Voice Channel",
      "augments": [
        "GuildChannel"
      ],
      "name": "VoiceChannel",
      "longname": "VoiceChannel",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R001063",
      "___s": true
    },
    {
      "comment": "/**\n     * The type of channel\n     * @type {String}\n     */",
      "meta": {
        "range": [
          393,
          412
        ],
        "filename": "VoiceChannel.js",
        "lineno": 19,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017724",
          "name": "this.type",
          "type": "Literal",
          "value": "voice",
          "paramnames": []
        }
      },
      "description": "The type of channel",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "type",
      "longname": "VoiceChannel#type",
      "kind": "member",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "___id": "T000002R001065",
      "___s": true
    },
    {
      "comment": "/**\n     * The bitrate of the call\n     * @type {Number}\n     */",
      "meta": {
        "range": [
          493,
          519
        ],
        "filename": "VoiceChannel.js",
        "lineno": 26,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017730",
          "name": "this.bitrate",
          "type": "MemberExpression",
          "value": "raw.bitrate",
          "paramnames": []
        }
      },
      "description": "The bitrate of the call",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "bitrate",
      "longname": "VoiceChannel#bitrate",
      "kind": "member",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "___id": "T000002R001066",
      "___s": true
    },
    {
      "comment": "/**\n     * The limit of the users in the call\n     * @type {Number}\n     */",
      "meta": {
        "range": [
          607,
          638
        ],
        "filename": "VoiceChannel.js",
        "lineno": 33,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017738",
          "name": "this.userLimit",
          "type": "MemberExpression",
          "value": "raw.user_limit",
          "paramnames": []
        }
      },
      "description": "The limit of the users in the call",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "userLimit",
      "longname": "VoiceChannel#userLimit",
      "kind": "member",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "___id": "T000002R001067",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the bitrate of the channel\n   * @param {Number} bitrate The bitrate of the channel\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          843,
          1265
        ],
        "filename": "VoiceChannel.js",
        "lineno": 43,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017745",
          "name": "VoiceChannel#setBitrate",
          "type": "MethodDefinition",
          "paramnames": [
            "bitrate"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the bitrate of the channel",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "The bitrate of the channel",
          "name": "bitrate"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "setBitrate",
      "longname": "VoiceChannel#setBitrate",
      "kind": "function",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "___id": "T000002R001068",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the user limit of the channel\n   * @param {Number} limit The user limit of the channel\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          1468,
          1855
        ],
        "filename": "VoiceChannel.js",
        "lineno": 62,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017830",
          "name": "VoiceChannel#setUserLimit",
          "type": "MethodDefinition",
          "paramnames": [
            "limit"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the user limit of the channel",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "The user limit of the channel",
          "name": "limit"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "setUserLimit",
      "longname": "VoiceChannel#setUserLimit",
      "kind": "function",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "___id": "T000002R001071",
      "___s": true
    },
    {
      "comment": "/**\n * This class represents a webhook\n */",
      "meta": {
        "range": [
          157,
          4175
        ],
        "filename": "Webhook.js",
        "lineno": 9,
        "columnno": 0,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017935",
          "name": "Webhook",
          "type": "ClassDeclaration",
          "paramnames": [
            "raw",
            "client"
          ]
        }
      },
      "classdesc": "This class represents a webhook",
      "name": "Webhook",
      "longname": "Webhook",
      "kind": "class",
      "scope": "global",
      "params": [],
      "___id": "T000002R001078",
      "___s": true
    },
    {
      "comment": "/**\n     * The webhook's token\n     * @type {String}\n     *\n     */",
      "meta": {
        "range": [
          284,
          306
        ],
        "filename": "Webhook.js",
        "lineno": 18,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017945",
          "name": "this.token",
          "type": "MemberExpression",
          "value": "raw.token",
          "paramnames": []
        }
      },
      "description": "The webhook's token",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "token",
      "longname": "Webhook#token",
      "kind": "member",
      "memberof": "Webhook",
      "scope": "instance",
      "___id": "T000002R001080",
      "___s": true
    },
    {
      "comment": "/**\n     * The webhook's name\n     * @type {String}\n     */",
      "meta": {
        "range": [
          378,
          398
        ],
        "filename": "Webhook.js",
        "lineno": 25,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017953",
          "name": "this.name",
          "type": "MemberExpression",
          "value": "raw.name",
          "paramnames": []
        }
      },
      "description": "The webhook's name",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "name",
      "longname": "Webhook#name",
      "kind": "member",
      "memberof": "Webhook",
      "scope": "instance",
      "___id": "T000002R001081",
      "___s": true
    },
    {
      "comment": "/**\n     * The webhook's channel\n     * @type {GuildChannel}\n     */",
      "meta": {
        "range": [
          479,
          529
        ],
        "filename": "Webhook.js",
        "lineno": 32,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017961",
          "name": "this.channel",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The webhook's channel",
      "type": {
        "names": [
          "GuildChannel"
        ]
      },
      "name": "channel",
      "longname": "Webhook#channel",
      "kind": "member",
      "memberof": "Webhook",
      "scope": "instance",
      "___id": "T000002R001082",
      "___s": true
    },
    {
      "comment": "/**\n     * The webhook's guild\n     * @type {Guild}\n     */",
      "meta": {
        "range": [
          601,
          645
        ],
        "filename": "Webhook.js",
        "lineno": 39,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017975",
          "name": "this.guild",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The webhook's guild",
      "type": {
        "names": [
          "Guild"
        ]
      },
      "name": "guild",
      "longname": "Webhook#guild",
      "kind": "member",
      "memberof": "Webhook",
      "scope": "instance",
      "___id": "T000002R001083",
      "___s": true
    },
    {
      "comment": "/**\n     * The webhook's id\n     * @type {String}\n     */",
      "meta": {
        "range": [
          715,
          731
        ],
        "filename": "Webhook.js",
        "lineno": 46,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017989",
          "name": "this.id",
          "type": "MemberExpression",
          "value": "raw.id",
          "paramnames": []
        }
      },
      "description": "The webhook's id",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "id",
      "longname": "Webhook#id",
      "kind": "member",
      "memberof": "Webhook",
      "scope": "instance",
      "___id": "T000002R001084",
      "___s": true
    },
    {
      "comment": "/**\n     * The webhook's avatar hash\n     * @type {String}\n     */",
      "meta": {
        "range": [
          810,
          834
        ],
        "filename": "Webhook.js",
        "lineno": 53,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100017997",
          "name": "this.avatar",
          "type": "MemberExpression",
          "value": "raw.avatar",
          "paramnames": []
        }
      },
      "description": "The webhook's avatar hash",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "avatar",
      "longname": "Webhook#avatar",
      "kind": "member",
      "memberof": "Webhook",
      "scope": "instance",
      "___id": "T000002R001085",
      "___s": true
    },
    {
      "comment": "/**\n     * The client that is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          1050,
          1070
        ],
        "filename": "Webhook.js",
        "lineno": 67,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100018022",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client that is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "Webhook#client",
      "kind": "member",
      "memberof": "Webhook",
      "scope": "instance",
      "___id": "T000002R001087",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will send a message as a webhook\n   * @param {String|Object} content The string if it's a normal message or object if it's a richembed\n   * @param {Object} [opt = {}] The options, nonce and tts {@link MessageOptions}\n   * @returns {Promise<Webhook>} The webhook used to send the message\n   */",
      "meta": {
        "range": [
          1409,
          3075
        ],
        "filename": "Webhook.js",
        "lineno": 77,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100018027",
          "name": "Webhook#send",
          "type": "MethodDefinition",
          "paramnames": [
            "content",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will send a message as a webhook",
      "params": [
        {
          "type": {
            "names": [
              "String",
              "Object"
            ]
          },
          "description": "The string if it's a normal message or object if it's a richembed",
          "name": "content"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "The options, nonce and tts {@link MessageOptions}",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Webhook>"
            ]
          },
          "description": "The webhook used to send the message"
        }
      ],
      "name": "send",
      "longname": "Webhook#send",
      "kind": "function",
      "memberof": "Webhook",
      "scope": "instance",
      "___id": "T000002R001088",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method deletes a webhook\n   * @returns {Promise<Webhook>} The deleted webhook\n   */",
      "meta": {
        "range": [
          3193,
          3407
        ],
        "filename": "Webhook.js",
        "lineno": 124,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100018280",
          "name": "Webhook#delete",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method deletes a webhook",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Webhook>"
            ]
          },
          "description": "The deleted webhook"
        }
      ],
      "name": "delete",
      "longname": "Webhook#delete",
      "kind": "function",
      "memberof": "Webhook",
      "scope": "instance",
      "params": [],
      "___id": "T000002R001105",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method edits a webhook\n   * @param {Object} opt The options: avatar, name and channel id\n   * @returns {Promise<Webhook>} The editted webhook\n   */",
      "meta": {
        "range": [
          3589,
          4173
        ],
        "filename": "Webhook.js",
        "lineno": 138,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100018327",
          "name": "Webhook#edit",
          "type": "MethodDefinition",
          "paramnames": [
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method edits a webhook",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The options: avatar, name and channel id",
          "name": "opt"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Webhook>"
            ]
          },
          "description": "The editted webhook"
        }
      ],
      "name": "edit",
      "longname": "Webhook#edit",
      "kind": "function",
      "memberof": "Webhook",
      "scope": "instance",
      "___id": "T000002R001106",
      "___s": true
    },
    {
      "comment": "/**\n   * Generates a Discord snowflake.\n   * <info>This hardcodes the worker ID as 1 and the process ID as 0.</info>\n   * @returns {Snowflake} The generated snowflake\n   */",
      "meta": {
        "range": [
          437,
          710
        ],
        "filename": "Snowflake.js",
        "lineno": 17,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Util",
        "code": {
          "id": "astnode100018482",
          "name": "SnowflakeUtil.generate",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Generates a Discord snowflake.\n<info>This hardcodes the worker ID as 1 and the process ID as 0.</info>",
      "returns": [
        {
          "type": {
            "names": [
              "Snowflake"
            ]
          },
          "description": "The generated snowflake"
        }
      ],
      "name": "generate",
      "longname": "SnowflakeUtil.generate",
      "kind": "function",
      "memberof": "SnowflakeUtil",
      "scope": "static",
      "params": [],
      "___id": "T000002R001118",
      "___s": true
    },
    {
      "comment": "/**\n   * A deconstructed snowflake.\n   * @typedef {Object} DeconstructedSnowflake\n   * @property {Number} timestamp Timestamp the snowflake was created\n   * @property {Date} date Date the snowflake was created\n   * @property {Number} workerID Worker ID in the snowflake\n   * @property {Number} processID Process ID in the snowflake\n   * @property {Number} increment Increment in the snowflake\n   * @property {String} binary Binary representation of the snowflake\n   */",
      "meta": {
        "filename": "Snowflake.js",
        "lineno": 24,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Util",
        "code": {}
      },
      "description": "A deconstructed snowflake.",
      "kind": "typedef",
      "name": "DeconstructedSnowflake",
      "type": {
        "names": [
          "Object"
        ]
      },
      "properties": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "Timestamp the snowflake was created",
          "name": "timestamp"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Date the snowflake was created",
          "name": "date"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "Worker ID in the snowflake",
          "name": "workerID"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "Process ID in the snowflake",
          "name": "processID"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "Increment in the snowflake",
          "name": "increment"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Binary representation of the snowflake",
          "name": "binary"
        }
      ],
      "longname": "DeconstructedSnowflake",
      "scope": "global",
      "___id": "T000002R001121",
      "___s": true
    },
    {
      "comment": "/**\n   * Deconstructs a Discord snowflake.\n   * @param {Snowflake} snowflake Snowflake to deconstruct\n   * @returns {DeconstructedSnowflake} Deconstructed snowflake\n   */",
      "meta": {
        "range": [
          1359,
          1901
        ],
        "filename": "Snowflake.js",
        "lineno": 40,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Util",
        "code": {
          "id": "astnode100018533",
          "name": "SnowflakeUtil.deconstruct",
          "type": "MethodDefinition",
          "paramnames": [
            "snowflake"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Deconstructs a Discord snowflake.",
      "params": [
        {
          "type": {
            "names": [
              "Snowflake"
            ]
          },
          "description": "Snowflake to deconstruct",
          "name": "snowflake"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "DeconstructedSnowflake"
            ]
          },
          "description": "Deconstructed snowflake"
        }
      ],
      "name": "deconstruct",
      "longname": "SnowflakeUtil.deconstruct",
      "kind": "function",
      "memberof": "SnowflakeUtil",
      "scope": "static",
      "___id": "T000002R001122",
      "___s": true
    },
    {
      "comment": "/**\n   * Transforms a snowflake from a decimal string to a bit string.\n   * @param {Snowflake} num Snowflake to be transformed\n   * @returns {String}\n   * @private\n   */",
      "meta": {
        "range": [
          295,
          661
        ],
        "filename": "Util.js",
        "lineno": 12,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Util",
        "code": {
          "id": "astnode100018651",
          "name": "Util.idToBinary",
          "type": "MethodDefinition",
          "paramnames": [
            "num"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Transforms a snowflake from a decimal string to a bit string.",
      "params": [
        {
          "type": {
            "names": [
              "Snowflake"
            ]
          },
          "description": "Snowflake to be transformed",
          "name": "num"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "String"
            ]
          }
        }
      ],
      "access": "private",
      "name": "idToBinary",
      "longname": "Util.idToBinary",
      "kind": "function",
      "memberof": "Util",
      "scope": "static",
      "___id": "T000002R001135",
      "___s": true
    },
    {
      "comment": "/**\n   * Transforms a snowflake from a bit string to a decimal string.\n   * @param {String} num Bit string to be transformed\n   * @returns {Snowflake}\n   * @private\n   */",
      "meta": {
        "range": [
          838,
          1336
        ],
        "filename": "Util.js",
        "lineno": 33,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Util",
        "code": {
          "id": "astnode100018739",
          "name": "Util.binaryToID",
          "type": "MethodDefinition",
          "paramnames": [
            "num"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Transforms a snowflake from a bit string to a decimal string.",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "Bit string to be transformed",
          "name": "num"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Snowflake"
            ]
          }
        }
      ],
      "access": "private",
      "name": "binaryToID",
      "longname": "Util.binaryToID",
      "kind": "function",
      "memberof": "Util",
      "scope": "static",
      "___id": "T000002R001143",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever a channel is created\n   * @event Client#channelAdded\n   * @param {GuildChannel} Channel The channel that was created and triggered this event\n   */",
      "meta": {
        "filename": "ChannelAdded.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever a channel is created",
      "kind": "event",
      "name": "channelAdded",
      "params": [
        {
          "type": {
            "names": [
              "GuildChannel"
            ]
          },
          "description": "The channel that was created and triggered this event",
          "name": "Channel"
        }
      ],
      "memberof": "Client",
      "longname": "client#channelAdded",
      "scope": "instance",
      "___id": "T000002R001154",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever a channel is deleted\n   * @event Client#channelRemoved\n   * @param {GuildChannel} Channel The channel that was deleted and triggered this event\n   */",
      "meta": {
        "filename": "ChannelRemoved.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever a channel is deleted",
      "kind": "event",
      "name": "channelRemoved",
      "params": [
        {
          "type": {
            "names": [
              "GuildChannel"
            ]
          },
          "description": "The channel that was deleted and triggered this event",
          "name": "Channel"
        }
      ],
      "memberof": "Client",
      "longname": "client#channelRemoved",
      "scope": "instance",
      "___id": "T000002R001157",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever the requirements for the collector are met\n   * @event MessageCollector#collect\n   * @param {Message} message The message that triggered the event to fire\n   */",
      "meta": {
        "filename": "Collect.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever the requirements for the collector are met",
      "kind": "event",
      "name": "collect",
      "params": [
        {
          "type": {
            "names": [
              "Message"
            ]
          },
          "description": "The message that triggered the event to fire",
          "name": "message"
        }
      ],
      "memberof": "MessageCollector",
      "longname": "MessageCollector#event:collect",
      "scope": "instance",
      "___id": "T000002R001160",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever the requirements for the collector are not met, such as the time ending\n   * @event MessageCollector#end\n   */",
      "meta": {
        "filename": "End.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever the requirements for the collector are not met, such as the time ending",
      "kind": "event",
      "name": "end",
      "memberof": "MessageCollector",
      "longname": "MessageCollector#event:end",
      "scope": "instance",
      "___id": "T000002R001163",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever a guild member is updated\n   * @event Client#guildMemberUpdate\n   * @param {Member} OldMember The original member\n   * @param {Member} NewMember The new member (updated)\n   */",
      "meta": {
        "filename": "GuildMemberUpdate.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever a guild member is updated",
      "kind": "event",
      "name": "guildMemberUpdate",
      "params": [
        {
          "type": {
            "names": [
              "Member"
            ]
          },
          "description": "The original member",
          "name": "OldMember"
        },
        {
          "type": {
            "names": [
              "Member"
            ]
          },
          "description": "The new member (updated)",
          "name": "NewMember"
        }
      ],
      "memberof": "Client",
      "longname": "client#guildMemberUpdate",
      "scope": "instance",
      "___id": "T000002R001166",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever a message is sent\n   * @event Client#message\n   * @param {Message} Message The message that triggered the event\n   */",
      "meta": {
        "filename": "MessageCreate.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever a message is sent",
      "kind": "event",
      "name": "message",
      "params": [
        {
          "type": {
            "names": [
              "Message"
            ]
          },
          "description": "The message that triggered the event",
          "name": "Message"
        }
      ],
      "memberof": "Client",
      "longname": "client#message",
      "scope": "instance",
      "___id": "T000002R001169",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever a user reacts on a message\n   * @event Client#messageReactionAdd\n   * @param {User} User The user that reacted on the message\n   * @param {MessageReaction} Reaction The reaction that was reacted\n   */",
      "meta": {
        "filename": "MessageReactionAdd.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever a user reacts on a message",
      "kind": "event",
      "name": "messageReactionAdd",
      "params": [
        {
          "type": {
            "names": [
              "User"
            ]
          },
          "description": "The user that reacted on the message",
          "name": "User"
        },
        {
          "type": {
            "names": [
              "MessageReaction"
            ]
          },
          "description": "The reaction that was reacted",
          "name": "Reaction"
        }
      ],
      "memberof": "Client",
      "longname": "client#messageReactionAdd",
      "scope": "instance",
      "___id": "T000002R001172",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever a message is deleted\n   * @event Client#messageRemoved\n   * @param {Message} Message The message that was deleted\n   */",
      "meta": {
        "filename": "MessageRemoved.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever a message is deleted",
      "kind": "event",
      "name": "messageRemoved",
      "params": [
        {
          "type": {
            "names": [
              "Message"
            ]
          },
          "description": "The message that was deleted",
          "name": "Message"
        }
      ],
      "memberof": "Client",
      "longname": "client#messageRemoved",
      "scope": "instance",
      "___id": "T000002R001175",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever a message is updated\n   * @event Client#messageUpdated\n   * @param {Message} OldMessage The original message\n   * @param {Message} NewMessage The updated message\n   */",
      "meta": {
        "filename": "MessageUpdated.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever a message is updated",
      "kind": "event",
      "name": "messageUpdated",
      "params": [
        {
          "type": {
            "names": [
              "Message"
            ]
          },
          "description": "The original message",
          "name": "OldMessage"
        },
        {
          "type": {
            "names": [
              "Message"
            ]
          },
          "description": "The updated message",
          "name": "NewMessage"
        }
      ],
      "memberof": "Client",
      "longname": "client#messageUpdated",
      "scope": "instance",
      "___id": "T000002R001178",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever the client makes a ping to the discord api\n   * @event Client#ping\n   */",
      "meta": {
        "filename": "Ping.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever the client makes a ping to the discord api",
      "kind": "event",
      "name": "ping",
      "memberof": "Client",
      "longname": "client#ping",
      "scope": "instance",
      "___id": "T000002R001181",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever a user updates their presence\n   * @event Client#presenceUpdate\n   * @param {Presence} Presence The user's presence\n   */",
      "meta": {
        "filename": "PresenceUpdate.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever a user updates their presence",
      "kind": "event",
      "name": "presenceUpdate",
      "params": [
        {
          "type": {
            "names": [
              "Presence"
            ]
          },
          "description": "The user's presence",
          "name": "Presence"
        }
      ],
      "memberof": "Client",
      "longname": "client#presenceUpdate",
      "scope": "instance",
      "___id": "T000002R001184",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever ANY event is emitted\n   * @event Client#raw\n   * @param {Object} Raw The raw data that discord api passes\n   */",
      "meta": {
        "filename": "Raw.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever ANY event is emitted",
      "kind": "event",
      "name": "raw",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The raw data that discord api passes",
          "name": "Raw"
        }
      ],
      "memberof": "Client",
      "longname": "client#raw",
      "scope": "instance",
      "___id": "T000002R001187",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted when the client logs in\n   * @event Client#ready\n   */",
      "meta": {
        "filename": "Ready.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted when the client logs in",
      "kind": "event",
      "name": "ready",
      "memberof": "Client",
      "longname": "client#ready",
      "scope": "instance",
      "___id": "T000002R001190",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever a user updates their presence\n   * @event Client#startTyping\n   * @param {User} User The user that started typing\n   * @param {Channel} Channel The channel the user typed in\n   **/",
      "meta": {
        "filename": "startTyping.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever a user updates their presence",
      "kind": "event",
      "name": "startTyping",
      "params": [
        {
          "type": {
            "names": [
              "User"
            ]
          },
          "description": "The user that started typing",
          "name": "User"
        },
        {
          "type": {
            "names": [
              "Channel"
            ]
          },
          "description": "The channel the user typed in",
          "name": "Channel"
        }
      ],
      "memberof": "Client",
      "longname": "client#startTyping",
      "scope": "instance",
      "___id": "T000002R001193",
      "___s": true
    },
    {
      "comment": "/**\n   * This event is emitted whenever a member's voice state changes, eg. they mute themselves\n   * @event Client#voiceStateUpdate\n   * @param {Member} Member The member that voice state was updated\n   * @param {VoiceChannel} VoiceChannel The voice channel the member was in when their voice state was updated\n   */",
      "meta": {
        "filename": "VoiceStateUpdate.js",
        "lineno": 2,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events",
        "code": {}
      },
      "description": "This event is emitted whenever a member's voice state changes, eg. they mute themselves",
      "kind": "event",
      "name": "voiceStateUpdate",
      "params": [
        {
          "type": {
            "names": [
              "Member"
            ]
          },
          "description": "The member that voice state was updated",
          "name": "Member"
        },
        {
          "type": {
            "names": [
              "VoiceChannel"
            ]
          },
          "description": "The voice channel the member was in when their voice state was updated",
          "name": "VoiceChannel"
        }
      ],
      "memberof": "Client",
      "longname": "client#voiceStateUpdate",
      "scope": "instance",
      "___id": "T000002R001196",
      "___s": true
    },
    {
      "kind": "package",
      "longname": "package:undefined",
      "files": [
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\AuditLog.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\AuditLogEntry.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\BannedUser.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\CategoryChannel.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\Client.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\Collection.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\DMChannel.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\Embed.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\Emoji.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\Guild.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\GuildChannel.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\Invite.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\Member.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\Message.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\MessageCollector.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\MessageReaction.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\PermissionOverwrites.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\Permissions.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\Presence.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\ReactionCollector.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\Role.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\TextChannel.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\User.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\VoiceChannel.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes\\Webhook.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Util\\Snowflake.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Util\\Util.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\ChannelAdded.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\ChannelRemoved.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\Collect.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\End.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\GuildMemberUpdate.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\MessageCreate.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\MessageReactionAdd.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\MessageRemoved.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\MessageUpdated.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\Ping.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\PresenceUpdate.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\Raw.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\Ready.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\startTyping.js",
        "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Events\\VoiceStateUpdate.js"
      ],
      "___id": "T000002R001198",
      "___s": true
    },
    {
      "comment": "/**\n     * The ID of the channel\n     * @type {String}\n     */",
      "meta": {
        "range": [
          491,
          507
        ],
        "filename": "GuildChannel.js",
        "lineno": 21,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008842",
          "name": "this.id",
          "type": "MemberExpression",
          "value": "raw.id",
          "paramnames": []
        }
      },
      "description": "The ID of the channel",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "id",
      "longname": "TextChannel#id",
      "kind": "member",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#id",
      "inherited": true,
      "___id": "T000002R001199",
      "___s": true
    },
    {
      "comment": "/**\n     * The client object which is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          597,
          617
        ],
        "filename": "GuildChannel.js",
        "lineno": 28,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008850",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client object which is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "TextChannel#client",
      "kind": "member",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#client",
      "inherited": true,
      "___id": "T000002R001200",
      "___s": true
    },
    {
      "comment": "/**\n     * The name of the channel\n     * @type {String}\n     */",
      "meta": {
        "range": [
          694,
          714
        ],
        "filename": "GuildChannel.js",
        "lineno": 35,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008856",
          "name": "this.name",
          "type": "MemberExpression",
          "value": "raw.name",
          "paramnames": []
        }
      },
      "description": "The name of the channel",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "name",
      "longname": "TextChannel#name",
      "kind": "member",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#name",
      "inherited": true,
      "___id": "T000002R001201",
      "___s": true
    },
    {
      "comment": "/**\n     * The position of the channel on the left-hand side\n     * @type {Number}\n     */",
      "meta": {
        "range": [
          817,
          845
        ],
        "filename": "GuildChannel.js",
        "lineno": 42,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008864",
          "name": "this.position",
          "type": "MemberExpression",
          "value": "raw.position",
          "paramnames": []
        }
      },
      "description": "The position of the channel on the left-hand side",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "position",
      "longname": "TextChannel#position",
      "kind": "member",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#position",
      "inherited": true,
      "___id": "T000002R001202",
      "___s": true
    },
    {
      "comment": "/**\n     * The guild the channel is in\n     * @type {Guild}\n     */",
      "meta": {
        "range": [
          924,
          942
        ],
        "filename": "GuildChannel.js",
        "lineno": 48,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008872",
          "name": "this.guild",
          "type": "Identifier",
          "value": "guild",
          "paramnames": []
        }
      },
      "description": "The guild the channel is in",
      "type": {
        "names": [
          "Guild"
        ]
      },
      "name": "guild",
      "longname": "TextChannel#guild",
      "kind": "member",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#guild",
      "inherited": true,
      "___id": "T000002R001203",
      "___s": true
    },
    {
      "comment": "/**\n     * The permission overwrites of the channel\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          1040,
          1084
        ],
        "filename": "GuildChannel.js",
        "lineno": 55,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008878",
          "name": "this.permissionOverwrites",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The permission overwrites of the channel",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "permissionOverwrites",
      "longname": "TextChannel#permissionOverwrites",
      "kind": "member",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#permissionOverwrites",
      "inherited": true,
      "___id": "T000002R001204",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the name of the channel\n   * @param {String} newname The name of the channel\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   * @example\n   * //Naming a channel 'general'\n   * channel.setName('general')\n   * // This example is for most methods on this constructor\n   */",
      "meta": {
        "range": [
          1642,
          3105
        ],
        "filename": "GuildChannel.js",
        "lineno": 73,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008924",
          "name": "GuildChannel#setName",
          "type": "MethodDefinition",
          "paramnames": [
            "newname"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the name of the channel",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of the channel",
          "name": "newname"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "examples": [
        "//Naming a channel 'general'\nchannel.setName('general')\n// This example is for most methods on this constructor"
      ],
      "name": "setName",
      "longname": "TextChannel#setName",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#setName",
      "inherited": true,
      "___id": "T000002R001205",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the position of the channel\n   * @param {Number} position The position of the channel\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          3307,
          4780
        ],
        "filename": "GuildChannel.js",
        "lineno": 112,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100009187",
          "name": "GuildChannel#setPosition",
          "type": "MethodDefinition",
          "paramnames": [
            "position"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the position of the channel",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "The position of the channel",
          "name": "position"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "setPosition",
      "longname": "TextChannel#setPosition",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#setPosition",
      "inherited": true,
      "___id": "T000002R001206",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the parent of the channel\n   * @param {GuildChannelResolvable} newparent The parent channel\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          4988,
          6467
        ],
        "filename": "GuildChannel.js",
        "lineno": 151,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100009450",
          "name": "GuildChannel#setParent",
          "type": "MethodDefinition",
          "paramnames": [
            "newparent"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the parent of the channel",
      "params": [
        {
          "type": {
            "names": [
              "GuildChannelResolvable"
            ]
          },
          "description": "The parent channel",
          "name": "newparent"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "setParent",
      "longname": "TextChannel#setParent",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#setParent",
      "inherited": true,
      "___id": "T000002R001207",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Deletes the channel\n   * @returns {Promise<GuildChannel>} Returns a promise and the Guild Channel deleted\n   */",
      "meta": {
        "range": [
          6608,
          7674
        ],
        "filename": "GuildChannel.js",
        "lineno": 189,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100009714",
          "name": "GuildChannel#delete",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Deletes the channel",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and the Guild Channel deleted"
        }
      ],
      "name": "delete",
      "longname": "TextChannel#delete",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "params": [],
      "inherits": "GuildChannel#delete",
      "inherited": true,
      "___id": "T000002R001208",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Edits the channel\n   * @param {Object} options Available options: name, position, topic, nsfw, bitrate, userlimit and parent, similar to above methods\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          7936,
          9988
        ],
        "filename": "GuildChannel.js",
        "lineno": 220,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100009894",
          "name": "GuildChannel#edit",
          "type": "MethodDefinition",
          "paramnames": [
            "options"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Edits the channel",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Available options: name, position, topic, nsfw, bitrate, userlimit and parent, similar to above methods",
          "name": "options"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "edit",
      "longname": "TextChannel#edit",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#edit",
      "inherited": true,
      "___id": "T000002R001209",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Edit permissions of the channels\n   * @param {role} RoleOrMember The role or the member to overwrite the permissions\n   * @param {Object} opt Available options: Allow (Bitfield of Permissions) and Deny (Bitfield of Permissions)\n   * @example \n   * // Here we will stop a member from sending a message in a certain channel\n   * guildchannel.editPermissions(message.member, {allow: [], deny: ['SEND_MESSAGES']}).then(c => {\n   *    console.log(`Updated permissions for ${message.author.username}, and stopped them from sending messages`);\n   * });\n   */",
      "meta": {
        "range": [
          10569,
          11324
        ],
        "filename": "GuildChannel.js",
        "lineno": 272,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010247",
          "name": "GuildChannel#editPermissions",
          "type": "MethodDefinition",
          "paramnames": [
            "RoleOrMember",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Edit permissions of the channels",
      "params": [
        {
          "type": {
            "names": [
              "role"
            ]
          },
          "description": "The role or the member to overwrite the permissions",
          "name": "RoleOrMember"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Available options: Allow (Bitfield of Permissions) and Deny (Bitfield of Permissions)",
          "name": "opt"
        }
      ],
      "examples": [
        "// Here we will stop a member from sending a message in a certain channel\nguildchannel.editPermissions(message.member, {allow: [], deny: ['SEND_MESSAGES']}).then(c => {\n   console.log(`Updated permissions for ${message.author.username}, and stopped them from sending messages`);\n});"
      ],
      "name": "editPermissions",
      "longname": "TextChannel#editPermissions",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#editPermissions",
      "inherited": true,
      "___id": "T000002R001210",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method creates a webhook\n   * @param {String} name The name of webhook\n   * @param {String} icon The url of the icon for the webhook\n   * @returns {Promise<Webhook>} The created webhook\n   */",
      "meta": {
        "range": [
          11550,
          12045
        ],
        "filename": "GuildChannel.js",
        "lineno": 295,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010382",
          "name": "GuildChannel#createWebhook",
          "type": "MethodDefinition",
          "paramnames": [
            "name",
            "icon"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method creates a webhook",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of webhook",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The url of the icon for the webhook",
          "name": "icon"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Webhook>"
            ]
          },
          "description": "The created webhook"
        }
      ],
      "name": "createWebhook",
      "longname": "TextChannel#createWebhook",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#createWebhook",
      "inherited": true,
      "___id": "T000002R001211",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will fetch a guilds webhooks\n   * @returns {Promise<Collection>} A collection of fetched webhooks\n   */",
      "meta": {
        "range": [
          12191,
          12673
        ],
        "filename": "GuildChannel.js",
        "lineno": 315,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010475",
          "name": "GuildChannel#fetchWebhooks",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will fetch a guilds webhooks",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "A collection of fetched webhooks"
        }
      ],
      "name": "fetchWebhooks",
      "longname": "TextChannel#fetchWebhooks",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "params": [],
      "inherits": "GuildChannel#fetchWebhooks",
      "inherited": true,
      "___id": "T000002R001212",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method fetches a webhook\n   * @param {String} id The id of the webhook to fetch\n   * @returns {Promise<Webhook>} The fetched webhook\n   */",
      "meta": {
        "range": [
          12846,
          13068
        ],
        "filename": "GuildChannel.js",
        "lineno": 334,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010564",
          "name": "GuildChannel#fetchWebhook",
          "type": "MethodDefinition",
          "paramnames": [
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method fetches a webhook",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The id of the webhook to fetch",
          "name": "id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Webhook>"
            ]
          },
          "description": "The fetched webhook"
        }
      ],
      "name": "fetchWebhook",
      "longname": "TextChannel#fetchWebhook",
      "kind": "function",
      "memberof": "TextChannel",
      "scope": "instance",
      "inherits": "GuildChannel#fetchWebhook",
      "inherited": true,
      "___id": "T000002R001213",
      "___s": true
    },
    {
      "comment": "/**\n     * The ID of the channel\n     * @type {String}\n     */",
      "meta": {
        "range": [
          491,
          507
        ],
        "filename": "GuildChannel.js",
        "lineno": 21,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008842",
          "name": "this.id",
          "type": "MemberExpression",
          "value": "raw.id",
          "paramnames": []
        }
      },
      "description": "The ID of the channel",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "id",
      "longname": "VoiceChannel#id",
      "kind": "member",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#id",
      "inherited": true,
      "___id": "T000002R001214",
      "___s": true
    },
    {
      "comment": "/**\n     * The client object which is logged in\n     * @type {Client}\n     */",
      "meta": {
        "range": [
          597,
          617
        ],
        "filename": "GuildChannel.js",
        "lineno": 28,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008850",
          "name": "this.client",
          "type": "Identifier",
          "value": "client",
          "paramnames": []
        }
      },
      "description": "The client object which is logged in",
      "type": {
        "names": [
          "Client"
        ]
      },
      "name": "client",
      "longname": "VoiceChannel#client",
      "kind": "member",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#client",
      "inherited": true,
      "___id": "T000002R001215",
      "___s": true
    },
    {
      "comment": "/**\n     * The name of the channel\n     * @type {String}\n     */",
      "meta": {
        "range": [
          694,
          714
        ],
        "filename": "GuildChannel.js",
        "lineno": 35,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008856",
          "name": "this.name",
          "type": "MemberExpression",
          "value": "raw.name",
          "paramnames": []
        }
      },
      "description": "The name of the channel",
      "type": {
        "names": [
          "String"
        ]
      },
      "name": "name",
      "longname": "VoiceChannel#name",
      "kind": "member",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#name",
      "inherited": true,
      "___id": "T000002R001216",
      "___s": true
    },
    {
      "comment": "/**\n     * The position of the channel on the left-hand side\n     * @type {Number}\n     */",
      "meta": {
        "range": [
          817,
          845
        ],
        "filename": "GuildChannel.js",
        "lineno": 42,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008864",
          "name": "this.position",
          "type": "MemberExpression",
          "value": "raw.position",
          "paramnames": []
        }
      },
      "description": "The position of the channel on the left-hand side",
      "type": {
        "names": [
          "Number"
        ]
      },
      "name": "position",
      "longname": "VoiceChannel#position",
      "kind": "member",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#position",
      "inherited": true,
      "___id": "T000002R001217",
      "___s": true
    },
    {
      "comment": "/**\n     * The guild the channel is in\n     * @type {Guild}\n     */",
      "meta": {
        "range": [
          924,
          942
        ],
        "filename": "GuildChannel.js",
        "lineno": 48,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008872",
          "name": "this.guild",
          "type": "Identifier",
          "value": "guild",
          "paramnames": []
        }
      },
      "description": "The guild the channel is in",
      "type": {
        "names": [
          "Guild"
        ]
      },
      "name": "guild",
      "longname": "VoiceChannel#guild",
      "kind": "member",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#guild",
      "inherited": true,
      "___id": "T000002R001218",
      "___s": true
    },
    {
      "comment": "/**\n     * The permission overwrites of the channel\n     * @type {Collection}\n     */",
      "meta": {
        "range": [
          1040,
          1084
        ],
        "filename": "GuildChannel.js",
        "lineno": 55,
        "columnno": 4,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008878",
          "name": "this.permissionOverwrites",
          "type": "NewExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The permission overwrites of the channel",
      "type": {
        "names": [
          "Collection"
        ]
      },
      "name": "permissionOverwrites",
      "longname": "VoiceChannel#permissionOverwrites",
      "kind": "member",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#permissionOverwrites",
      "inherited": true,
      "___id": "T000002R001219",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the name of the channel\n   * @param {String} newname The name of the channel\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   * @example\n   * //Naming a channel 'general'\n   * channel.setName('general')\n   * // This example is for most methods on this constructor\n   */",
      "meta": {
        "range": [
          1642,
          3105
        ],
        "filename": "GuildChannel.js",
        "lineno": 73,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100008924",
          "name": "GuildChannel#setName",
          "type": "MethodDefinition",
          "paramnames": [
            "newname"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the name of the channel",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of the channel",
          "name": "newname"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "examples": [
        "//Naming a channel 'general'\nchannel.setName('general')\n// This example is for most methods on this constructor"
      ],
      "name": "setName",
      "longname": "VoiceChannel#setName",
      "kind": "function",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#setName",
      "inherited": true,
      "___id": "T000002R001220",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the position of the channel\n   * @param {Number} position The position of the channel\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          3307,
          4780
        ],
        "filename": "GuildChannel.js",
        "lineno": 112,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100009187",
          "name": "GuildChannel#setPosition",
          "type": "MethodDefinition",
          "paramnames": [
            "position"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the position of the channel",
      "params": [
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "The position of the channel",
          "name": "position"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "setPosition",
      "longname": "VoiceChannel#setPosition",
      "kind": "function",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#setPosition",
      "inherited": true,
      "___id": "T000002R001221",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Sets the parent of the channel\n   * @param {GuildChannelResolvable} newparent The parent channel\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          4988,
          6467
        ],
        "filename": "GuildChannel.js",
        "lineno": 151,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100009450",
          "name": "GuildChannel#setParent",
          "type": "MethodDefinition",
          "paramnames": [
            "newparent"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Sets the parent of the channel",
      "params": [
        {
          "type": {
            "names": [
              "GuildChannelResolvable"
            ]
          },
          "description": "The parent channel",
          "name": "newparent"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "setParent",
      "longname": "VoiceChannel#setParent",
      "kind": "function",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#setParent",
      "inherited": true,
      "___id": "T000002R001222",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Deletes the channel\n   * @returns {Promise<GuildChannel>} Returns a promise and the Guild Channel deleted\n   */",
      "meta": {
        "range": [
          6608,
          7674
        ],
        "filename": "GuildChannel.js",
        "lineno": 189,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100009714",
          "name": "GuildChannel#delete",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Deletes the channel",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and the Guild Channel deleted"
        }
      ],
      "name": "delete",
      "longname": "VoiceChannel#delete",
      "kind": "function",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "params": [],
      "inherits": "GuildChannel#delete",
      "inherited": true,
      "___id": "T000002R001223",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Edits the channel\n   * @param {Object} options Available options: name, position, topic, nsfw, bitrate, userlimit and parent, similar to above methods\n   * @returns {Promise<GuildChannel>} Returns a promise and a Guild Channel\n   */",
      "meta": {
        "range": [
          7936,
          9988
        ],
        "filename": "GuildChannel.js",
        "lineno": 220,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100009894",
          "name": "GuildChannel#edit",
          "type": "MethodDefinition",
          "paramnames": [
            "options"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Edits the channel",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Available options: name, position, topic, nsfw, bitrate, userlimit and parent, similar to above methods",
          "name": "options"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GuildChannel>"
            ]
          },
          "description": "Returns a promise and a Guild Channel"
        }
      ],
      "name": "edit",
      "longname": "VoiceChannel#edit",
      "kind": "function",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#edit",
      "inherited": true,
      "___id": "T000002R001224",
      "___s": true
    },
    {
      "comment": "/**\n   * @description Edit permissions of the channels\n   * @param {role} RoleOrMember The role or the member to overwrite the permissions\n   * @param {Object} opt Available options: Allow (Bitfield of Permissions) and Deny (Bitfield of Permissions)\n   * @example \n   * // Here we will stop a member from sending a message in a certain channel\n   * guildchannel.editPermissions(message.member, {allow: [], deny: ['SEND_MESSAGES']}).then(c => {\n   *    console.log(`Updated permissions for ${message.author.username}, and stopped them from sending messages`);\n   * });\n   */",
      "meta": {
        "range": [
          10569,
          11324
        ],
        "filename": "GuildChannel.js",
        "lineno": 272,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010247",
          "name": "GuildChannel#editPermissions",
          "type": "MethodDefinition",
          "paramnames": [
            "RoleOrMember",
            "opt"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Edit permissions of the channels",
      "params": [
        {
          "type": {
            "names": [
              "role"
            ]
          },
          "description": "The role or the member to overwrite the permissions",
          "name": "RoleOrMember"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Available options: Allow (Bitfield of Permissions) and Deny (Bitfield of Permissions)",
          "name": "opt"
        }
      ],
      "examples": [
        "// Here we will stop a member from sending a message in a certain channel\nguildchannel.editPermissions(message.member, {allow: [], deny: ['SEND_MESSAGES']}).then(c => {\n   console.log(`Updated permissions for ${message.author.username}, and stopped them from sending messages`);\n});"
      ],
      "name": "editPermissions",
      "longname": "VoiceChannel#editPermissions",
      "kind": "function",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#editPermissions",
      "inherited": true,
      "___id": "T000002R001225",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method creates a webhook\n   * @param {String} name The name of webhook\n   * @param {String} icon The url of the icon for the webhook\n   * @returns {Promise<Webhook>} The created webhook\n   */",
      "meta": {
        "range": [
          11550,
          12045
        ],
        "filename": "GuildChannel.js",
        "lineno": 295,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010382",
          "name": "GuildChannel#createWebhook",
          "type": "MethodDefinition",
          "paramnames": [
            "name",
            "icon"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method creates a webhook",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The name of webhook",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The url of the icon for the webhook",
          "name": "icon"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Webhook>"
            ]
          },
          "description": "The created webhook"
        }
      ],
      "name": "createWebhook",
      "longname": "VoiceChannel#createWebhook",
      "kind": "function",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#createWebhook",
      "inherited": true,
      "___id": "T000002R001226",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method will fetch a guilds webhooks\n   * @returns {Promise<Collection>} A collection of fetched webhooks\n   */",
      "meta": {
        "range": [
          12191,
          12673
        ],
        "filename": "GuildChannel.js",
        "lineno": 315,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010475",
          "name": "GuildChannel#fetchWebhooks",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "This method will fetch a guilds webhooks",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Collection>"
            ]
          },
          "description": "A collection of fetched webhooks"
        }
      ],
      "name": "fetchWebhooks",
      "longname": "VoiceChannel#fetchWebhooks",
      "kind": "function",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "params": [],
      "inherits": "GuildChannel#fetchWebhooks",
      "inherited": true,
      "___id": "T000002R001227",
      "___s": true
    },
    {
      "comment": "/**\n   * @description This method fetches a webhook\n   * @param {String} id The id of the webhook to fetch\n   * @returns {Promise<Webhook>} The fetched webhook\n   */",
      "meta": {
        "range": [
          12846,
          13068
        ],
        "filename": "GuildChannel.js",
        "lineno": 334,
        "columnno": 2,
        "path": "C:\\Users\\youss\\Desktop\\dungeon.js\\src\\Classes",
        "code": {
          "id": "astnode100010564",
          "name": "GuildChannel#fetchWebhook",
          "type": "MethodDefinition",
          "paramnames": [
            "id"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "This method fetches a webhook",
      "params": [
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "description": "The id of the webhook to fetch",
          "name": "id"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Webhook>"
            ]
          },
          "description": "The fetched webhook"
        }
      ],
      "name": "fetchWebhook",
      "longname": "VoiceChannel#fetchWebhook",
      "kind": "function",
      "memberof": "VoiceChannel",
      "scope": "instance",
      "inherits": "GuildChannel#fetchWebhook",
      "inherited": true,
      "___id": "T000002R001228",
      "___s": true
    }
  ]
}